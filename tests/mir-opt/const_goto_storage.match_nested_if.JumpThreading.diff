- // MIR for `match_nested_if` before JumpThreading
+ // MIR for `match_nested_if` after JumpThreading
  
  fn match_nested_if() -> bool {
      let mut _0: bool;
      let _1: bool;
      let mut _2: ();
      let mut _3: bool;
      let mut _4: bool;
      let mut _5: bool;
      let mut _6: bool;
      scope 1 {
          debug val => _1;
      }
  
      bb0: {
          StorageLive(_1);
          StorageLive(_2);
          _2 = ();
          StorageLive(_3);
          StorageLive(_4);
          StorageLive(_5);
          StorageLive(_6);
          _6 = const true;
-         switchInt(move _6) -> [0: bb2, otherwise: bb1];
+         goto -> bb1;
      }
  
      bb1: {
          _5 = const true;
-         goto -> bb3;
+         goto -> bb13;
      }
  
      bb2: {
          _5 = const false;
          goto -> bb3;
      }
  
      bb3: {
          StorageDead(_6);
-         switchInt(move _5) -> [0: bb5, otherwise: bb4];
+         goto -> bb5;
      }
  
      bb4: {
          _4 = const true;
-         goto -> bb6;
+         goto -> bb14;
      }
  
      bb5: {
          _4 = const false;
          goto -> bb6;
      }
  
      bb6: {
          StorageDead(_5);
-         switchInt(move _4) -> [0: bb8, otherwise: bb7];
+         goto -> bb8;
      }
  
      bb7: {
          _3 = const true;
-         goto -> bb9;
+         goto -> bb15;
      }
  
      bb8: {
          _3 = const false;
          goto -> bb9;
      }
  
      bb9: {
-         switchInt(move _3) -> [0: bb11, otherwise: bb10];
+         goto -> bb11;
      }
  
      bb10: {
          StorageDead(_4);
          StorageDead(_3);
          _1 = const true;
          goto -> bb12;
      }
  
      bb11: {
          StorageDead(_4);
          StorageDead(_3);
          _1 = const false;
          goto -> bb12;
      }
  
      bb12: {
          StorageDead(_2);
          _0 = _1;
          StorageDead(_1);
          return;
+     }
+ 
+     bb13: {
+         StorageDead(_6);
+         goto -> bb4;
+     }
+ 
+     bb14: {
+         StorageDead(_5);
+         goto -> bb7;
+     }
+ 
+     bb15: {
+         goto -> bb10;
      }
  }
  
