// MIR for `autolink_email` after PreCodegen

fn autolink_email(_1: &[u8]) -> Option<usize> {
    debug s => _1;
    let mut _0: std::option::Option<usize>;
    let mut _2: usize;
    let mut _3: usize;
    let mut _5: u8;
    let mut _6: State;
    let mut _7: usize;
    let mut _8: bool;
    let mut _9: usize;
    let mut _10: &u8;
    let mut _11: bool;
    let mut _12: bool;
    let mut _13: bool;
    let mut _14: bool;
    let mut _15: bool;
    let mut _16: bool;
    let mut _17: bool;
    let mut _18: bool;
    let mut _19: bool;
    let mut _20: bool;
    let mut _21: usize;
    let mut _22: bool;
    let mut _23: usize;
    let mut _24: &u8;
    let mut _25: bool;
    let mut _26: bool;
    let mut _27: bool;
    let mut _28: bool;
    let mut _29: bool;
    let mut _30: bool;
    let mut _31: bool;
    let mut _32: bool;
    let mut _33: bool;
    let mut _34: bool;
    let mut _35: usize;
    let mut _36: bool;
    let mut _37: usize;
    let mut _38: &u8;
    let mut _39: bool;
    let mut _40: bool;
    let mut _41: bool;
    let mut _42: bool;
    let mut _43: bool;
    let mut _44: bool;
    let mut _45: usize;
    let mut _46: bool;
    let mut _47: usize;
    let mut _48: &u8;
    let mut _49: usize;
    let mut _50: bool;
    let mut _51: usize;
    let mut _52: &u8;
    let mut _53: bool;
    let mut _54: bool;
    let mut _55: bool;
    let mut _56: bool;
    let mut _57: bool;
    let mut _58: bool;
    let mut _59: bool;
    let mut _60: bool;
    let mut _61: bool;
    let mut _62: bool;
    let mut _63: bool;
    let mut _64: bool;
    let mut _65: usize;
    let mut _66: bool;
    let mut _67: usize;
    let mut _68: &u8;
    let mut _69: usize;
    let mut _70: bool;
    let mut _71: usize;
    let mut _72: &u8;
    let mut _73: bool;
    let mut _74: bool;
    let mut _75: bool;
    let mut _76: bool;
    let mut _77: bool;
    let mut _78: bool;
    let mut _79: bool;
    let mut _80: bool;
    let mut _81: bool;
    let mut _82: bool;
    let mut _83: bool;
    let mut _84: bool;
    let mut _85: usize;
    let mut _86: bool;
    let mut _87: usize;
    let mut _88: &u8;
    let mut _89: usize;
    let mut _90: bool;
    let mut _91: usize;
    let mut _92: &u8;
    let mut _93: bool;
    let mut _94: bool;
    let mut _95: bool;
    let mut _96: bool;
    let mut _97: bool;
    let mut _98: bool;
    let mut _99: bool;
    let mut _100: bool;
    let mut _101: bool;
    let mut _102: bool;
    let mut _103: bool;
    let mut _104: bool;
    let mut _105: usize;
    let mut _106: bool;
    let mut _107: usize;
    let mut _108: &u8;
    let mut _109: usize;
    let mut _110: bool;
    let mut _111: usize;
    let mut _112: &u8;
    let mut _113: bool;
    let mut _114: bool;
    let mut _115: bool;
    let mut _116: bool;
    let mut _117: bool;
    let mut _118: bool;
    let mut _119: bool;
    let mut _120: bool;
    let mut _121: bool;
    let mut _122: bool;
    let mut _123: bool;
    let mut _124: bool;
    let mut _125: usize;
    let mut _126: bool;
    let mut _127: usize;
    let mut _128: &u8;
    let mut _129: usize;
    let mut _130: bool;
    let mut _131: usize;
    let mut _132: &u8;
    let mut _133: bool;
    let mut _134: bool;
    let mut _135: bool;
    let mut _136: bool;
    let mut _137: bool;
    let mut _138: bool;
    let mut _139: bool;
    let mut _140: bool;
    let mut _141: bool;
    let mut _142: bool;
    let mut _143: bool;
    let mut _144: bool;
    let mut _145: usize;
    let mut _146: bool;
    let mut _147: usize;
    let mut _148: &u8;
    let mut _149: usize;
    let mut _150: bool;
    let mut _151: usize;
    let mut _152: &u8;
    let mut _153: bool;
    let mut _154: bool;
    let mut _155: bool;
    let mut _156: bool;
    let mut _157: bool;
    let mut _158: bool;
    let mut _159: bool;
    let mut _160: bool;
    let mut _161: bool;
    let mut _162: bool;
    let mut _163: bool;
    let mut _164: bool;
    let mut _165: usize;
    let mut _166: bool;
    let mut _167: usize;
    let mut _168: &u8;
    let mut _169: usize;
    let mut _170: bool;
    let mut _171: usize;
    let mut _172: &u8;
    let mut _173: bool;
    let mut _174: bool;
    let mut _175: bool;
    let mut _176: bool;
    let mut _177: bool;
    let mut _178: bool;
    let mut _179: bool;
    let mut _180: bool;
    let mut _181: bool;
    let mut _182: bool;
    let mut _183: bool;
    let mut _184: bool;
    let mut _185: usize;
    let mut _186: bool;
    let mut _187: usize;
    let mut _188: &u8;
    let mut _189: usize;
    let mut _190: bool;
    let mut _191: usize;
    let mut _192: &u8;
    let mut _193: bool;
    let mut _194: bool;
    let mut _195: bool;
    let mut _196: bool;
    let mut _197: bool;
    let mut _198: bool;
    let mut _199: bool;
    let mut _200: bool;
    let mut _201: bool;
    let mut _202: bool;
    let mut _203: bool;
    let mut _204: bool;
    let mut _205: usize;
    let mut _206: bool;
    let mut _207: usize;
    let mut _208: &u8;
    let mut _209: usize;
    let mut _210: bool;
    let mut _211: usize;
    let mut _212: &u8;
    let mut _213: bool;
    let mut _214: bool;
    let mut _215: bool;
    let mut _216: bool;
    let mut _217: bool;
    let mut _218: bool;
    let mut _219: bool;
    let mut _220: bool;
    let mut _221: bool;
    let mut _222: bool;
    let mut _223: bool;
    let mut _224: bool;
    let mut _225: usize;
    let mut _226: bool;
    let mut _227: usize;
    let mut _228: &u8;
    let mut _229: usize;
    let mut _230: bool;
    let mut _231: usize;
    let mut _232: &u8;
    let mut _233: bool;
    let mut _234: bool;
    let mut _235: bool;
    let mut _236: bool;
    let mut _237: bool;
    let mut _238: bool;
    let mut _239: bool;
    let mut _240: bool;
    let mut _241: bool;
    let mut _242: bool;
    let mut _243: bool;
    let mut _244: bool;
    let mut _245: usize;
    let mut _246: bool;
    let mut _247: usize;
    let mut _248: &u8;
    let mut _249: usize;
    let mut _250: bool;
    let mut _251: usize;
    let mut _252: &u8;
    let mut _253: bool;
    let mut _254: bool;
    let mut _255: bool;
    let mut _256: bool;
    let mut _257: bool;
    let mut _258: bool;
    let mut _259: bool;
    let mut _260: bool;
    let mut _261: bool;
    let mut _262: bool;
    let mut _263: bool;
    let mut _264: bool;
    let mut _265: usize;
    let mut _266: bool;
    let mut _267: usize;
    let mut _268: &u8;
    let mut _269: usize;
    let mut _270: bool;
    let mut _271: usize;
    let mut _272: &u8;
    let mut _273: bool;
    let mut _274: bool;
    let mut _275: bool;
    let mut _276: bool;
    let mut _277: bool;
    let mut _278: bool;
    let mut _279: bool;
    let mut _280: bool;
    let mut _281: bool;
    let mut _282: bool;
    let mut _283: bool;
    let mut _284: bool;
    let mut _285: usize;
    let mut _286: bool;
    let mut _287: usize;
    let mut _288: &u8;
    let mut _289: usize;
    let mut _290: bool;
    let mut _291: usize;
    let mut _292: &u8;
    let mut _293: bool;
    let mut _294: bool;
    let mut _295: bool;
    let mut _296: bool;
    let mut _297: bool;
    let mut _298: bool;
    let mut _299: bool;
    let mut _300: bool;
    let mut _301: bool;
    let mut _302: bool;
    let mut _303: bool;
    let mut _304: bool;
    let mut _305: usize;
    let mut _306: bool;
    let mut _307: usize;
    let mut _308: &u8;
    let mut _309: usize;
    let mut _310: bool;
    let mut _311: usize;
    let mut _312: &u8;
    let mut _313: bool;
    let mut _314: bool;
    let mut _315: bool;
    let mut _316: bool;
    let mut _317: bool;
    let mut _318: bool;
    let mut _319: bool;
    let mut _320: bool;
    let mut _321: bool;
    let mut _322: bool;
    let mut _323: bool;
    let mut _324: bool;
    let mut _325: usize;
    let mut _326: bool;
    let mut _327: usize;
    let mut _328: &u8;
    let mut _329: usize;
    let mut _330: bool;
    let mut _331: usize;
    let mut _332: &u8;
    let mut _333: bool;
    let mut _334: bool;
    let mut _335: bool;
    let mut _336: bool;
    let mut _337: bool;
    let mut _338: bool;
    let mut _339: bool;
    let mut _340: bool;
    let mut _341: bool;
    let mut _342: bool;
    let mut _343: bool;
    let mut _344: bool;
    let mut _345: usize;
    let mut _346: bool;
    let mut _347: usize;
    let mut _348: &u8;
    let mut _349: usize;
    let mut _350: bool;
    let mut _351: usize;
    let mut _352: &u8;
    let mut _353: bool;
    let mut _354: bool;
    let mut _355: bool;
    let mut _356: bool;
    let mut _357: bool;
    let mut _358: bool;
    let mut _359: bool;
    let mut _360: bool;
    let mut _361: bool;
    let mut _362: bool;
    let mut _363: bool;
    let mut _364: bool;
    let mut _365: usize;
    let mut _366: bool;
    let mut _367: usize;
    let mut _368: &u8;
    let mut _369: usize;
    let mut _370: bool;
    let mut _371: usize;
    let mut _372: &u8;
    let mut _373: bool;
    let mut _374: bool;
    let mut _375: bool;
    let mut _376: bool;
    let mut _377: bool;
    let mut _378: bool;
    let mut _379: bool;
    let mut _380: bool;
    let mut _381: bool;
    let mut _382: bool;
    let mut _383: bool;
    let mut _384: bool;
    let mut _385: usize;
    let mut _386: bool;
    let mut _387: usize;
    let mut _388: &u8;
    let mut _389: usize;
    let mut _390: bool;
    let mut _391: usize;
    let mut _392: &u8;
    let mut _393: bool;
    let mut _394: bool;
    let mut _395: bool;
    let mut _396: bool;
    let mut _397: bool;
    let mut _398: bool;
    let mut _399: bool;
    let mut _400: bool;
    let mut _401: bool;
    let mut _402: bool;
    let mut _403: bool;
    let mut _404: bool;
    let mut _405: usize;
    let mut _406: bool;
    let mut _407: usize;
    let mut _408: &u8;
    let mut _409: usize;
    let mut _410: bool;
    let mut _411: usize;
    let mut _412: &u8;
    let mut _413: bool;
    let mut _414: bool;
    let mut _415: bool;
    let mut _416: bool;
    let mut _417: bool;
    let mut _418: bool;
    let mut _419: bool;
    let mut _420: bool;
    let mut _421: bool;
    let mut _422: bool;
    let mut _423: bool;
    let mut _424: bool;
    let mut _425: usize;
    let mut _426: bool;
    let mut _427: usize;
    let mut _428: &u8;
    let mut _429: usize;
    let mut _430: bool;
    let mut _431: usize;
    let mut _432: &u8;
    let mut _433: bool;
    let mut _434: bool;
    let mut _435: bool;
    let mut _436: bool;
    let mut _437: bool;
    let mut _438: bool;
    let mut _439: bool;
    let mut _440: bool;
    let mut _441: bool;
    let mut _442: bool;
    let mut _443: bool;
    let mut _444: bool;
    let mut _445: usize;
    let mut _446: bool;
    let mut _447: usize;
    let mut _448: &u8;
    let mut _449: usize;
    let mut _450: bool;
    let mut _451: usize;
    let mut _452: &u8;
    let mut _453: bool;
    let mut _454: bool;
    let mut _455: bool;
    let mut _456: bool;
    let mut _457: bool;
    let mut _458: bool;
    let mut _459: bool;
    let mut _460: bool;
    let mut _461: bool;
    let mut _462: bool;
    let mut _463: bool;
    let mut _464: bool;
    let mut _465: usize;
    let mut _466: bool;
    let mut _467: usize;
    let mut _468: &u8;
    let mut _469: usize;
    let mut _470: bool;
    let mut _471: usize;
    let mut _472: &u8;
    let mut _473: bool;
    let mut _474: bool;
    let mut _475: bool;
    let mut _476: bool;
    let mut _477: bool;
    let mut _478: bool;
    let mut _479: bool;
    let mut _480: bool;
    let mut _481: bool;
    let mut _482: bool;
    let mut _483: bool;
    let mut _484: bool;
    let mut _485: usize;
    let mut _486: bool;
    let mut _487: usize;
    let mut _488: &u8;
    let mut _489: usize;
    let mut _490: bool;
    let mut _491: usize;
    let mut _492: &u8;
    let mut _493: bool;
    let mut _494: bool;
    let mut _495: bool;
    let mut _496: bool;
    let mut _497: bool;
    let mut _498: bool;
    let mut _499: bool;
    let mut _500: bool;
    let mut _501: bool;
    let mut _502: bool;
    let mut _503: bool;
    let mut _504: bool;
    let mut _505: usize;
    let mut _506: bool;
    let mut _507: usize;
    let mut _508: &u8;
    let mut _509: usize;
    let mut _510: bool;
    let mut _511: usize;
    let mut _512: &u8;
    let mut _513: bool;
    let mut _514: bool;
    let mut _515: bool;
    let mut _516: bool;
    let mut _517: bool;
    let mut _518: bool;
    let mut _519: bool;
    let mut _520: bool;
    let mut _521: bool;
    let mut _522: bool;
    let mut _523: bool;
    let mut _524: bool;
    let mut _525: usize;
    let mut _526: bool;
    let mut _527: usize;
    let mut _528: &u8;
    let mut _529: usize;
    let mut _530: bool;
    let mut _531: usize;
    let mut _532: &u8;
    let mut _533: bool;
    let mut _534: bool;
    let mut _535: bool;
    let mut _536: bool;
    let mut _537: bool;
    let mut _538: bool;
    let mut _539: bool;
    let mut _540: bool;
    let mut _541: bool;
    let mut _542: bool;
    let mut _543: bool;
    let mut _544: bool;
    let mut _545: usize;
    let mut _546: bool;
    let mut _547: usize;
    let mut _548: &u8;
    let mut _549: usize;
    let mut _550: bool;
    let mut _551: usize;
    let mut _552: &u8;
    let mut _553: bool;
    let mut _554: bool;
    let mut _555: bool;
    let mut _556: bool;
    let mut _557: bool;
    let mut _558: bool;
    let mut _559: bool;
    let mut _560: bool;
    let mut _561: bool;
    let mut _562: bool;
    let mut _563: bool;
    let mut _564: bool;
    let mut _565: usize;
    let mut _566: bool;
    let mut _567: usize;
    let mut _568: &u8;
    let mut _569: usize;
    let mut _570: bool;
    let mut _571: usize;
    let mut _572: &u8;
    let mut _573: bool;
    let mut _574: bool;
    let mut _575: bool;
    let mut _576: bool;
    let mut _577: bool;
    let mut _578: bool;
    let mut _579: bool;
    let mut _580: bool;
    let mut _581: bool;
    let mut _582: bool;
    let mut _583: bool;
    let mut _584: bool;
    let mut _585: usize;
    let mut _586: bool;
    let mut _587: usize;
    let mut _588: &u8;
    let mut _589: usize;
    let mut _590: bool;
    let mut _591: usize;
    let mut _592: &u8;
    let mut _593: bool;
    let mut _594: bool;
    let mut _595: bool;
    let mut _596: bool;
    let mut _597: bool;
    let mut _598: bool;
    let mut _599: bool;
    let mut _600: bool;
    let mut _601: bool;
    let mut _602: bool;
    let mut _603: bool;
    let mut _604: bool;
    let mut _605: usize;
    let mut _606: bool;
    let mut _607: usize;
    let mut _608: &u8;
    let mut _609: usize;
    let mut _610: bool;
    let mut _611: usize;
    let mut _612: &u8;
    let mut _613: bool;
    let mut _614: bool;
    let mut _615: bool;
    let mut _616: bool;
    let mut _617: bool;
    let mut _618: bool;
    let mut _619: bool;
    let mut _620: bool;
    let mut _621: bool;
    let mut _622: bool;
    let mut _623: bool;
    let mut _624: bool;
    let mut _625: usize;
    let mut _626: bool;
    let mut _627: usize;
    let mut _628: &u8;
    let mut _629: usize;
    let mut _630: bool;
    let mut _631: usize;
    let mut _632: &u8;
    let mut _633: bool;
    let mut _634: bool;
    let mut _635: bool;
    let mut _636: bool;
    let mut _637: bool;
    let mut _638: bool;
    let mut _639: bool;
    let mut _640: bool;
    let mut _641: bool;
    let mut _642: bool;
    let mut _643: bool;
    let mut _644: bool;
    let mut _645: usize;
    let mut _646: bool;
    let mut _647: usize;
    let mut _648: &u8;
    let mut _649: usize;
    let mut _650: bool;
    let mut _651: usize;
    let mut _652: &u8;
    let mut _653: bool;
    let mut _654: bool;
    let mut _655: bool;
    let mut _656: bool;
    let mut _657: bool;
    let mut _658: bool;
    let mut _659: bool;
    let mut _660: bool;
    let mut _661: bool;
    let mut _662: bool;
    let mut _663: bool;
    let mut _664: bool;
    let mut _665: usize;
    let mut _666: bool;
    let mut _667: usize;
    let mut _668: &u8;
    let mut _669: usize;
    let mut _670: bool;
    let mut _671: usize;
    let mut _672: &u8;
    let mut _673: bool;
    let mut _674: bool;
    let mut _675: bool;
    let mut _676: bool;
    let mut _677: bool;
    let mut _678: bool;
    let mut _679: bool;
    let mut _680: bool;
    let mut _681: bool;
    let mut _682: bool;
    let mut _683: bool;
    let mut _684: bool;
    let mut _685: usize;
    let mut _686: bool;
    let mut _687: usize;
    let mut _688: &u8;
    let mut _689: usize;
    let mut _690: bool;
    let mut _691: usize;
    let mut _692: &u8;
    let mut _693: bool;
    let mut _694: bool;
    let mut _695: bool;
    let mut _696: bool;
    let mut _697: bool;
    let mut _698: bool;
    let mut _699: bool;
    let mut _700: bool;
    let mut _701: bool;
    let mut _702: bool;
    let mut _703: bool;
    let mut _704: bool;
    let mut _705: usize;
    let mut _706: bool;
    let mut _707: usize;
    let mut _708: &u8;
    let mut _709: usize;
    let mut _710: bool;
    let mut _711: usize;
    let mut _712: &u8;
    let mut _713: bool;
    let mut _714: bool;
    let mut _715: bool;
    let mut _716: bool;
    let mut _717: bool;
    let mut _718: bool;
    let mut _719: bool;
    let mut _720: bool;
    let mut _721: bool;
    let mut _722: bool;
    let mut _723: bool;
    let mut _724: bool;
    let mut _725: usize;
    let mut _726: bool;
    let mut _727: usize;
    let mut _728: &u8;
    let mut _729: usize;
    let mut _730: bool;
    let mut _731: usize;
    let mut _732: &u8;
    let mut _733: bool;
    let mut _734: bool;
    let mut _735: bool;
    let mut _736: bool;
    let mut _737: bool;
    let mut _738: bool;
    let mut _739: bool;
    let mut _740: bool;
    let mut _741: bool;
    let mut _742: bool;
    let mut _743: bool;
    let mut _744: bool;
    let mut _745: usize;
    let mut _746: bool;
    let mut _747: usize;
    let mut _748: &u8;
    let mut _749: usize;
    let mut _750: bool;
    let mut _751: usize;
    let mut _752: &u8;
    let mut _753: bool;
    let mut _754: bool;
    let mut _755: bool;
    let mut _756: bool;
    let mut _757: bool;
    let mut _758: bool;
    let mut _759: bool;
    let mut _760: bool;
    let mut _761: bool;
    let mut _762: bool;
    let mut _763: bool;
    let mut _764: bool;
    let mut _765: usize;
    let mut _766: bool;
    let mut _767: usize;
    let mut _768: &u8;
    let mut _769: usize;
    let mut _770: bool;
    let mut _771: usize;
    let mut _772: &u8;
    let mut _773: bool;
    let mut _774: bool;
    let mut _775: bool;
    let mut _776: bool;
    let mut _777: bool;
    let mut _778: bool;
    let mut _779: bool;
    let mut _780: bool;
    let mut _781: bool;
    let mut _782: bool;
    let mut _783: bool;
    let mut _784: bool;
    let mut _785: usize;
    let mut _786: bool;
    let mut _787: usize;
    let mut _788: &u8;
    let mut _789: usize;
    let mut _790: bool;
    let mut _791: usize;
    let mut _792: &u8;
    let mut _793: bool;
    let mut _794: bool;
    let mut _795: bool;
    let mut _796: bool;
    let mut _797: bool;
    let mut _798: bool;
    let mut _799: bool;
    let mut _800: bool;
    let mut _801: bool;
    let mut _802: bool;
    let mut _803: bool;
    let mut _804: bool;
    let mut _805: usize;
    let mut _806: bool;
    let mut _807: usize;
    let mut _808: &u8;
    let mut _809: usize;
    let mut _810: bool;
    let mut _811: usize;
    let mut _812: &u8;
    let mut _813: bool;
    let mut _814: bool;
    let mut _815: bool;
    let mut _816: bool;
    let mut _817: bool;
    let mut _818: bool;
    let mut _819: bool;
    let mut _820: bool;
    let mut _821: bool;
    let mut _822: bool;
    let mut _823: bool;
    let mut _824: bool;
    let mut _825: usize;
    let mut _826: bool;
    let mut _827: usize;
    let mut _828: &u8;
    let mut _829: usize;
    let mut _830: bool;
    let mut _831: usize;
    let mut _832: &u8;
    let mut _833: bool;
    let mut _834: bool;
    let mut _835: bool;
    let mut _836: bool;
    let mut _837: bool;
    let mut _838: bool;
    let mut _839: bool;
    let mut _840: bool;
    let mut _841: bool;
    let mut _842: bool;
    let mut _843: bool;
    let mut _844: bool;
    let mut _845: usize;
    let mut _846: bool;
    let mut _847: usize;
    let mut _848: &u8;
    let mut _849: usize;
    let mut _850: bool;
    let mut _851: usize;
    let mut _852: &u8;
    let mut _853: bool;
    let mut _854: bool;
    let mut _855: bool;
    let mut _856: bool;
    let mut _857: bool;
    let mut _858: bool;
    let mut _859: bool;
    let mut _860: bool;
    let mut _861: bool;
    let mut _862: bool;
    let mut _863: bool;
    let mut _864: bool;
    let mut _865: usize;
    let mut _866: bool;
    let mut _867: usize;
    let mut _868: &u8;
    let mut _869: usize;
    let mut _870: bool;
    let mut _871: usize;
    let mut _872: &u8;
    let mut _873: bool;
    let mut _874: bool;
    let mut _875: bool;
    let mut _876: bool;
    let mut _877: bool;
    let mut _878: bool;
    let mut _879: bool;
    let mut _880: bool;
    let mut _881: bool;
    let mut _882: bool;
    let mut _883: bool;
    let mut _884: bool;
    let mut _885: usize;
    let mut _886: bool;
    let mut _887: usize;
    let mut _888: &u8;
    let mut _889: usize;
    let mut _890: bool;
    let mut _891: usize;
    let mut _892: &u8;
    let mut _893: bool;
    let mut _894: bool;
    let mut _895: bool;
    let mut _896: bool;
    let mut _897: bool;
    let mut _898: bool;
    let mut _899: bool;
    let mut _900: bool;
    let mut _901: bool;
    let mut _902: bool;
    let mut _903: bool;
    let mut _904: bool;
    let mut _905: usize;
    let mut _906: bool;
    let mut _907: usize;
    let mut _908: &u8;
    let mut _909: usize;
    let mut _910: bool;
    let mut _911: usize;
    let mut _912: &u8;
    let mut _913: bool;
    let mut _914: bool;
    let mut _915: bool;
    let mut _916: bool;
    let mut _917: bool;
    let mut _918: bool;
    let mut _919: bool;
    let mut _920: bool;
    let mut _921: bool;
    let mut _922: bool;
    let mut _923: bool;
    let mut _924: bool;
    let mut _925: usize;
    let mut _926: bool;
    let mut _927: usize;
    let mut _928: &u8;
    let mut _929: usize;
    let mut _930: bool;
    let mut _931: usize;
    let mut _932: &u8;
    let mut _933: bool;
    let mut _934: bool;
    let mut _935: bool;
    let mut _936: bool;
    let mut _937: bool;
    let mut _938: bool;
    let mut _939: bool;
    let mut _940: bool;
    let mut _941: bool;
    let mut _942: bool;
    let mut _943: bool;
    let mut _944: bool;
    let mut _945: usize;
    let mut _946: bool;
    let mut _947: usize;
    let mut _948: &u8;
    let mut _949: usize;
    let mut _950: bool;
    let mut _951: usize;
    let mut _952: &u8;
    let mut _953: bool;
    let mut _954: bool;
    let mut _955: bool;
    let mut _956: bool;
    let mut _957: bool;
    let mut _958: bool;
    let mut _959: bool;
    let mut _960: bool;
    let mut _961: bool;
    let mut _962: bool;
    let mut _963: bool;
    let mut _964: bool;
    let mut _965: usize;
    let mut _966: bool;
    let mut _967: usize;
    let mut _968: &u8;
    let mut _969: usize;
    let mut _970: bool;
    let mut _971: usize;
    let mut _972: &u8;
    let mut _973: bool;
    let mut _974: bool;
    let mut _975: bool;
    let mut _976: bool;
    let mut _977: bool;
    let mut _978: bool;
    let mut _979: bool;
    let mut _980: bool;
    let mut _981: bool;
    let mut _982: bool;
    let mut _983: bool;
    let mut _984: bool;
    let mut _985: usize;
    let mut _986: bool;
    let mut _987: usize;
    let mut _988: &u8;
    let mut _989: usize;
    let mut _990: bool;
    let mut _991: usize;
    let mut _992: &u8;
    let mut _993: bool;
    let mut _994: bool;
    let mut _995: bool;
    let mut _996: bool;
    let mut _997: bool;
    let mut _998: bool;
    let mut _999: bool;
    let mut _1000: bool;
    let mut _1001: bool;
    let mut _1002: bool;
    let mut _1003: bool;
    let mut _1004: bool;
    let mut _1005: usize;
    let mut _1006: bool;
    let mut _1007: usize;
    let mut _1008: &u8;
    let mut _1009: usize;
    let mut _1010: bool;
    let mut _1011: usize;
    let mut _1012: &u8;
    let mut _1013: bool;
    let mut _1014: bool;
    let mut _1015: bool;
    let mut _1016: bool;
    let mut _1017: bool;
    let mut _1018: bool;
    let mut _1019: bool;
    let mut _1020: bool;
    let mut _1021: bool;
    let mut _1022: bool;
    let mut _1023: bool;
    let mut _1024: bool;
    let mut _1025: usize;
    let mut _1026: bool;
    let mut _1027: usize;
    let mut _1028: &u8;
    let mut _1029: usize;
    let mut _1030: bool;
    let mut _1031: usize;
    let mut _1032: &u8;
    let mut _1033: bool;
    let mut _1034: bool;
    let mut _1035: bool;
    let mut _1036: bool;
    let mut _1037: bool;
    let mut _1038: bool;
    let mut _1039: bool;
    let mut _1040: bool;
    let mut _1041: bool;
    let mut _1042: bool;
    let mut _1043: bool;
    let mut _1044: bool;
    let mut _1045: usize;
    let mut _1046: bool;
    let mut _1047: usize;
    let mut _1048: &u8;
    let mut _1049: usize;
    let mut _1050: bool;
    let mut _1051: usize;
    let mut _1052: &u8;
    let mut _1053: bool;
    let mut _1054: bool;
    let mut _1055: bool;
    let mut _1056: bool;
    let mut _1057: bool;
    let mut _1058: bool;
    let mut _1059: bool;
    let mut _1060: bool;
    let mut _1061: bool;
    let mut _1062: bool;
    let mut _1063: bool;
    let mut _1064: bool;
    let mut _1065: usize;
    let mut _1066: bool;
    let mut _1067: usize;
    let mut _1068: &u8;
    let mut _1069: usize;
    let mut _1070: bool;
    let mut _1071: usize;
    let mut _1072: &u8;
    let mut _1073: bool;
    let mut _1074: bool;
    let mut _1075: bool;
    let mut _1076: bool;
    let mut _1077: bool;
    let mut _1078: bool;
    let mut _1079: bool;
    let mut _1080: bool;
    let mut _1081: bool;
    let mut _1082: bool;
    let mut _1083: bool;
    let mut _1084: bool;
    let mut _1085: usize;
    let mut _1086: bool;
    let mut _1087: usize;
    let mut _1088: &u8;
    let mut _1089: usize;
    let mut _1090: bool;
    let mut _1091: usize;
    let mut _1092: &u8;
    let mut _1093: bool;
    let mut _1094: bool;
    let mut _1095: bool;
    let mut _1096: bool;
    let mut _1097: bool;
    let mut _1098: bool;
    let mut _1099: bool;
    let mut _1100: bool;
    let mut _1101: bool;
    let mut _1102: bool;
    let mut _1103: bool;
    let mut _1104: bool;
    let mut _1105: usize;
    let mut _1106: bool;
    let mut _1107: usize;
    let mut _1108: &u8;
    let mut _1109: usize;
    let mut _1110: bool;
    let mut _1111: usize;
    let mut _1112: &u8;
    let mut _1113: bool;
    let mut _1114: bool;
    let mut _1115: bool;
    let mut _1116: bool;
    let mut _1117: bool;
    let mut _1118: bool;
    let mut _1119: bool;
    let mut _1120: bool;
    let mut _1121: bool;
    let mut _1122: bool;
    let mut _1123: bool;
    let mut _1124: bool;
    let mut _1125: usize;
    let mut _1126: bool;
    let mut _1127: usize;
    let mut _1128: &u8;
    let mut _1129: usize;
    let mut _1130: bool;
    let mut _1131: usize;
    let mut _1132: &u8;
    let mut _1133: bool;
    let mut _1134: bool;
    let mut _1135: bool;
    let mut _1136: bool;
    let mut _1137: bool;
    let mut _1138: bool;
    let mut _1139: bool;
    let mut _1140: bool;
    let mut _1141: bool;
    let mut _1142: bool;
    let mut _1143: bool;
    let mut _1144: bool;
    let mut _1145: usize;
    let mut _1146: bool;
    let mut _1147: usize;
    let mut _1148: &u8;
    let mut _1149: usize;
    let mut _1150: bool;
    let mut _1151: usize;
    let mut _1152: &u8;
    let mut _1153: bool;
    let mut _1154: bool;
    let mut _1155: bool;
    let mut _1156: bool;
    let mut _1157: bool;
    let mut _1158: bool;
    let mut _1159: bool;
    let mut _1160: bool;
    let mut _1161: bool;
    let mut _1162: bool;
    let mut _1163: bool;
    let mut _1164: bool;
    let mut _1165: usize;
    let mut _1166: bool;
    let mut _1167: usize;
    let mut _1168: &u8;
    let mut _1169: usize;
    let mut _1170: bool;
    let mut _1171: usize;
    let mut _1172: &u8;
    let mut _1173: bool;
    let mut _1174: bool;
    let mut _1175: bool;
    let mut _1176: bool;
    let mut _1177: bool;
    let mut _1178: bool;
    let mut _1179: bool;
    let mut _1180: bool;
    let mut _1181: bool;
    let mut _1182: bool;
    let mut _1183: bool;
    let mut _1184: bool;
    let mut _1185: usize;
    let mut _1186: bool;
    let mut _1187: usize;
    let mut _1188: &u8;
    let mut _1189: usize;
    let mut _1190: bool;
    let mut _1191: usize;
    let mut _1192: &u8;
    let mut _1193: bool;
    let mut _1194: bool;
    let mut _1195: bool;
    let mut _1196: bool;
    let mut _1197: bool;
    let mut _1198: bool;
    let mut _1199: bool;
    let mut _1200: bool;
    let mut _1201: bool;
    let mut _1202: bool;
    let mut _1203: bool;
    let mut _1204: bool;
    let mut _1205: usize;
    let mut _1206: bool;
    let mut _1207: usize;
    let mut _1208: &u8;
    let mut _1209: usize;
    let mut _1210: bool;
    let mut _1211: usize;
    let mut _1212: &u8;
    let mut _1213: bool;
    let mut _1214: bool;
    let mut _1215: bool;
    let mut _1216: bool;
    let mut _1217: bool;
    let mut _1218: bool;
    let mut _1219: bool;
    let mut _1220: bool;
    let mut _1221: bool;
    let mut _1222: bool;
    let mut _1223: bool;
    let mut _1224: bool;
    let mut _1225: usize;
    let mut _1226: bool;
    let mut _1227: usize;
    let mut _1228: &u8;
    let mut _1229: usize;
    let mut _1230: bool;
    let mut _1231: usize;
    let mut _1232: &u8;
    let mut _1233: bool;
    let mut _1234: bool;
    let mut _1235: bool;
    let mut _1236: bool;
    let mut _1237: bool;
    let mut _1238: bool;
    let mut _1239: bool;
    let mut _1240: bool;
    let mut _1241: bool;
    let mut _1242: bool;
    let mut _1243: bool;
    let mut _1244: bool;
    let mut _1245: usize;
    let mut _1246: bool;
    let mut _1247: usize;
    let mut _1248: &u8;
    let mut _1249: usize;
    let mut _1250: bool;
    let mut _1251: usize;
    let mut _1252: &u8;
    let mut _1253: bool;
    let mut _1254: bool;
    let mut _1255: bool;
    let mut _1256: bool;
    let mut _1257: bool;
    let mut _1258: bool;
    let mut _1259: bool;
    let mut _1260: bool;
    let mut _1261: bool;
    let mut _1262: bool;
    let mut _1263: bool;
    let mut _1264: bool;
    let mut _1265: usize;
    let mut _1266: bool;
    let mut _1267: usize;
    let mut _1268: &u8;
    let mut _1269: bool;
    let mut _1270: bool;
    let mut _1271: bool;
    let mut _1272: bool;
    let mut _1273: bool;
    let mut _1274: bool;
    let mut _1275: usize;
    let mut _1276: bool;
    let mut _1277: usize;
    let mut _1278: &u8;
    let mut _1279: bool;
    let mut _1280: bool;
    let mut _1281: bool;
    let mut _1282: bool;
    let mut _1283: bool;
    let mut _1284: bool;
    let mut _1285: bool;
    let mut _1286: bool;
    let mut _1287: bool;
    let mut _1288: bool;
    let mut _1289: usize;
    let mut _1290: bool;
    let mut _1291: usize;
    let mut _1292: &u8;
    scope 1 {
        debug cursor => _2;
        scope 2 {
            debug marker => _3;
            let _4: usize;
            scope 3 {
                debug len => _4;
                scope 4 {
                    debug yych => _5;
                    scope 6 {
                        debug yystate => _6;
                    }
                }
                scope 5 {
                }
            }
        }
    }

    bb0: {
        _2 = const 0_usize;
        _3 = const 0_usize;
        _4 = PtrMetadata(copy _1);
        _5 = const 0_u8;
        _6 = const State::S0;
        StorageLive(_8);
        StorageLive(_7);
        _7 = copy _2;
        _8 = Lt(move _7, copy _4);
        switchInt(move _8) -> [0: bb1, otherwise: bb2];
    }

    bb1: {
        StorageDead(_7);
        _5 = const 0_u8;
        goto -> bb4;
    }

    bb2: {
        StorageDead(_7);
        StorageLive(_10);
        StorageLive(_9);
        _9 = copy _2;
        _10 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _9) -> [return: bb3, unwind unreachable];
    }

    bb3: {
        StorageDead(_9);
        _5 = copy (*_10);
        StorageDead(_10);
        goto -> bb4;
    }

    bb4: {
        StorageDead(_8);
        _2 = Add(copy _2, const 1_usize);
        switchInt(copy _5) -> [33: bb16, 61: bb16, 63: bb16, otherwise: bb5];
    }

    bb5: {
        _11 = Le(const 35_u8, copy _5);
        switchInt(move _11) -> [0: bb7, otherwise: bb6];
    }

    bb6: {
        _12 = Le(copy _5, const 39_u8);
        switchInt(move _12) -> [0: bb7, otherwise: bb16];
    }

    bb7: {
        _13 = Le(const 42_u8, copy _5);
        switchInt(move _13) -> [0: bb9, otherwise: bb8];
    }

    bb8: {
        _14 = Le(copy _5, const 43_u8);
        switchInt(move _14) -> [0: bb9, otherwise: bb16];
    }

    bb9: {
        _15 = Le(const 45_u8, copy _5);
        switchInt(move _15) -> [0: bb11, otherwise: bb10];
    }

    bb10: {
        _16 = Le(copy _5, const 57_u8);
        switchInt(move _16) -> [0: bb11, otherwise: bb16];
    }

    bb11: {
        _17 = Le(const 65_u8, copy _5);
        switchInt(move _17) -> [0: bb13, otherwise: bb12];
    }

    bb12: {
        _18 = Le(copy _5, const 90_u8);
        switchInt(move _18) -> [0: bb13, otherwise: bb16];
    }

    bb13: {
        _19 = Le(const 94_u8, copy _5);
        switchInt(move _19) -> [0: bb15, otherwise: bb14];
    }

    bb14: {
        _20 = Le(copy _5, const 126_u8);
        switchInt(move _20) -> [0: bb15, otherwise: bb16];
    }

    bb15: {
        _6 = const State::S1;
        _6 = const State::S2;
        goto -> bb1848;
    }

    bb16: {
        _6 = const State::S3;
        _3 = copy _2;
        StorageLive(_22);
        StorageLive(_21);
        _21 = copy _2;
        _22 = Lt(move _21, copy _4);
        switchInt(move _22) -> [0: bb17, otherwise: bb18];
    }

    bb17: {
        StorageDead(_21);
        _5 = const 0_u8;
        goto -> bb20;
    }

    bb18: {
        StorageDead(_21);
        StorageLive(_24);
        StorageLive(_23);
        _23 = copy _2;
        _24 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _23) -> [return: bb19, unwind unreachable];
    }

    bb19: {
        StorageDead(_23);
        _5 = copy (*_24);
        StorageDead(_24);
        goto -> bb20;
    }

    bb20: {
        StorageDead(_22);
        switchInt(copy _5) -> [33: bb32, 61: bb32, otherwise: bb21];
    }

    bb21: {
        _25 = Le(const 35_u8, copy _5);
        switchInt(move _25) -> [0: bb23, otherwise: bb22];
    }

    bb22: {
        _26 = Le(copy _5, const 39_u8);
        switchInt(move _26) -> [0: bb23, otherwise: bb32];
    }

    bb23: {
        _27 = Le(const 42_u8, copy _5);
        switchInt(move _27) -> [0: bb25, otherwise: bb24];
    }

    bb24: {
        _28 = Le(copy _5, const 43_u8);
        switchInt(move _28) -> [0: bb25, otherwise: bb32];
    }

    bb25: {
        _29 = Le(const 45_u8, copy _5);
        switchInt(move _29) -> [0: bb27, otherwise: bb26];
    }

    bb26: {
        _30 = Le(copy _5, const 57_u8);
        switchInt(move _30) -> [0: bb27, otherwise: bb32];
    }

    bb27: {
        _31 = Le(const 63_u8, copy _5);
        switchInt(move _31) -> [0: bb29, otherwise: bb28];
    }

    bb28: {
        _32 = Le(copy _5, const 90_u8);
        switchInt(move _32) -> [0: bb29, otherwise: bb32];
    }

    bb29: {
        _33 = Le(const 94_u8, copy _5);
        switchInt(move _33) -> [0: bb31, otherwise: bb30];
    }

    bb30: {
        _34 = Le(copy _5, const 126_u8);
        switchInt(move _34) -> [0: bb31, otherwise: bb32];
    }

    bb31: {
        _6 = const State::S2;
        goto -> bb1848;
    }

    bb32: {
        _6 = const State::S5;
        goto -> bb33;
    }

    bb33: {
        switchInt(copy _5) -> [33: bb1850, 61: bb1850, 63: bb1850, 64: bb34, otherwise: bb1836];
    }

    bb34: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb35: {
        StorageLive(_36);
        StorageLive(_35);
        _35 = copy _2;
        _36 = Lt(move _35, copy _4);
        switchInt(move _36) -> [0: bb36, otherwise: bb37];
    }

    bb36: {
        StorageDead(_35);
        _5 = const 0_u8;
        goto -> bb39;
    }

    bb37: {
        StorageDead(_35);
        StorageLive(_38);
        StorageLive(_37);
        _37 = copy _2;
        _38 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _37) -> [return: bb38, unwind unreachable];
    }

    bb38: {
        StorageDead(_37);
        _5 = copy (*_38);
        StorageDead(_38);
        goto -> bb39;
    }

    bb39: {
        StorageDead(_36);
        _39 = Le(const 48_u8, copy _5);
        switchInt(move _39) -> [0: bb41, otherwise: bb40];
    }

    bb40: {
        _40 = Le(copy _5, const 57_u8);
        switchInt(move _40) -> [0: bb41, otherwise: bb46];
    }

    bb41: {
        _41 = Le(const 65_u8, copy _5);
        switchInt(move _41) -> [0: bb43, otherwise: bb42];
    }

    bb42: {
        _42 = Le(copy _5, const 90_u8);
        switchInt(move _42) -> [0: bb43, otherwise: bb46];
    }

    bb43: {
        _43 = Le(const 97_u8, copy _5);
        switchInt(move _43) -> [0: bb45, otherwise: bb44];
    }

    bb44: {
        _44 = Le(copy _5, const 122_u8);
        switchInt(move _44) -> [0: bb45, otherwise: bb46];
    }

    bb45: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb46: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S8;
        StorageLive(_46);
        StorageLive(_45);
        _45 = copy _2;
        _46 = Lt(move _45, copy _4);
        switchInt(move _46) -> [0: bb47, otherwise: bb48];
    }

    bb47: {
        StorageDead(_45);
        _5 = const 0_u8;
        goto -> bb50;
    }

    bb48: {
        StorageDead(_45);
        StorageLive(_48);
        StorageLive(_47);
        _47 = copy _2;
        _48 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _47) -> [return: bb49, unwind unreachable];
    }

    bb49: {
        StorageDead(_47);
        _5 = copy (*_48);
        StorageDead(_48);
        goto -> bb50;
    }

    bb50: {
        StorageDead(_46);
        switchInt(copy _5) -> [45: bb51, 46: bb64, 62: bb65, otherwise: bb66];
    }

    bb51: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S9;
        StorageLive(_50);
        StorageLive(_49);
        _49 = copy _2;
        _50 = Lt(move _49, copy _4);
        switchInt(move _50) -> [0: bb52, otherwise: bb53];
    }

    bb52: {
        StorageDead(_49);
        _5 = const 0_u8;
        StorageDead(_50);
        goto -> bb56;
    }

    bb53: {
        StorageDead(_49);
        StorageLive(_52);
        StorageLive(_51);
        _51 = copy _2;
        _52 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _51) -> [return: bb54, unwind unreachable];
    }

    bb54: {
        StorageDead(_51);
        _5 = copy (*_52);
        StorageDead(_52);
        StorageDead(_50);
        switchInt(copy _5) -> [45: bb55, otherwise: bb56];
    }

    bb55: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S12;
        goto -> bb79;
    }

    bb56: {
        _53 = Le(const 48_u8, copy _5);
        switchInt(move _53) -> [0: bb58, otherwise: bb57];
    }

    bb57: {
        _54 = Le(copy _5, const 57_u8);
        switchInt(move _54) -> [0: bb58, otherwise: bb63];
    }

    bb58: {
        _55 = Le(const 65_u8, copy _5);
        switchInt(move _55) -> [0: bb60, otherwise: bb59];
    }

    bb59: {
        _56 = Le(copy _5, const 90_u8);
        switchInt(move _56) -> [0: bb60, otherwise: bb63];
    }

    bb60: {
        _57 = Le(const 97_u8, copy _5);
        switchInt(move _57) -> [0: bb62, otherwise: bb61];
    }

    bb61: {
        _58 = Le(copy _5, const 122_u8);
        switchInt(move _58) -> [0: bb62, otherwise: bb63];
    }

    bb62: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb63: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S13;
        goto -> bb102;
    }

    bb64: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb65: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb66: {
        _59 = Le(const 48_u8, copy _5);
        switchInt(move _59) -> [0: bb68, otherwise: bb67];
    }

    bb67: {
        _60 = Le(copy _5, const 57_u8);
        switchInt(move _60) -> [0: bb68, otherwise: bb73];
    }

    bb68: {
        _61 = Le(const 65_u8, copy _5);
        switchInt(move _61) -> [0: bb70, otherwise: bb69];
    }

    bb69: {
        _62 = Le(copy _5, const 90_u8);
        switchInt(move _62) -> [0: bb70, otherwise: bb73];
    }

    bb70: {
        _63 = Le(const 97_u8, copy _5);
        switchInt(move _63) -> [0: bb72, otherwise: bb71];
    }

    bb71: {
        _64 = Le(copy _5, const 122_u8);
        switchInt(move _64) -> [0: bb72, otherwise: bb73];
    }

    bb72: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb73: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S10;
        StorageLive(_66);
        StorageLive(_65);
        _65 = copy _2;
        _66 = Lt(move _65, copy _4);
        switchInt(move _66) -> [0: bb74, otherwise: bb75];
    }

    bb74: {
        StorageDead(_65);
        _5 = const 0_u8;
        goto -> bb77;
    }

    bb75: {
        StorageDead(_65);
        StorageLive(_68);
        StorageLive(_67);
        _67 = copy _2;
        _68 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _67) -> [return: bb76, unwind unreachable];
    }

    bb76: {
        StorageDead(_67);
        _5 = copy (*_68);
        StorageDead(_68);
        goto -> bb77;
    }

    bb77: {
        StorageDead(_66);
        switchInt(copy _5) -> [45: bb78, 46: bb92, 62: bb93, otherwise: bb94];
    }

    bb78: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S12;
        goto -> bb79;
    }

    bb79: {
        StorageLive(_70);
        StorageLive(_69);
        _69 = copy _2;
        _70 = Lt(move _69, copy _4);
        switchInt(move _70) -> [0: bb80, otherwise: bb81];
    }

    bb80: {
        StorageDead(_69);
        _5 = const 0_u8;
        StorageDead(_70);
        goto -> bb84;
    }

    bb81: {
        StorageDead(_69);
        StorageLive(_72);
        StorageLive(_71);
        _71 = copy _2;
        _72 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _71) -> [return: bb82, unwind unreachable];
    }

    bb82: {
        StorageDead(_71);
        _5 = copy (*_72);
        StorageDead(_72);
        StorageDead(_70);
        switchInt(copy _5) -> [45: bb83, otherwise: bb84];
    }

    bb83: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S14;
        goto -> bb108;
    }

    bb84: {
        _73 = Le(const 48_u8, copy _5);
        switchInt(move _73) -> [0: bb86, otherwise: bb85];
    }

    bb85: {
        _74 = Le(copy _5, const 57_u8);
        switchInt(move _74) -> [0: bb86, otherwise: bb91];
    }

    bb86: {
        _75 = Le(const 65_u8, copy _5);
        switchInt(move _75) -> [0: bb88, otherwise: bb87];
    }

    bb87: {
        _76 = Le(copy _5, const 90_u8);
        switchInt(move _76) -> [0: bb88, otherwise: bb91];
    }

    bb88: {
        _77 = Le(const 97_u8, copy _5);
        switchInt(move _77) -> [0: bb90, otherwise: bb89];
    }

    bb89: {
        _78 = Le(copy _5, const 122_u8);
        switchInt(move _78) -> [0: bb90, otherwise: bb91];
    }

    bb90: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb91: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S15;
        goto -> bb131;
    }

    bb92: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb93: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb94: {
        _79 = Le(const 48_u8, copy _5);
        switchInt(move _79) -> [0: bb96, otherwise: bb95];
    }

    bb95: {
        _80 = Le(copy _5, const 57_u8);
        switchInt(move _80) -> [0: bb96, otherwise: bb101];
    }

    bb96: {
        _81 = Le(const 65_u8, copy _5);
        switchInt(move _81) -> [0: bb98, otherwise: bb97];
    }

    bb97: {
        _82 = Le(copy _5, const 90_u8);
        switchInt(move _82) -> [0: bb98, otherwise: bb101];
    }

    bb98: {
        _83 = Le(const 97_u8, copy _5);
        switchInt(move _83) -> [0: bb100, otherwise: bb99];
    }

    bb99: {
        _84 = Le(copy _5, const 122_u8);
        switchInt(move _84) -> [0: bb100, otherwise: bb101];
    }

    bb100: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb101: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S13;
        goto -> bb102;
    }

    bb102: {
        StorageLive(_86);
        StorageLive(_85);
        _85 = copy _2;
        _86 = Lt(move _85, copy _4);
        switchInt(move _86) -> [0: bb103, otherwise: bb104];
    }

    bb103: {
        StorageDead(_85);
        _5 = const 0_u8;
        goto -> bb106;
    }

    bb104: {
        StorageDead(_85);
        StorageLive(_88);
        StorageLive(_87);
        _87 = copy _2;
        _88 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _87) -> [return: bb105, unwind unreachable];
    }

    bb105: {
        StorageDead(_87);
        _5 = copy (*_88);
        StorageDead(_88);
        goto -> bb106;
    }

    bb106: {
        StorageDead(_86);
        switchInt(copy _5) -> [45: bb107, 46: bb121, 62: bb122, otherwise: bb123];
    }

    bb107: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S14;
        goto -> bb108;
    }

    bb108: {
        StorageLive(_90);
        StorageLive(_89);
        _89 = copy _2;
        _90 = Lt(move _89, copy _4);
        switchInt(move _90) -> [0: bb109, otherwise: bb110];
    }

    bb109: {
        StorageDead(_89);
        _5 = const 0_u8;
        StorageDead(_90);
        goto -> bb113;
    }

    bb110: {
        StorageDead(_89);
        StorageLive(_92);
        StorageLive(_91);
        _91 = copy _2;
        _92 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _91) -> [return: bb111, unwind unreachable];
    }

    bb111: {
        StorageDead(_91);
        _5 = copy (*_92);
        StorageDead(_92);
        StorageDead(_90);
        switchInt(copy _5) -> [45: bb112, otherwise: bb113];
    }

    bb112: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S16;
        goto -> bb137;
    }

    bb113: {
        _93 = Le(const 48_u8, copy _5);
        switchInt(move _93) -> [0: bb115, otherwise: bb114];
    }

    bb114: {
        _94 = Le(copy _5, const 57_u8);
        switchInt(move _94) -> [0: bb115, otherwise: bb120];
    }

    bb115: {
        _95 = Le(const 65_u8, copy _5);
        switchInt(move _95) -> [0: bb117, otherwise: bb116];
    }

    bb116: {
        _96 = Le(copy _5, const 90_u8);
        switchInt(move _96) -> [0: bb117, otherwise: bb120];
    }

    bb117: {
        _97 = Le(const 97_u8, copy _5);
        switchInt(move _97) -> [0: bb119, otherwise: bb118];
    }

    bb118: {
        _98 = Le(copy _5, const 122_u8);
        switchInt(move _98) -> [0: bb119, otherwise: bb120];
    }

    bb119: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb120: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S17;
        goto -> bb160;
    }

    bb121: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb122: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb123: {
        _99 = Le(const 48_u8, copy _5);
        switchInt(move _99) -> [0: bb125, otherwise: bb124];
    }

    bb124: {
        _100 = Le(copy _5, const 57_u8);
        switchInt(move _100) -> [0: bb125, otherwise: bb130];
    }

    bb125: {
        _101 = Le(const 65_u8, copy _5);
        switchInt(move _101) -> [0: bb127, otherwise: bb126];
    }

    bb126: {
        _102 = Le(copy _5, const 90_u8);
        switchInt(move _102) -> [0: bb127, otherwise: bb130];
    }

    bb127: {
        _103 = Le(const 97_u8, copy _5);
        switchInt(move _103) -> [0: bb129, otherwise: bb128];
    }

    bb128: {
        _104 = Le(copy _5, const 122_u8);
        switchInt(move _104) -> [0: bb129, otherwise: bb130];
    }

    bb129: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb130: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S15;
        goto -> bb131;
    }

    bb131: {
        StorageLive(_106);
        StorageLive(_105);
        _105 = copy _2;
        _106 = Lt(move _105, copy _4);
        switchInt(move _106) -> [0: bb132, otherwise: bb133];
    }

    bb132: {
        StorageDead(_105);
        _5 = const 0_u8;
        goto -> bb135;
    }

    bb133: {
        StorageDead(_105);
        StorageLive(_108);
        StorageLive(_107);
        _107 = copy _2;
        _108 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _107) -> [return: bb134, unwind unreachable];
    }

    bb134: {
        StorageDead(_107);
        _5 = copy (*_108);
        StorageDead(_108);
        goto -> bb135;
    }

    bb135: {
        StorageDead(_106);
        switchInt(copy _5) -> [45: bb136, 46: bb150, 62: bb151, otherwise: bb152];
    }

    bb136: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S16;
        goto -> bb137;
    }

    bb137: {
        StorageLive(_110);
        StorageLive(_109);
        _109 = copy _2;
        _110 = Lt(move _109, copy _4);
        switchInt(move _110) -> [0: bb138, otherwise: bb139];
    }

    bb138: {
        StorageDead(_109);
        _5 = const 0_u8;
        StorageDead(_110);
        goto -> bb142;
    }

    bb139: {
        StorageDead(_109);
        StorageLive(_112);
        StorageLive(_111);
        _111 = copy _2;
        _112 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _111) -> [return: bb140, unwind unreachable];
    }

    bb140: {
        StorageDead(_111);
        _5 = copy (*_112);
        StorageDead(_112);
        StorageDead(_110);
        switchInt(copy _5) -> [45: bb141, otherwise: bb142];
    }

    bb141: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S18;
        goto -> bb166;
    }

    bb142: {
        _113 = Le(const 48_u8, copy _5);
        switchInt(move _113) -> [0: bb144, otherwise: bb143];
    }

    bb143: {
        _114 = Le(copy _5, const 57_u8);
        switchInt(move _114) -> [0: bb144, otherwise: bb149];
    }

    bb144: {
        _115 = Le(const 65_u8, copy _5);
        switchInt(move _115) -> [0: bb146, otherwise: bb145];
    }

    bb145: {
        _116 = Le(copy _5, const 90_u8);
        switchInt(move _116) -> [0: bb146, otherwise: bb149];
    }

    bb146: {
        _117 = Le(const 97_u8, copy _5);
        switchInt(move _117) -> [0: bb148, otherwise: bb147];
    }

    bb147: {
        _118 = Le(copy _5, const 122_u8);
        switchInt(move _118) -> [0: bb148, otherwise: bb149];
    }

    bb148: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb149: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S19;
        goto -> bb189;
    }

    bb150: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb151: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb152: {
        _119 = Le(const 48_u8, copy _5);
        switchInt(move _119) -> [0: bb154, otherwise: bb153];
    }

    bb153: {
        _120 = Le(copy _5, const 57_u8);
        switchInt(move _120) -> [0: bb154, otherwise: bb159];
    }

    bb154: {
        _121 = Le(const 65_u8, copy _5);
        switchInt(move _121) -> [0: bb156, otherwise: bb155];
    }

    bb155: {
        _122 = Le(copy _5, const 90_u8);
        switchInt(move _122) -> [0: bb156, otherwise: bb159];
    }

    bb156: {
        _123 = Le(const 97_u8, copy _5);
        switchInt(move _123) -> [0: bb158, otherwise: bb157];
    }

    bb157: {
        _124 = Le(copy _5, const 122_u8);
        switchInt(move _124) -> [0: bb158, otherwise: bb159];
    }

    bb158: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb159: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S17;
        goto -> bb160;
    }

    bb160: {
        StorageLive(_126);
        StorageLive(_125);
        _125 = copy _2;
        _126 = Lt(move _125, copy _4);
        switchInt(move _126) -> [0: bb161, otherwise: bb162];
    }

    bb161: {
        StorageDead(_125);
        _5 = const 0_u8;
        goto -> bb164;
    }

    bb162: {
        StorageDead(_125);
        StorageLive(_128);
        StorageLive(_127);
        _127 = copy _2;
        _128 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _127) -> [return: bb163, unwind unreachable];
    }

    bb163: {
        StorageDead(_127);
        _5 = copy (*_128);
        StorageDead(_128);
        goto -> bb164;
    }

    bb164: {
        StorageDead(_126);
        switchInt(copy _5) -> [45: bb165, 46: bb179, 62: bb180, otherwise: bb181];
    }

    bb165: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S18;
        goto -> bb166;
    }

    bb166: {
        StorageLive(_130);
        StorageLive(_129);
        _129 = copy _2;
        _130 = Lt(move _129, copy _4);
        switchInt(move _130) -> [0: bb167, otherwise: bb168];
    }

    bb167: {
        StorageDead(_129);
        _5 = const 0_u8;
        StorageDead(_130);
        goto -> bb171;
    }

    bb168: {
        StorageDead(_129);
        StorageLive(_132);
        StorageLive(_131);
        _131 = copy _2;
        _132 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _131) -> [return: bb169, unwind unreachable];
    }

    bb169: {
        StorageDead(_131);
        _5 = copy (*_132);
        StorageDead(_132);
        StorageDead(_130);
        switchInt(copy _5) -> [45: bb170, otherwise: bb171];
    }

    bb170: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S20;
        goto -> bb195;
    }

    bb171: {
        _133 = Le(const 48_u8, copy _5);
        switchInt(move _133) -> [0: bb173, otherwise: bb172];
    }

    bb172: {
        _134 = Le(copy _5, const 57_u8);
        switchInt(move _134) -> [0: bb173, otherwise: bb178];
    }

    bb173: {
        _135 = Le(const 65_u8, copy _5);
        switchInt(move _135) -> [0: bb175, otherwise: bb174];
    }

    bb174: {
        _136 = Le(copy _5, const 90_u8);
        switchInt(move _136) -> [0: bb175, otherwise: bb178];
    }

    bb175: {
        _137 = Le(const 97_u8, copy _5);
        switchInt(move _137) -> [0: bb177, otherwise: bb176];
    }

    bb176: {
        _138 = Le(copy _5, const 122_u8);
        switchInt(move _138) -> [0: bb177, otherwise: bb178];
    }

    bb177: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb178: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S21;
        goto -> bb218;
    }

    bb179: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb180: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb181: {
        _139 = Le(const 48_u8, copy _5);
        switchInt(move _139) -> [0: bb183, otherwise: bb182];
    }

    bb182: {
        _140 = Le(copy _5, const 57_u8);
        switchInt(move _140) -> [0: bb183, otherwise: bb188];
    }

    bb183: {
        _141 = Le(const 65_u8, copy _5);
        switchInt(move _141) -> [0: bb185, otherwise: bb184];
    }

    bb184: {
        _142 = Le(copy _5, const 90_u8);
        switchInt(move _142) -> [0: bb185, otherwise: bb188];
    }

    bb185: {
        _143 = Le(const 97_u8, copy _5);
        switchInt(move _143) -> [0: bb187, otherwise: bb186];
    }

    bb186: {
        _144 = Le(copy _5, const 122_u8);
        switchInt(move _144) -> [0: bb187, otherwise: bb188];
    }

    bb187: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb188: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S19;
        goto -> bb189;
    }

    bb189: {
        StorageLive(_146);
        StorageLive(_145);
        _145 = copy _2;
        _146 = Lt(move _145, copy _4);
        switchInt(move _146) -> [0: bb190, otherwise: bb191];
    }

    bb190: {
        StorageDead(_145);
        _5 = const 0_u8;
        goto -> bb193;
    }

    bb191: {
        StorageDead(_145);
        StorageLive(_148);
        StorageLive(_147);
        _147 = copy _2;
        _148 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _147) -> [return: bb192, unwind unreachable];
    }

    bb192: {
        StorageDead(_147);
        _5 = copy (*_148);
        StorageDead(_148);
        goto -> bb193;
    }

    bb193: {
        StorageDead(_146);
        switchInt(copy _5) -> [45: bb194, 46: bb208, 62: bb209, otherwise: bb210];
    }

    bb194: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S20;
        goto -> bb195;
    }

    bb195: {
        StorageLive(_150);
        StorageLive(_149);
        _149 = copy _2;
        _150 = Lt(move _149, copy _4);
        switchInt(move _150) -> [0: bb196, otherwise: bb197];
    }

    bb196: {
        StorageDead(_149);
        _5 = const 0_u8;
        StorageDead(_150);
        goto -> bb200;
    }

    bb197: {
        StorageDead(_149);
        StorageLive(_152);
        StorageLive(_151);
        _151 = copy _2;
        _152 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _151) -> [return: bb198, unwind unreachable];
    }

    bb198: {
        StorageDead(_151);
        _5 = copy (*_152);
        StorageDead(_152);
        StorageDead(_150);
        switchInt(copy _5) -> [45: bb199, otherwise: bb200];
    }

    bb199: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S22;
        goto -> bb224;
    }

    bb200: {
        _153 = Le(const 48_u8, copy _5);
        switchInt(move _153) -> [0: bb202, otherwise: bb201];
    }

    bb201: {
        _154 = Le(copy _5, const 57_u8);
        switchInt(move _154) -> [0: bb202, otherwise: bb207];
    }

    bb202: {
        _155 = Le(const 65_u8, copy _5);
        switchInt(move _155) -> [0: bb204, otherwise: bb203];
    }

    bb203: {
        _156 = Le(copy _5, const 90_u8);
        switchInt(move _156) -> [0: bb204, otherwise: bb207];
    }

    bb204: {
        _157 = Le(const 97_u8, copy _5);
        switchInt(move _157) -> [0: bb206, otherwise: bb205];
    }

    bb205: {
        _158 = Le(copy _5, const 122_u8);
        switchInt(move _158) -> [0: bb206, otherwise: bb207];
    }

    bb206: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb207: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S23;
        goto -> bb247;
    }

    bb208: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb209: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb210: {
        _159 = Le(const 48_u8, copy _5);
        switchInt(move _159) -> [0: bb212, otherwise: bb211];
    }

    bb211: {
        _160 = Le(copy _5, const 57_u8);
        switchInt(move _160) -> [0: bb212, otherwise: bb217];
    }

    bb212: {
        _161 = Le(const 65_u8, copy _5);
        switchInt(move _161) -> [0: bb214, otherwise: bb213];
    }

    bb213: {
        _162 = Le(copy _5, const 90_u8);
        switchInt(move _162) -> [0: bb214, otherwise: bb217];
    }

    bb214: {
        _163 = Le(const 97_u8, copy _5);
        switchInt(move _163) -> [0: bb216, otherwise: bb215];
    }

    bb215: {
        _164 = Le(copy _5, const 122_u8);
        switchInt(move _164) -> [0: bb216, otherwise: bb217];
    }

    bb216: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb217: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S21;
        goto -> bb218;
    }

    bb218: {
        StorageLive(_166);
        StorageLive(_165);
        _165 = copy _2;
        _166 = Lt(move _165, copy _4);
        switchInt(move _166) -> [0: bb219, otherwise: bb220];
    }

    bb219: {
        StorageDead(_165);
        _5 = const 0_u8;
        goto -> bb222;
    }

    bb220: {
        StorageDead(_165);
        StorageLive(_168);
        StorageLive(_167);
        _167 = copy _2;
        _168 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _167) -> [return: bb221, unwind unreachable];
    }

    bb221: {
        StorageDead(_167);
        _5 = copy (*_168);
        StorageDead(_168);
        goto -> bb222;
    }

    bb222: {
        StorageDead(_166);
        switchInt(copy _5) -> [45: bb223, 46: bb237, 62: bb238, otherwise: bb239];
    }

    bb223: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S22;
        goto -> bb224;
    }

    bb224: {
        StorageLive(_170);
        StorageLive(_169);
        _169 = copy _2;
        _170 = Lt(move _169, copy _4);
        switchInt(move _170) -> [0: bb225, otherwise: bb226];
    }

    bb225: {
        StorageDead(_169);
        _5 = const 0_u8;
        StorageDead(_170);
        goto -> bb229;
    }

    bb226: {
        StorageDead(_169);
        StorageLive(_172);
        StorageLive(_171);
        _171 = copy _2;
        _172 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _171) -> [return: bb227, unwind unreachable];
    }

    bb227: {
        StorageDead(_171);
        _5 = copy (*_172);
        StorageDead(_172);
        StorageDead(_170);
        switchInt(copy _5) -> [45: bb228, otherwise: bb229];
    }

    bb228: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S24;
        goto -> bb253;
    }

    bb229: {
        _173 = Le(const 48_u8, copy _5);
        switchInt(move _173) -> [0: bb231, otherwise: bb230];
    }

    bb230: {
        _174 = Le(copy _5, const 57_u8);
        switchInt(move _174) -> [0: bb231, otherwise: bb236];
    }

    bb231: {
        _175 = Le(const 65_u8, copy _5);
        switchInt(move _175) -> [0: bb233, otherwise: bb232];
    }

    bb232: {
        _176 = Le(copy _5, const 90_u8);
        switchInt(move _176) -> [0: bb233, otherwise: bb236];
    }

    bb233: {
        _177 = Le(const 97_u8, copy _5);
        switchInt(move _177) -> [0: bb235, otherwise: bb234];
    }

    bb234: {
        _178 = Le(copy _5, const 122_u8);
        switchInt(move _178) -> [0: bb235, otherwise: bb236];
    }

    bb235: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb236: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S25;
        goto -> bb276;
    }

    bb237: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb238: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb239: {
        _179 = Le(const 48_u8, copy _5);
        switchInt(move _179) -> [0: bb241, otherwise: bb240];
    }

    bb240: {
        _180 = Le(copy _5, const 57_u8);
        switchInt(move _180) -> [0: bb241, otherwise: bb246];
    }

    bb241: {
        _181 = Le(const 65_u8, copy _5);
        switchInt(move _181) -> [0: bb243, otherwise: bb242];
    }

    bb242: {
        _182 = Le(copy _5, const 90_u8);
        switchInt(move _182) -> [0: bb243, otherwise: bb246];
    }

    bb243: {
        _183 = Le(const 97_u8, copy _5);
        switchInt(move _183) -> [0: bb245, otherwise: bb244];
    }

    bb244: {
        _184 = Le(copy _5, const 122_u8);
        switchInt(move _184) -> [0: bb245, otherwise: bb246];
    }

    bb245: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb246: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S23;
        goto -> bb247;
    }

    bb247: {
        StorageLive(_186);
        StorageLive(_185);
        _185 = copy _2;
        _186 = Lt(move _185, copy _4);
        switchInt(move _186) -> [0: bb248, otherwise: bb249];
    }

    bb248: {
        StorageDead(_185);
        _5 = const 0_u8;
        goto -> bb251;
    }

    bb249: {
        StorageDead(_185);
        StorageLive(_188);
        StorageLive(_187);
        _187 = copy _2;
        _188 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _187) -> [return: bb250, unwind unreachable];
    }

    bb250: {
        StorageDead(_187);
        _5 = copy (*_188);
        StorageDead(_188);
        goto -> bb251;
    }

    bb251: {
        StorageDead(_186);
        switchInt(copy _5) -> [45: bb252, 46: bb266, 62: bb267, otherwise: bb268];
    }

    bb252: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S24;
        goto -> bb253;
    }

    bb253: {
        StorageLive(_190);
        StorageLive(_189);
        _189 = copy _2;
        _190 = Lt(move _189, copy _4);
        switchInt(move _190) -> [0: bb254, otherwise: bb255];
    }

    bb254: {
        StorageDead(_189);
        _5 = const 0_u8;
        StorageDead(_190);
        goto -> bb258;
    }

    bb255: {
        StorageDead(_189);
        StorageLive(_192);
        StorageLive(_191);
        _191 = copy _2;
        _192 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _191) -> [return: bb256, unwind unreachable];
    }

    bb256: {
        StorageDead(_191);
        _5 = copy (*_192);
        StorageDead(_192);
        StorageDead(_190);
        switchInt(copy _5) -> [45: bb257, otherwise: bb258];
    }

    bb257: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S26;
        goto -> bb282;
    }

    bb258: {
        _193 = Le(const 48_u8, copy _5);
        switchInt(move _193) -> [0: bb260, otherwise: bb259];
    }

    bb259: {
        _194 = Le(copy _5, const 57_u8);
        switchInt(move _194) -> [0: bb260, otherwise: bb265];
    }

    bb260: {
        _195 = Le(const 65_u8, copy _5);
        switchInt(move _195) -> [0: bb262, otherwise: bb261];
    }

    bb261: {
        _196 = Le(copy _5, const 90_u8);
        switchInt(move _196) -> [0: bb262, otherwise: bb265];
    }

    bb262: {
        _197 = Le(const 97_u8, copy _5);
        switchInt(move _197) -> [0: bb264, otherwise: bb263];
    }

    bb263: {
        _198 = Le(copy _5, const 122_u8);
        switchInt(move _198) -> [0: bb264, otherwise: bb265];
    }

    bb264: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb265: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S27;
        goto -> bb305;
    }

    bb266: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb267: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb268: {
        _199 = Le(const 48_u8, copy _5);
        switchInt(move _199) -> [0: bb270, otherwise: bb269];
    }

    bb269: {
        _200 = Le(copy _5, const 57_u8);
        switchInt(move _200) -> [0: bb270, otherwise: bb275];
    }

    bb270: {
        _201 = Le(const 65_u8, copy _5);
        switchInt(move _201) -> [0: bb272, otherwise: bb271];
    }

    bb271: {
        _202 = Le(copy _5, const 90_u8);
        switchInt(move _202) -> [0: bb272, otherwise: bb275];
    }

    bb272: {
        _203 = Le(const 97_u8, copy _5);
        switchInt(move _203) -> [0: bb274, otherwise: bb273];
    }

    bb273: {
        _204 = Le(copy _5, const 122_u8);
        switchInt(move _204) -> [0: bb274, otherwise: bb275];
    }

    bb274: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb275: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S25;
        goto -> bb276;
    }

    bb276: {
        StorageLive(_206);
        StorageLive(_205);
        _205 = copy _2;
        _206 = Lt(move _205, copy _4);
        switchInt(move _206) -> [0: bb277, otherwise: bb278];
    }

    bb277: {
        StorageDead(_205);
        _5 = const 0_u8;
        goto -> bb280;
    }

    bb278: {
        StorageDead(_205);
        StorageLive(_208);
        StorageLive(_207);
        _207 = copy _2;
        _208 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _207) -> [return: bb279, unwind unreachable];
    }

    bb279: {
        StorageDead(_207);
        _5 = copy (*_208);
        StorageDead(_208);
        goto -> bb280;
    }

    bb280: {
        StorageDead(_206);
        switchInt(copy _5) -> [45: bb281, 46: bb295, 62: bb296, otherwise: bb297];
    }

    bb281: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S26;
        goto -> bb282;
    }

    bb282: {
        StorageLive(_210);
        StorageLive(_209);
        _209 = copy _2;
        _210 = Lt(move _209, copy _4);
        switchInt(move _210) -> [0: bb283, otherwise: bb284];
    }

    bb283: {
        StorageDead(_209);
        _5 = const 0_u8;
        StorageDead(_210);
        goto -> bb287;
    }

    bb284: {
        StorageDead(_209);
        StorageLive(_212);
        StorageLive(_211);
        _211 = copy _2;
        _212 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _211) -> [return: bb285, unwind unreachable];
    }

    bb285: {
        StorageDead(_211);
        _5 = copy (*_212);
        StorageDead(_212);
        StorageDead(_210);
        switchInt(copy _5) -> [45: bb286, otherwise: bb287];
    }

    bb286: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S28;
        goto -> bb311;
    }

    bb287: {
        _213 = Le(const 48_u8, copy _5);
        switchInt(move _213) -> [0: bb289, otherwise: bb288];
    }

    bb288: {
        _214 = Le(copy _5, const 57_u8);
        switchInt(move _214) -> [0: bb289, otherwise: bb294];
    }

    bb289: {
        _215 = Le(const 65_u8, copy _5);
        switchInt(move _215) -> [0: bb291, otherwise: bb290];
    }

    bb290: {
        _216 = Le(copy _5, const 90_u8);
        switchInt(move _216) -> [0: bb291, otherwise: bb294];
    }

    bb291: {
        _217 = Le(const 97_u8, copy _5);
        switchInt(move _217) -> [0: bb293, otherwise: bb292];
    }

    bb292: {
        _218 = Le(copy _5, const 122_u8);
        switchInt(move _218) -> [0: bb293, otherwise: bb294];
    }

    bb293: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb294: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S29;
        goto -> bb334;
    }

    bb295: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb296: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb297: {
        _219 = Le(const 48_u8, copy _5);
        switchInt(move _219) -> [0: bb299, otherwise: bb298];
    }

    bb298: {
        _220 = Le(copy _5, const 57_u8);
        switchInt(move _220) -> [0: bb299, otherwise: bb304];
    }

    bb299: {
        _221 = Le(const 65_u8, copy _5);
        switchInt(move _221) -> [0: bb301, otherwise: bb300];
    }

    bb300: {
        _222 = Le(copy _5, const 90_u8);
        switchInt(move _222) -> [0: bb301, otherwise: bb304];
    }

    bb301: {
        _223 = Le(const 97_u8, copy _5);
        switchInt(move _223) -> [0: bb303, otherwise: bb302];
    }

    bb302: {
        _224 = Le(copy _5, const 122_u8);
        switchInt(move _224) -> [0: bb303, otherwise: bb304];
    }

    bb303: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb304: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S27;
        goto -> bb305;
    }

    bb305: {
        StorageLive(_226);
        StorageLive(_225);
        _225 = copy _2;
        _226 = Lt(move _225, copy _4);
        switchInt(move _226) -> [0: bb306, otherwise: bb307];
    }

    bb306: {
        StorageDead(_225);
        _5 = const 0_u8;
        goto -> bb309;
    }

    bb307: {
        StorageDead(_225);
        StorageLive(_228);
        StorageLive(_227);
        _227 = copy _2;
        _228 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _227) -> [return: bb308, unwind unreachable];
    }

    bb308: {
        StorageDead(_227);
        _5 = copy (*_228);
        StorageDead(_228);
        goto -> bb309;
    }

    bb309: {
        StorageDead(_226);
        switchInt(copy _5) -> [45: bb310, 46: bb324, 62: bb325, otherwise: bb326];
    }

    bb310: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S28;
        goto -> bb311;
    }

    bb311: {
        StorageLive(_230);
        StorageLive(_229);
        _229 = copy _2;
        _230 = Lt(move _229, copy _4);
        switchInt(move _230) -> [0: bb312, otherwise: bb313];
    }

    bb312: {
        StorageDead(_229);
        _5 = const 0_u8;
        StorageDead(_230);
        goto -> bb316;
    }

    bb313: {
        StorageDead(_229);
        StorageLive(_232);
        StorageLive(_231);
        _231 = copy _2;
        _232 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _231) -> [return: bb314, unwind unreachable];
    }

    bb314: {
        StorageDead(_231);
        _5 = copy (*_232);
        StorageDead(_232);
        StorageDead(_230);
        switchInt(copy _5) -> [45: bb315, otherwise: bb316];
    }

    bb315: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S30;
        goto -> bb340;
    }

    bb316: {
        _233 = Le(const 48_u8, copy _5);
        switchInt(move _233) -> [0: bb318, otherwise: bb317];
    }

    bb317: {
        _234 = Le(copy _5, const 57_u8);
        switchInt(move _234) -> [0: bb318, otherwise: bb323];
    }

    bb318: {
        _235 = Le(const 65_u8, copy _5);
        switchInt(move _235) -> [0: bb320, otherwise: bb319];
    }

    bb319: {
        _236 = Le(copy _5, const 90_u8);
        switchInt(move _236) -> [0: bb320, otherwise: bb323];
    }

    bb320: {
        _237 = Le(const 97_u8, copy _5);
        switchInt(move _237) -> [0: bb322, otherwise: bb321];
    }

    bb321: {
        _238 = Le(copy _5, const 122_u8);
        switchInt(move _238) -> [0: bb322, otherwise: bb323];
    }

    bb322: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb323: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S31;
        goto -> bb363;
    }

    bb324: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb325: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb326: {
        _239 = Le(const 48_u8, copy _5);
        switchInt(move _239) -> [0: bb328, otherwise: bb327];
    }

    bb327: {
        _240 = Le(copy _5, const 57_u8);
        switchInt(move _240) -> [0: bb328, otherwise: bb333];
    }

    bb328: {
        _241 = Le(const 65_u8, copy _5);
        switchInt(move _241) -> [0: bb330, otherwise: bb329];
    }

    bb329: {
        _242 = Le(copy _5, const 90_u8);
        switchInt(move _242) -> [0: bb330, otherwise: bb333];
    }

    bb330: {
        _243 = Le(const 97_u8, copy _5);
        switchInt(move _243) -> [0: bb332, otherwise: bb331];
    }

    bb331: {
        _244 = Le(copy _5, const 122_u8);
        switchInt(move _244) -> [0: bb332, otherwise: bb333];
    }

    bb332: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb333: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S29;
        goto -> bb334;
    }

    bb334: {
        StorageLive(_246);
        StorageLive(_245);
        _245 = copy _2;
        _246 = Lt(move _245, copy _4);
        switchInt(move _246) -> [0: bb335, otherwise: bb336];
    }

    bb335: {
        StorageDead(_245);
        _5 = const 0_u8;
        goto -> bb338;
    }

    bb336: {
        StorageDead(_245);
        StorageLive(_248);
        StorageLive(_247);
        _247 = copy _2;
        _248 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _247) -> [return: bb337, unwind unreachable];
    }

    bb337: {
        StorageDead(_247);
        _5 = copy (*_248);
        StorageDead(_248);
        goto -> bb338;
    }

    bb338: {
        StorageDead(_246);
        switchInt(copy _5) -> [45: bb339, 46: bb353, 62: bb354, otherwise: bb355];
    }

    bb339: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S30;
        goto -> bb340;
    }

    bb340: {
        StorageLive(_250);
        StorageLive(_249);
        _249 = copy _2;
        _250 = Lt(move _249, copy _4);
        switchInt(move _250) -> [0: bb341, otherwise: bb342];
    }

    bb341: {
        StorageDead(_249);
        _5 = const 0_u8;
        StorageDead(_250);
        goto -> bb345;
    }

    bb342: {
        StorageDead(_249);
        StorageLive(_252);
        StorageLive(_251);
        _251 = copy _2;
        _252 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _251) -> [return: bb343, unwind unreachable];
    }

    bb343: {
        StorageDead(_251);
        _5 = copy (*_252);
        StorageDead(_252);
        StorageDead(_250);
        switchInt(copy _5) -> [45: bb344, otherwise: bb345];
    }

    bb344: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S32;
        goto -> bb369;
    }

    bb345: {
        _253 = Le(const 48_u8, copy _5);
        switchInt(move _253) -> [0: bb347, otherwise: bb346];
    }

    bb346: {
        _254 = Le(copy _5, const 57_u8);
        switchInt(move _254) -> [0: bb347, otherwise: bb352];
    }

    bb347: {
        _255 = Le(const 65_u8, copy _5);
        switchInt(move _255) -> [0: bb349, otherwise: bb348];
    }

    bb348: {
        _256 = Le(copy _5, const 90_u8);
        switchInt(move _256) -> [0: bb349, otherwise: bb352];
    }

    bb349: {
        _257 = Le(const 97_u8, copy _5);
        switchInt(move _257) -> [0: bb351, otherwise: bb350];
    }

    bb350: {
        _258 = Le(copy _5, const 122_u8);
        switchInt(move _258) -> [0: bb351, otherwise: bb352];
    }

    bb351: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb352: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S33;
        goto -> bb392;
    }

    bb353: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb354: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb355: {
        _259 = Le(const 48_u8, copy _5);
        switchInt(move _259) -> [0: bb357, otherwise: bb356];
    }

    bb356: {
        _260 = Le(copy _5, const 57_u8);
        switchInt(move _260) -> [0: bb357, otherwise: bb362];
    }

    bb357: {
        _261 = Le(const 65_u8, copy _5);
        switchInt(move _261) -> [0: bb359, otherwise: bb358];
    }

    bb358: {
        _262 = Le(copy _5, const 90_u8);
        switchInt(move _262) -> [0: bb359, otherwise: bb362];
    }

    bb359: {
        _263 = Le(const 97_u8, copy _5);
        switchInt(move _263) -> [0: bb361, otherwise: bb360];
    }

    bb360: {
        _264 = Le(copy _5, const 122_u8);
        switchInt(move _264) -> [0: bb361, otherwise: bb362];
    }

    bb361: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb362: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S31;
        goto -> bb363;
    }

    bb363: {
        StorageLive(_266);
        StorageLive(_265);
        _265 = copy _2;
        _266 = Lt(move _265, copy _4);
        switchInt(move _266) -> [0: bb364, otherwise: bb365];
    }

    bb364: {
        StorageDead(_265);
        _5 = const 0_u8;
        goto -> bb367;
    }

    bb365: {
        StorageDead(_265);
        StorageLive(_268);
        StorageLive(_267);
        _267 = copy _2;
        _268 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _267) -> [return: bb366, unwind unreachable];
    }

    bb366: {
        StorageDead(_267);
        _5 = copy (*_268);
        StorageDead(_268);
        goto -> bb367;
    }

    bb367: {
        StorageDead(_266);
        switchInt(copy _5) -> [45: bb368, 46: bb382, 62: bb383, otherwise: bb384];
    }

    bb368: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S32;
        goto -> bb369;
    }

    bb369: {
        StorageLive(_270);
        StorageLive(_269);
        _269 = copy _2;
        _270 = Lt(move _269, copy _4);
        switchInt(move _270) -> [0: bb370, otherwise: bb371];
    }

    bb370: {
        StorageDead(_269);
        _5 = const 0_u8;
        StorageDead(_270);
        goto -> bb374;
    }

    bb371: {
        StorageDead(_269);
        StorageLive(_272);
        StorageLive(_271);
        _271 = copy _2;
        _272 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _271) -> [return: bb372, unwind unreachable];
    }

    bb372: {
        StorageDead(_271);
        _5 = copy (*_272);
        StorageDead(_272);
        StorageDead(_270);
        switchInt(copy _5) -> [45: bb373, otherwise: bb374];
    }

    bb373: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S34;
        goto -> bb398;
    }

    bb374: {
        _273 = Le(const 48_u8, copy _5);
        switchInt(move _273) -> [0: bb376, otherwise: bb375];
    }

    bb375: {
        _274 = Le(copy _5, const 57_u8);
        switchInt(move _274) -> [0: bb376, otherwise: bb381];
    }

    bb376: {
        _275 = Le(const 65_u8, copy _5);
        switchInt(move _275) -> [0: bb378, otherwise: bb377];
    }

    bb377: {
        _276 = Le(copy _5, const 90_u8);
        switchInt(move _276) -> [0: bb378, otherwise: bb381];
    }

    bb378: {
        _277 = Le(const 97_u8, copy _5);
        switchInt(move _277) -> [0: bb380, otherwise: bb379];
    }

    bb379: {
        _278 = Le(copy _5, const 122_u8);
        switchInt(move _278) -> [0: bb380, otherwise: bb381];
    }

    bb380: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb381: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S35;
        goto -> bb421;
    }

    bb382: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb383: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb384: {
        _279 = Le(const 48_u8, copy _5);
        switchInt(move _279) -> [0: bb386, otherwise: bb385];
    }

    bb385: {
        _280 = Le(copy _5, const 57_u8);
        switchInt(move _280) -> [0: bb386, otherwise: bb391];
    }

    bb386: {
        _281 = Le(const 65_u8, copy _5);
        switchInt(move _281) -> [0: bb388, otherwise: bb387];
    }

    bb387: {
        _282 = Le(copy _5, const 90_u8);
        switchInt(move _282) -> [0: bb388, otherwise: bb391];
    }

    bb388: {
        _283 = Le(const 97_u8, copy _5);
        switchInt(move _283) -> [0: bb390, otherwise: bb389];
    }

    bb389: {
        _284 = Le(copy _5, const 122_u8);
        switchInt(move _284) -> [0: bb390, otherwise: bb391];
    }

    bb390: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb391: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S33;
        goto -> bb392;
    }

    bb392: {
        StorageLive(_286);
        StorageLive(_285);
        _285 = copy _2;
        _286 = Lt(move _285, copy _4);
        switchInt(move _286) -> [0: bb393, otherwise: bb394];
    }

    bb393: {
        StorageDead(_285);
        _5 = const 0_u8;
        goto -> bb396;
    }

    bb394: {
        StorageDead(_285);
        StorageLive(_288);
        StorageLive(_287);
        _287 = copy _2;
        _288 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _287) -> [return: bb395, unwind unreachable];
    }

    bb395: {
        StorageDead(_287);
        _5 = copy (*_288);
        StorageDead(_288);
        goto -> bb396;
    }

    bb396: {
        StorageDead(_286);
        switchInt(copy _5) -> [45: bb397, 46: bb411, 62: bb412, otherwise: bb413];
    }

    bb397: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S34;
        goto -> bb398;
    }

    bb398: {
        StorageLive(_290);
        StorageLive(_289);
        _289 = copy _2;
        _290 = Lt(move _289, copy _4);
        switchInt(move _290) -> [0: bb399, otherwise: bb400];
    }

    bb399: {
        StorageDead(_289);
        _5 = const 0_u8;
        StorageDead(_290);
        goto -> bb403;
    }

    bb400: {
        StorageDead(_289);
        StorageLive(_292);
        StorageLive(_291);
        _291 = copy _2;
        _292 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _291) -> [return: bb401, unwind unreachable];
    }

    bb401: {
        StorageDead(_291);
        _5 = copy (*_292);
        StorageDead(_292);
        StorageDead(_290);
        switchInt(copy _5) -> [45: bb402, otherwise: bb403];
    }

    bb402: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S36;
        goto -> bb427;
    }

    bb403: {
        _293 = Le(const 48_u8, copy _5);
        switchInt(move _293) -> [0: bb405, otherwise: bb404];
    }

    bb404: {
        _294 = Le(copy _5, const 57_u8);
        switchInt(move _294) -> [0: bb405, otherwise: bb410];
    }

    bb405: {
        _295 = Le(const 65_u8, copy _5);
        switchInt(move _295) -> [0: bb407, otherwise: bb406];
    }

    bb406: {
        _296 = Le(copy _5, const 90_u8);
        switchInt(move _296) -> [0: bb407, otherwise: bb410];
    }

    bb407: {
        _297 = Le(const 97_u8, copy _5);
        switchInt(move _297) -> [0: bb409, otherwise: bb408];
    }

    bb408: {
        _298 = Le(copy _5, const 122_u8);
        switchInt(move _298) -> [0: bb409, otherwise: bb410];
    }

    bb409: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb410: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S37;
        goto -> bb450;
    }

    bb411: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb412: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb413: {
        _299 = Le(const 48_u8, copy _5);
        switchInt(move _299) -> [0: bb415, otherwise: bb414];
    }

    bb414: {
        _300 = Le(copy _5, const 57_u8);
        switchInt(move _300) -> [0: bb415, otherwise: bb420];
    }

    bb415: {
        _301 = Le(const 65_u8, copy _5);
        switchInt(move _301) -> [0: bb417, otherwise: bb416];
    }

    bb416: {
        _302 = Le(copy _5, const 90_u8);
        switchInt(move _302) -> [0: bb417, otherwise: bb420];
    }

    bb417: {
        _303 = Le(const 97_u8, copy _5);
        switchInt(move _303) -> [0: bb419, otherwise: bb418];
    }

    bb418: {
        _304 = Le(copy _5, const 122_u8);
        switchInt(move _304) -> [0: bb419, otherwise: bb420];
    }

    bb419: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb420: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S35;
        goto -> bb421;
    }

    bb421: {
        StorageLive(_306);
        StorageLive(_305);
        _305 = copy _2;
        _306 = Lt(move _305, copy _4);
        switchInt(move _306) -> [0: bb422, otherwise: bb423];
    }

    bb422: {
        StorageDead(_305);
        _5 = const 0_u8;
        goto -> bb425;
    }

    bb423: {
        StorageDead(_305);
        StorageLive(_308);
        StorageLive(_307);
        _307 = copy _2;
        _308 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _307) -> [return: bb424, unwind unreachable];
    }

    bb424: {
        StorageDead(_307);
        _5 = copy (*_308);
        StorageDead(_308);
        goto -> bb425;
    }

    bb425: {
        StorageDead(_306);
        switchInt(copy _5) -> [45: bb426, 46: bb440, 62: bb441, otherwise: bb442];
    }

    bb426: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S36;
        goto -> bb427;
    }

    bb427: {
        StorageLive(_310);
        StorageLive(_309);
        _309 = copy _2;
        _310 = Lt(move _309, copy _4);
        switchInt(move _310) -> [0: bb428, otherwise: bb429];
    }

    bb428: {
        StorageDead(_309);
        _5 = const 0_u8;
        StorageDead(_310);
        goto -> bb432;
    }

    bb429: {
        StorageDead(_309);
        StorageLive(_312);
        StorageLive(_311);
        _311 = copy _2;
        _312 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _311) -> [return: bb430, unwind unreachable];
    }

    bb430: {
        StorageDead(_311);
        _5 = copy (*_312);
        StorageDead(_312);
        StorageDead(_310);
        switchInt(copy _5) -> [45: bb431, otherwise: bb432];
    }

    bb431: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S38;
        goto -> bb456;
    }

    bb432: {
        _313 = Le(const 48_u8, copy _5);
        switchInt(move _313) -> [0: bb434, otherwise: bb433];
    }

    bb433: {
        _314 = Le(copy _5, const 57_u8);
        switchInt(move _314) -> [0: bb434, otherwise: bb439];
    }

    bb434: {
        _315 = Le(const 65_u8, copy _5);
        switchInt(move _315) -> [0: bb436, otherwise: bb435];
    }

    bb435: {
        _316 = Le(copy _5, const 90_u8);
        switchInt(move _316) -> [0: bb436, otherwise: bb439];
    }

    bb436: {
        _317 = Le(const 97_u8, copy _5);
        switchInt(move _317) -> [0: bb438, otherwise: bb437];
    }

    bb437: {
        _318 = Le(copy _5, const 122_u8);
        switchInt(move _318) -> [0: bb438, otherwise: bb439];
    }

    bb438: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb439: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S39;
        goto -> bb479;
    }

    bb440: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb441: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb442: {
        _319 = Le(const 48_u8, copy _5);
        switchInt(move _319) -> [0: bb444, otherwise: bb443];
    }

    bb443: {
        _320 = Le(copy _5, const 57_u8);
        switchInt(move _320) -> [0: bb444, otherwise: bb449];
    }

    bb444: {
        _321 = Le(const 65_u8, copy _5);
        switchInt(move _321) -> [0: bb446, otherwise: bb445];
    }

    bb445: {
        _322 = Le(copy _5, const 90_u8);
        switchInt(move _322) -> [0: bb446, otherwise: bb449];
    }

    bb446: {
        _323 = Le(const 97_u8, copy _5);
        switchInt(move _323) -> [0: bb448, otherwise: bb447];
    }

    bb447: {
        _324 = Le(copy _5, const 122_u8);
        switchInt(move _324) -> [0: bb448, otherwise: bb449];
    }

    bb448: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb449: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S37;
        goto -> bb450;
    }

    bb450: {
        StorageLive(_326);
        StorageLive(_325);
        _325 = copy _2;
        _326 = Lt(move _325, copy _4);
        switchInt(move _326) -> [0: bb451, otherwise: bb452];
    }

    bb451: {
        StorageDead(_325);
        _5 = const 0_u8;
        goto -> bb454;
    }

    bb452: {
        StorageDead(_325);
        StorageLive(_328);
        StorageLive(_327);
        _327 = copy _2;
        _328 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _327) -> [return: bb453, unwind unreachable];
    }

    bb453: {
        StorageDead(_327);
        _5 = copy (*_328);
        StorageDead(_328);
        goto -> bb454;
    }

    bb454: {
        StorageDead(_326);
        switchInt(copy _5) -> [45: bb455, 46: bb469, 62: bb470, otherwise: bb471];
    }

    bb455: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S38;
        goto -> bb456;
    }

    bb456: {
        StorageLive(_330);
        StorageLive(_329);
        _329 = copy _2;
        _330 = Lt(move _329, copy _4);
        switchInt(move _330) -> [0: bb457, otherwise: bb458];
    }

    bb457: {
        StorageDead(_329);
        _5 = const 0_u8;
        StorageDead(_330);
        goto -> bb461;
    }

    bb458: {
        StorageDead(_329);
        StorageLive(_332);
        StorageLive(_331);
        _331 = copy _2;
        _332 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _331) -> [return: bb459, unwind unreachable];
    }

    bb459: {
        StorageDead(_331);
        _5 = copy (*_332);
        StorageDead(_332);
        StorageDead(_330);
        switchInt(copy _5) -> [45: bb460, otherwise: bb461];
    }

    bb460: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S40;
        goto -> bb485;
    }

    bb461: {
        _333 = Le(const 48_u8, copy _5);
        switchInt(move _333) -> [0: bb463, otherwise: bb462];
    }

    bb462: {
        _334 = Le(copy _5, const 57_u8);
        switchInt(move _334) -> [0: bb463, otherwise: bb468];
    }

    bb463: {
        _335 = Le(const 65_u8, copy _5);
        switchInt(move _335) -> [0: bb465, otherwise: bb464];
    }

    bb464: {
        _336 = Le(copy _5, const 90_u8);
        switchInt(move _336) -> [0: bb465, otherwise: bb468];
    }

    bb465: {
        _337 = Le(const 97_u8, copy _5);
        switchInt(move _337) -> [0: bb467, otherwise: bb466];
    }

    bb466: {
        _338 = Le(copy _5, const 122_u8);
        switchInt(move _338) -> [0: bb467, otherwise: bb468];
    }

    bb467: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb468: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S41;
        goto -> bb508;
    }

    bb469: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb470: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb471: {
        _339 = Le(const 48_u8, copy _5);
        switchInt(move _339) -> [0: bb473, otherwise: bb472];
    }

    bb472: {
        _340 = Le(copy _5, const 57_u8);
        switchInt(move _340) -> [0: bb473, otherwise: bb478];
    }

    bb473: {
        _341 = Le(const 65_u8, copy _5);
        switchInt(move _341) -> [0: bb475, otherwise: bb474];
    }

    bb474: {
        _342 = Le(copy _5, const 90_u8);
        switchInt(move _342) -> [0: bb475, otherwise: bb478];
    }

    bb475: {
        _343 = Le(const 97_u8, copy _5);
        switchInt(move _343) -> [0: bb477, otherwise: bb476];
    }

    bb476: {
        _344 = Le(copy _5, const 122_u8);
        switchInt(move _344) -> [0: bb477, otherwise: bb478];
    }

    bb477: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb478: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S39;
        goto -> bb479;
    }

    bb479: {
        StorageLive(_346);
        StorageLive(_345);
        _345 = copy _2;
        _346 = Lt(move _345, copy _4);
        switchInt(move _346) -> [0: bb480, otherwise: bb481];
    }

    bb480: {
        StorageDead(_345);
        _5 = const 0_u8;
        goto -> bb483;
    }

    bb481: {
        StorageDead(_345);
        StorageLive(_348);
        StorageLive(_347);
        _347 = copy _2;
        _348 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _347) -> [return: bb482, unwind unreachable];
    }

    bb482: {
        StorageDead(_347);
        _5 = copy (*_348);
        StorageDead(_348);
        goto -> bb483;
    }

    bb483: {
        StorageDead(_346);
        switchInt(copy _5) -> [45: bb484, 46: bb498, 62: bb499, otherwise: bb500];
    }

    bb484: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S40;
        goto -> bb485;
    }

    bb485: {
        StorageLive(_350);
        StorageLive(_349);
        _349 = copy _2;
        _350 = Lt(move _349, copy _4);
        switchInt(move _350) -> [0: bb486, otherwise: bb487];
    }

    bb486: {
        StorageDead(_349);
        _5 = const 0_u8;
        StorageDead(_350);
        goto -> bb490;
    }

    bb487: {
        StorageDead(_349);
        StorageLive(_352);
        StorageLive(_351);
        _351 = copy _2;
        _352 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _351) -> [return: bb488, unwind unreachable];
    }

    bb488: {
        StorageDead(_351);
        _5 = copy (*_352);
        StorageDead(_352);
        StorageDead(_350);
        switchInt(copy _5) -> [45: bb489, otherwise: bb490];
    }

    bb489: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S42;
        goto -> bb514;
    }

    bb490: {
        _353 = Le(const 48_u8, copy _5);
        switchInt(move _353) -> [0: bb492, otherwise: bb491];
    }

    bb491: {
        _354 = Le(copy _5, const 57_u8);
        switchInt(move _354) -> [0: bb492, otherwise: bb497];
    }

    bb492: {
        _355 = Le(const 65_u8, copy _5);
        switchInt(move _355) -> [0: bb494, otherwise: bb493];
    }

    bb493: {
        _356 = Le(copy _5, const 90_u8);
        switchInt(move _356) -> [0: bb494, otherwise: bb497];
    }

    bb494: {
        _357 = Le(const 97_u8, copy _5);
        switchInt(move _357) -> [0: bb496, otherwise: bb495];
    }

    bb495: {
        _358 = Le(copy _5, const 122_u8);
        switchInt(move _358) -> [0: bb496, otherwise: bb497];
    }

    bb496: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb497: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S43;
        goto -> bb537;
    }

    bb498: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb499: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb500: {
        _359 = Le(const 48_u8, copy _5);
        switchInt(move _359) -> [0: bb502, otherwise: bb501];
    }

    bb501: {
        _360 = Le(copy _5, const 57_u8);
        switchInt(move _360) -> [0: bb502, otherwise: bb507];
    }

    bb502: {
        _361 = Le(const 65_u8, copy _5);
        switchInt(move _361) -> [0: bb504, otherwise: bb503];
    }

    bb503: {
        _362 = Le(copy _5, const 90_u8);
        switchInt(move _362) -> [0: bb504, otherwise: bb507];
    }

    bb504: {
        _363 = Le(const 97_u8, copy _5);
        switchInt(move _363) -> [0: bb506, otherwise: bb505];
    }

    bb505: {
        _364 = Le(copy _5, const 122_u8);
        switchInt(move _364) -> [0: bb506, otherwise: bb507];
    }

    bb506: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb507: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S41;
        goto -> bb508;
    }

    bb508: {
        StorageLive(_366);
        StorageLive(_365);
        _365 = copy _2;
        _366 = Lt(move _365, copy _4);
        switchInt(move _366) -> [0: bb509, otherwise: bb510];
    }

    bb509: {
        StorageDead(_365);
        _5 = const 0_u8;
        goto -> bb512;
    }

    bb510: {
        StorageDead(_365);
        StorageLive(_368);
        StorageLive(_367);
        _367 = copy _2;
        _368 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _367) -> [return: bb511, unwind unreachable];
    }

    bb511: {
        StorageDead(_367);
        _5 = copy (*_368);
        StorageDead(_368);
        goto -> bb512;
    }

    bb512: {
        StorageDead(_366);
        switchInt(copy _5) -> [45: bb513, 46: bb527, 62: bb528, otherwise: bb529];
    }

    bb513: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S42;
        goto -> bb514;
    }

    bb514: {
        StorageLive(_370);
        StorageLive(_369);
        _369 = copy _2;
        _370 = Lt(move _369, copy _4);
        switchInt(move _370) -> [0: bb515, otherwise: bb516];
    }

    bb515: {
        StorageDead(_369);
        _5 = const 0_u8;
        StorageDead(_370);
        goto -> bb519;
    }

    bb516: {
        StorageDead(_369);
        StorageLive(_372);
        StorageLive(_371);
        _371 = copy _2;
        _372 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _371) -> [return: bb517, unwind unreachable];
    }

    bb517: {
        StorageDead(_371);
        _5 = copy (*_372);
        StorageDead(_372);
        StorageDead(_370);
        switchInt(copy _5) -> [45: bb518, otherwise: bb519];
    }

    bb518: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S44;
        goto -> bb543;
    }

    bb519: {
        _373 = Le(const 48_u8, copy _5);
        switchInt(move _373) -> [0: bb521, otherwise: bb520];
    }

    bb520: {
        _374 = Le(copy _5, const 57_u8);
        switchInt(move _374) -> [0: bb521, otherwise: bb526];
    }

    bb521: {
        _375 = Le(const 65_u8, copy _5);
        switchInt(move _375) -> [0: bb523, otherwise: bb522];
    }

    bb522: {
        _376 = Le(copy _5, const 90_u8);
        switchInt(move _376) -> [0: bb523, otherwise: bb526];
    }

    bb523: {
        _377 = Le(const 97_u8, copy _5);
        switchInt(move _377) -> [0: bb525, otherwise: bb524];
    }

    bb524: {
        _378 = Le(copy _5, const 122_u8);
        switchInt(move _378) -> [0: bb525, otherwise: bb526];
    }

    bb525: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb526: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S45;
        goto -> bb566;
    }

    bb527: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb528: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb529: {
        _379 = Le(const 48_u8, copy _5);
        switchInt(move _379) -> [0: bb531, otherwise: bb530];
    }

    bb530: {
        _380 = Le(copy _5, const 57_u8);
        switchInt(move _380) -> [0: bb531, otherwise: bb536];
    }

    bb531: {
        _381 = Le(const 65_u8, copy _5);
        switchInt(move _381) -> [0: bb533, otherwise: bb532];
    }

    bb532: {
        _382 = Le(copy _5, const 90_u8);
        switchInt(move _382) -> [0: bb533, otherwise: bb536];
    }

    bb533: {
        _383 = Le(const 97_u8, copy _5);
        switchInt(move _383) -> [0: bb535, otherwise: bb534];
    }

    bb534: {
        _384 = Le(copy _5, const 122_u8);
        switchInt(move _384) -> [0: bb535, otherwise: bb536];
    }

    bb535: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb536: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S43;
        goto -> bb537;
    }

    bb537: {
        StorageLive(_386);
        StorageLive(_385);
        _385 = copy _2;
        _386 = Lt(move _385, copy _4);
        switchInt(move _386) -> [0: bb538, otherwise: bb539];
    }

    bb538: {
        StorageDead(_385);
        _5 = const 0_u8;
        goto -> bb541;
    }

    bb539: {
        StorageDead(_385);
        StorageLive(_388);
        StorageLive(_387);
        _387 = copy _2;
        _388 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _387) -> [return: bb540, unwind unreachable];
    }

    bb540: {
        StorageDead(_387);
        _5 = copy (*_388);
        StorageDead(_388);
        goto -> bb541;
    }

    bb541: {
        StorageDead(_386);
        switchInt(copy _5) -> [45: bb542, 46: bb556, 62: bb557, otherwise: bb558];
    }

    bb542: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S44;
        goto -> bb543;
    }

    bb543: {
        StorageLive(_390);
        StorageLive(_389);
        _389 = copy _2;
        _390 = Lt(move _389, copy _4);
        switchInt(move _390) -> [0: bb544, otherwise: bb545];
    }

    bb544: {
        StorageDead(_389);
        _5 = const 0_u8;
        StorageDead(_390);
        goto -> bb548;
    }

    bb545: {
        StorageDead(_389);
        StorageLive(_392);
        StorageLive(_391);
        _391 = copy _2;
        _392 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _391) -> [return: bb546, unwind unreachable];
    }

    bb546: {
        StorageDead(_391);
        _5 = copy (*_392);
        StorageDead(_392);
        StorageDead(_390);
        switchInt(copy _5) -> [45: bb547, otherwise: bb548];
    }

    bb547: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S46;
        goto -> bb572;
    }

    bb548: {
        _393 = Le(const 48_u8, copy _5);
        switchInt(move _393) -> [0: bb550, otherwise: bb549];
    }

    bb549: {
        _394 = Le(copy _5, const 57_u8);
        switchInt(move _394) -> [0: bb550, otherwise: bb555];
    }

    bb550: {
        _395 = Le(const 65_u8, copy _5);
        switchInt(move _395) -> [0: bb552, otherwise: bb551];
    }

    bb551: {
        _396 = Le(copy _5, const 90_u8);
        switchInt(move _396) -> [0: bb552, otherwise: bb555];
    }

    bb552: {
        _397 = Le(const 97_u8, copy _5);
        switchInt(move _397) -> [0: bb554, otherwise: bb553];
    }

    bb553: {
        _398 = Le(copy _5, const 122_u8);
        switchInt(move _398) -> [0: bb554, otherwise: bb555];
    }

    bb554: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb555: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S47;
        goto -> bb595;
    }

    bb556: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb557: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb558: {
        _399 = Le(const 48_u8, copy _5);
        switchInt(move _399) -> [0: bb560, otherwise: bb559];
    }

    bb559: {
        _400 = Le(copy _5, const 57_u8);
        switchInt(move _400) -> [0: bb560, otherwise: bb565];
    }

    bb560: {
        _401 = Le(const 65_u8, copy _5);
        switchInt(move _401) -> [0: bb562, otherwise: bb561];
    }

    bb561: {
        _402 = Le(copy _5, const 90_u8);
        switchInt(move _402) -> [0: bb562, otherwise: bb565];
    }

    bb562: {
        _403 = Le(const 97_u8, copy _5);
        switchInt(move _403) -> [0: bb564, otherwise: bb563];
    }

    bb563: {
        _404 = Le(copy _5, const 122_u8);
        switchInt(move _404) -> [0: bb564, otherwise: bb565];
    }

    bb564: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb565: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S45;
        goto -> bb566;
    }

    bb566: {
        StorageLive(_406);
        StorageLive(_405);
        _405 = copy _2;
        _406 = Lt(move _405, copy _4);
        switchInt(move _406) -> [0: bb567, otherwise: bb568];
    }

    bb567: {
        StorageDead(_405);
        _5 = const 0_u8;
        goto -> bb570;
    }

    bb568: {
        StorageDead(_405);
        StorageLive(_408);
        StorageLive(_407);
        _407 = copy _2;
        _408 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _407) -> [return: bb569, unwind unreachable];
    }

    bb569: {
        StorageDead(_407);
        _5 = copy (*_408);
        StorageDead(_408);
        goto -> bb570;
    }

    bb570: {
        StorageDead(_406);
        switchInt(copy _5) -> [45: bb571, 46: bb585, 62: bb586, otherwise: bb587];
    }

    bb571: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S46;
        goto -> bb572;
    }

    bb572: {
        StorageLive(_410);
        StorageLive(_409);
        _409 = copy _2;
        _410 = Lt(move _409, copy _4);
        switchInt(move _410) -> [0: bb573, otherwise: bb574];
    }

    bb573: {
        StorageDead(_409);
        _5 = const 0_u8;
        StorageDead(_410);
        goto -> bb577;
    }

    bb574: {
        StorageDead(_409);
        StorageLive(_412);
        StorageLive(_411);
        _411 = copy _2;
        _412 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _411) -> [return: bb575, unwind unreachable];
    }

    bb575: {
        StorageDead(_411);
        _5 = copy (*_412);
        StorageDead(_412);
        StorageDead(_410);
        switchInt(copy _5) -> [45: bb576, otherwise: bb577];
    }

    bb576: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S48;
        goto -> bb601;
    }

    bb577: {
        _413 = Le(const 48_u8, copy _5);
        switchInt(move _413) -> [0: bb579, otherwise: bb578];
    }

    bb578: {
        _414 = Le(copy _5, const 57_u8);
        switchInt(move _414) -> [0: bb579, otherwise: bb584];
    }

    bb579: {
        _415 = Le(const 65_u8, copy _5);
        switchInt(move _415) -> [0: bb581, otherwise: bb580];
    }

    bb580: {
        _416 = Le(copy _5, const 90_u8);
        switchInt(move _416) -> [0: bb581, otherwise: bb584];
    }

    bb581: {
        _417 = Le(const 97_u8, copy _5);
        switchInt(move _417) -> [0: bb583, otherwise: bb582];
    }

    bb582: {
        _418 = Le(copy _5, const 122_u8);
        switchInt(move _418) -> [0: bb583, otherwise: bb584];
    }

    bb583: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb584: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S49;
        goto -> bb624;
    }

    bb585: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb586: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb587: {
        _419 = Le(const 48_u8, copy _5);
        switchInt(move _419) -> [0: bb589, otherwise: bb588];
    }

    bb588: {
        _420 = Le(copy _5, const 57_u8);
        switchInt(move _420) -> [0: bb589, otherwise: bb594];
    }

    bb589: {
        _421 = Le(const 65_u8, copy _5);
        switchInt(move _421) -> [0: bb591, otherwise: bb590];
    }

    bb590: {
        _422 = Le(copy _5, const 90_u8);
        switchInt(move _422) -> [0: bb591, otherwise: bb594];
    }

    bb591: {
        _423 = Le(const 97_u8, copy _5);
        switchInt(move _423) -> [0: bb593, otherwise: bb592];
    }

    bb592: {
        _424 = Le(copy _5, const 122_u8);
        switchInt(move _424) -> [0: bb593, otherwise: bb594];
    }

    bb593: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb594: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S47;
        goto -> bb595;
    }

    bb595: {
        StorageLive(_426);
        StorageLive(_425);
        _425 = copy _2;
        _426 = Lt(move _425, copy _4);
        switchInt(move _426) -> [0: bb596, otherwise: bb597];
    }

    bb596: {
        StorageDead(_425);
        _5 = const 0_u8;
        goto -> bb599;
    }

    bb597: {
        StorageDead(_425);
        StorageLive(_428);
        StorageLive(_427);
        _427 = copy _2;
        _428 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _427) -> [return: bb598, unwind unreachable];
    }

    bb598: {
        StorageDead(_427);
        _5 = copy (*_428);
        StorageDead(_428);
        goto -> bb599;
    }

    bb599: {
        StorageDead(_426);
        switchInt(copy _5) -> [45: bb600, 46: bb614, 62: bb615, otherwise: bb616];
    }

    bb600: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S48;
        goto -> bb601;
    }

    bb601: {
        StorageLive(_430);
        StorageLive(_429);
        _429 = copy _2;
        _430 = Lt(move _429, copy _4);
        switchInt(move _430) -> [0: bb602, otherwise: bb603];
    }

    bb602: {
        StorageDead(_429);
        _5 = const 0_u8;
        StorageDead(_430);
        goto -> bb606;
    }

    bb603: {
        StorageDead(_429);
        StorageLive(_432);
        StorageLive(_431);
        _431 = copy _2;
        _432 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _431) -> [return: bb604, unwind unreachable];
    }

    bb604: {
        StorageDead(_431);
        _5 = copy (*_432);
        StorageDead(_432);
        StorageDead(_430);
        switchInt(copy _5) -> [45: bb605, otherwise: bb606];
    }

    bb605: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S50;
        goto -> bb630;
    }

    bb606: {
        _433 = Le(const 48_u8, copy _5);
        switchInt(move _433) -> [0: bb608, otherwise: bb607];
    }

    bb607: {
        _434 = Le(copy _5, const 57_u8);
        switchInt(move _434) -> [0: bb608, otherwise: bb613];
    }

    bb608: {
        _435 = Le(const 65_u8, copy _5);
        switchInt(move _435) -> [0: bb610, otherwise: bb609];
    }

    bb609: {
        _436 = Le(copy _5, const 90_u8);
        switchInt(move _436) -> [0: bb610, otherwise: bb613];
    }

    bb610: {
        _437 = Le(const 97_u8, copy _5);
        switchInt(move _437) -> [0: bb612, otherwise: bb611];
    }

    bb611: {
        _438 = Le(copy _5, const 122_u8);
        switchInt(move _438) -> [0: bb612, otherwise: bb613];
    }

    bb612: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb613: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S51;
        goto -> bb653;
    }

    bb614: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb615: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb616: {
        _439 = Le(const 48_u8, copy _5);
        switchInt(move _439) -> [0: bb618, otherwise: bb617];
    }

    bb617: {
        _440 = Le(copy _5, const 57_u8);
        switchInt(move _440) -> [0: bb618, otherwise: bb623];
    }

    bb618: {
        _441 = Le(const 65_u8, copy _5);
        switchInt(move _441) -> [0: bb620, otherwise: bb619];
    }

    bb619: {
        _442 = Le(copy _5, const 90_u8);
        switchInt(move _442) -> [0: bb620, otherwise: bb623];
    }

    bb620: {
        _443 = Le(const 97_u8, copy _5);
        switchInt(move _443) -> [0: bb622, otherwise: bb621];
    }

    bb621: {
        _444 = Le(copy _5, const 122_u8);
        switchInt(move _444) -> [0: bb622, otherwise: bb623];
    }

    bb622: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb623: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S49;
        goto -> bb624;
    }

    bb624: {
        StorageLive(_446);
        StorageLive(_445);
        _445 = copy _2;
        _446 = Lt(move _445, copy _4);
        switchInt(move _446) -> [0: bb625, otherwise: bb626];
    }

    bb625: {
        StorageDead(_445);
        _5 = const 0_u8;
        goto -> bb628;
    }

    bb626: {
        StorageDead(_445);
        StorageLive(_448);
        StorageLive(_447);
        _447 = copy _2;
        _448 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _447) -> [return: bb627, unwind unreachable];
    }

    bb627: {
        StorageDead(_447);
        _5 = copy (*_448);
        StorageDead(_448);
        goto -> bb628;
    }

    bb628: {
        StorageDead(_446);
        switchInt(copy _5) -> [45: bb629, 46: bb643, 62: bb644, otherwise: bb645];
    }

    bb629: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S50;
        goto -> bb630;
    }

    bb630: {
        StorageLive(_450);
        StorageLive(_449);
        _449 = copy _2;
        _450 = Lt(move _449, copy _4);
        switchInt(move _450) -> [0: bb631, otherwise: bb632];
    }

    bb631: {
        StorageDead(_449);
        _5 = const 0_u8;
        StorageDead(_450);
        goto -> bb635;
    }

    bb632: {
        StorageDead(_449);
        StorageLive(_452);
        StorageLive(_451);
        _451 = copy _2;
        _452 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _451) -> [return: bb633, unwind unreachable];
    }

    bb633: {
        StorageDead(_451);
        _5 = copy (*_452);
        StorageDead(_452);
        StorageDead(_450);
        switchInt(copy _5) -> [45: bb634, otherwise: bb635];
    }

    bb634: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S52;
        goto -> bb659;
    }

    bb635: {
        _453 = Le(const 48_u8, copy _5);
        switchInt(move _453) -> [0: bb637, otherwise: bb636];
    }

    bb636: {
        _454 = Le(copy _5, const 57_u8);
        switchInt(move _454) -> [0: bb637, otherwise: bb642];
    }

    bb637: {
        _455 = Le(const 65_u8, copy _5);
        switchInt(move _455) -> [0: bb639, otherwise: bb638];
    }

    bb638: {
        _456 = Le(copy _5, const 90_u8);
        switchInt(move _456) -> [0: bb639, otherwise: bb642];
    }

    bb639: {
        _457 = Le(const 97_u8, copy _5);
        switchInt(move _457) -> [0: bb641, otherwise: bb640];
    }

    bb640: {
        _458 = Le(copy _5, const 122_u8);
        switchInt(move _458) -> [0: bb641, otherwise: bb642];
    }

    bb641: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb642: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S53;
        goto -> bb682;
    }

    bb643: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb644: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb645: {
        _459 = Le(const 48_u8, copy _5);
        switchInt(move _459) -> [0: bb647, otherwise: bb646];
    }

    bb646: {
        _460 = Le(copy _5, const 57_u8);
        switchInt(move _460) -> [0: bb647, otherwise: bb652];
    }

    bb647: {
        _461 = Le(const 65_u8, copy _5);
        switchInt(move _461) -> [0: bb649, otherwise: bb648];
    }

    bb648: {
        _462 = Le(copy _5, const 90_u8);
        switchInt(move _462) -> [0: bb649, otherwise: bb652];
    }

    bb649: {
        _463 = Le(const 97_u8, copy _5);
        switchInt(move _463) -> [0: bb651, otherwise: bb650];
    }

    bb650: {
        _464 = Le(copy _5, const 122_u8);
        switchInt(move _464) -> [0: bb651, otherwise: bb652];
    }

    bb651: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb652: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S51;
        goto -> bb653;
    }

    bb653: {
        StorageLive(_466);
        StorageLive(_465);
        _465 = copy _2;
        _466 = Lt(move _465, copy _4);
        switchInt(move _466) -> [0: bb654, otherwise: bb655];
    }

    bb654: {
        StorageDead(_465);
        _5 = const 0_u8;
        goto -> bb657;
    }

    bb655: {
        StorageDead(_465);
        StorageLive(_468);
        StorageLive(_467);
        _467 = copy _2;
        _468 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _467) -> [return: bb656, unwind unreachable];
    }

    bb656: {
        StorageDead(_467);
        _5 = copy (*_468);
        StorageDead(_468);
        goto -> bb657;
    }

    bb657: {
        StorageDead(_466);
        switchInt(copy _5) -> [45: bb658, 46: bb672, 62: bb673, otherwise: bb674];
    }

    bb658: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S52;
        goto -> bb659;
    }

    bb659: {
        StorageLive(_470);
        StorageLive(_469);
        _469 = copy _2;
        _470 = Lt(move _469, copy _4);
        switchInt(move _470) -> [0: bb660, otherwise: bb661];
    }

    bb660: {
        StorageDead(_469);
        _5 = const 0_u8;
        StorageDead(_470);
        goto -> bb664;
    }

    bb661: {
        StorageDead(_469);
        StorageLive(_472);
        StorageLive(_471);
        _471 = copy _2;
        _472 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _471) -> [return: bb662, unwind unreachable];
    }

    bb662: {
        StorageDead(_471);
        _5 = copy (*_472);
        StorageDead(_472);
        StorageDead(_470);
        switchInt(copy _5) -> [45: bb663, otherwise: bb664];
    }

    bb663: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S54;
        goto -> bb688;
    }

    bb664: {
        _473 = Le(const 48_u8, copy _5);
        switchInt(move _473) -> [0: bb666, otherwise: bb665];
    }

    bb665: {
        _474 = Le(copy _5, const 57_u8);
        switchInt(move _474) -> [0: bb666, otherwise: bb671];
    }

    bb666: {
        _475 = Le(const 65_u8, copy _5);
        switchInt(move _475) -> [0: bb668, otherwise: bb667];
    }

    bb667: {
        _476 = Le(copy _5, const 90_u8);
        switchInt(move _476) -> [0: bb668, otherwise: bb671];
    }

    bb668: {
        _477 = Le(const 97_u8, copy _5);
        switchInt(move _477) -> [0: bb670, otherwise: bb669];
    }

    bb669: {
        _478 = Le(copy _5, const 122_u8);
        switchInt(move _478) -> [0: bb670, otherwise: bb671];
    }

    bb670: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb671: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S55;
        goto -> bb711;
    }

    bb672: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb673: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb674: {
        _479 = Le(const 48_u8, copy _5);
        switchInt(move _479) -> [0: bb676, otherwise: bb675];
    }

    bb675: {
        _480 = Le(copy _5, const 57_u8);
        switchInt(move _480) -> [0: bb676, otherwise: bb681];
    }

    bb676: {
        _481 = Le(const 65_u8, copy _5);
        switchInt(move _481) -> [0: bb678, otherwise: bb677];
    }

    bb677: {
        _482 = Le(copy _5, const 90_u8);
        switchInt(move _482) -> [0: bb678, otherwise: bb681];
    }

    bb678: {
        _483 = Le(const 97_u8, copy _5);
        switchInt(move _483) -> [0: bb680, otherwise: bb679];
    }

    bb679: {
        _484 = Le(copy _5, const 122_u8);
        switchInt(move _484) -> [0: bb680, otherwise: bb681];
    }

    bb680: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb681: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S53;
        goto -> bb682;
    }

    bb682: {
        StorageLive(_486);
        StorageLive(_485);
        _485 = copy _2;
        _486 = Lt(move _485, copy _4);
        switchInt(move _486) -> [0: bb683, otherwise: bb684];
    }

    bb683: {
        StorageDead(_485);
        _5 = const 0_u8;
        goto -> bb686;
    }

    bb684: {
        StorageDead(_485);
        StorageLive(_488);
        StorageLive(_487);
        _487 = copy _2;
        _488 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _487) -> [return: bb685, unwind unreachable];
    }

    bb685: {
        StorageDead(_487);
        _5 = copy (*_488);
        StorageDead(_488);
        goto -> bb686;
    }

    bb686: {
        StorageDead(_486);
        switchInt(copy _5) -> [45: bb687, 46: bb701, 62: bb702, otherwise: bb703];
    }

    bb687: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S54;
        goto -> bb688;
    }

    bb688: {
        StorageLive(_490);
        StorageLive(_489);
        _489 = copy _2;
        _490 = Lt(move _489, copy _4);
        switchInt(move _490) -> [0: bb689, otherwise: bb690];
    }

    bb689: {
        StorageDead(_489);
        _5 = const 0_u8;
        StorageDead(_490);
        goto -> bb693;
    }

    bb690: {
        StorageDead(_489);
        StorageLive(_492);
        StorageLive(_491);
        _491 = copy _2;
        _492 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _491) -> [return: bb691, unwind unreachable];
    }

    bb691: {
        StorageDead(_491);
        _5 = copy (*_492);
        StorageDead(_492);
        StorageDead(_490);
        switchInt(copy _5) -> [45: bb692, otherwise: bb693];
    }

    bb692: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S56;
        goto -> bb717;
    }

    bb693: {
        _493 = Le(const 48_u8, copy _5);
        switchInt(move _493) -> [0: bb695, otherwise: bb694];
    }

    bb694: {
        _494 = Le(copy _5, const 57_u8);
        switchInt(move _494) -> [0: bb695, otherwise: bb700];
    }

    bb695: {
        _495 = Le(const 65_u8, copy _5);
        switchInt(move _495) -> [0: bb697, otherwise: bb696];
    }

    bb696: {
        _496 = Le(copy _5, const 90_u8);
        switchInt(move _496) -> [0: bb697, otherwise: bb700];
    }

    bb697: {
        _497 = Le(const 97_u8, copy _5);
        switchInt(move _497) -> [0: bb699, otherwise: bb698];
    }

    bb698: {
        _498 = Le(copy _5, const 122_u8);
        switchInt(move _498) -> [0: bb699, otherwise: bb700];
    }

    bb699: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb700: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S57;
        goto -> bb740;
    }

    bb701: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb702: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb703: {
        _499 = Le(const 48_u8, copy _5);
        switchInt(move _499) -> [0: bb705, otherwise: bb704];
    }

    bb704: {
        _500 = Le(copy _5, const 57_u8);
        switchInt(move _500) -> [0: bb705, otherwise: bb710];
    }

    bb705: {
        _501 = Le(const 65_u8, copy _5);
        switchInt(move _501) -> [0: bb707, otherwise: bb706];
    }

    bb706: {
        _502 = Le(copy _5, const 90_u8);
        switchInt(move _502) -> [0: bb707, otherwise: bb710];
    }

    bb707: {
        _503 = Le(const 97_u8, copy _5);
        switchInt(move _503) -> [0: bb709, otherwise: bb708];
    }

    bb708: {
        _504 = Le(copy _5, const 122_u8);
        switchInt(move _504) -> [0: bb709, otherwise: bb710];
    }

    bb709: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb710: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S55;
        goto -> bb711;
    }

    bb711: {
        StorageLive(_506);
        StorageLive(_505);
        _505 = copy _2;
        _506 = Lt(move _505, copy _4);
        switchInt(move _506) -> [0: bb712, otherwise: bb713];
    }

    bb712: {
        StorageDead(_505);
        _5 = const 0_u8;
        goto -> bb715;
    }

    bb713: {
        StorageDead(_505);
        StorageLive(_508);
        StorageLive(_507);
        _507 = copy _2;
        _508 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _507) -> [return: bb714, unwind unreachable];
    }

    bb714: {
        StorageDead(_507);
        _5 = copy (*_508);
        StorageDead(_508);
        goto -> bb715;
    }

    bb715: {
        StorageDead(_506);
        switchInt(copy _5) -> [45: bb716, 46: bb730, 62: bb731, otherwise: bb732];
    }

    bb716: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S56;
        goto -> bb717;
    }

    bb717: {
        StorageLive(_510);
        StorageLive(_509);
        _509 = copy _2;
        _510 = Lt(move _509, copy _4);
        switchInt(move _510) -> [0: bb718, otherwise: bb719];
    }

    bb718: {
        StorageDead(_509);
        _5 = const 0_u8;
        StorageDead(_510);
        goto -> bb722;
    }

    bb719: {
        StorageDead(_509);
        StorageLive(_512);
        StorageLive(_511);
        _511 = copy _2;
        _512 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _511) -> [return: bb720, unwind unreachable];
    }

    bb720: {
        StorageDead(_511);
        _5 = copy (*_512);
        StorageDead(_512);
        StorageDead(_510);
        switchInt(copy _5) -> [45: bb721, otherwise: bb722];
    }

    bb721: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S58;
        goto -> bb746;
    }

    bb722: {
        _513 = Le(const 48_u8, copy _5);
        switchInt(move _513) -> [0: bb724, otherwise: bb723];
    }

    bb723: {
        _514 = Le(copy _5, const 57_u8);
        switchInt(move _514) -> [0: bb724, otherwise: bb729];
    }

    bb724: {
        _515 = Le(const 65_u8, copy _5);
        switchInt(move _515) -> [0: bb726, otherwise: bb725];
    }

    bb725: {
        _516 = Le(copy _5, const 90_u8);
        switchInt(move _516) -> [0: bb726, otherwise: bb729];
    }

    bb726: {
        _517 = Le(const 97_u8, copy _5);
        switchInt(move _517) -> [0: bb728, otherwise: bb727];
    }

    bb727: {
        _518 = Le(copy _5, const 122_u8);
        switchInt(move _518) -> [0: bb728, otherwise: bb729];
    }

    bb728: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb729: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S59;
        goto -> bb769;
    }

    bb730: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb731: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb732: {
        _519 = Le(const 48_u8, copy _5);
        switchInt(move _519) -> [0: bb734, otherwise: bb733];
    }

    bb733: {
        _520 = Le(copy _5, const 57_u8);
        switchInt(move _520) -> [0: bb734, otherwise: bb739];
    }

    bb734: {
        _521 = Le(const 65_u8, copy _5);
        switchInt(move _521) -> [0: bb736, otherwise: bb735];
    }

    bb735: {
        _522 = Le(copy _5, const 90_u8);
        switchInt(move _522) -> [0: bb736, otherwise: bb739];
    }

    bb736: {
        _523 = Le(const 97_u8, copy _5);
        switchInt(move _523) -> [0: bb738, otherwise: bb737];
    }

    bb737: {
        _524 = Le(copy _5, const 122_u8);
        switchInt(move _524) -> [0: bb738, otherwise: bb739];
    }

    bb738: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb739: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S57;
        goto -> bb740;
    }

    bb740: {
        StorageLive(_526);
        StorageLive(_525);
        _525 = copy _2;
        _526 = Lt(move _525, copy _4);
        switchInt(move _526) -> [0: bb741, otherwise: bb742];
    }

    bb741: {
        StorageDead(_525);
        _5 = const 0_u8;
        goto -> bb744;
    }

    bb742: {
        StorageDead(_525);
        StorageLive(_528);
        StorageLive(_527);
        _527 = copy _2;
        _528 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _527) -> [return: bb743, unwind unreachable];
    }

    bb743: {
        StorageDead(_527);
        _5 = copy (*_528);
        StorageDead(_528);
        goto -> bb744;
    }

    bb744: {
        StorageDead(_526);
        switchInt(copy _5) -> [45: bb745, 46: bb759, 62: bb760, otherwise: bb761];
    }

    bb745: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S58;
        goto -> bb746;
    }

    bb746: {
        StorageLive(_530);
        StorageLive(_529);
        _529 = copy _2;
        _530 = Lt(move _529, copy _4);
        switchInt(move _530) -> [0: bb747, otherwise: bb748];
    }

    bb747: {
        StorageDead(_529);
        _5 = const 0_u8;
        StorageDead(_530);
        goto -> bb751;
    }

    bb748: {
        StorageDead(_529);
        StorageLive(_532);
        StorageLive(_531);
        _531 = copy _2;
        _532 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _531) -> [return: bb749, unwind unreachable];
    }

    bb749: {
        StorageDead(_531);
        _5 = copy (*_532);
        StorageDead(_532);
        StorageDead(_530);
        switchInt(copy _5) -> [45: bb750, otherwise: bb751];
    }

    bb750: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S60;
        goto -> bb775;
    }

    bb751: {
        _533 = Le(const 48_u8, copy _5);
        switchInt(move _533) -> [0: bb753, otherwise: bb752];
    }

    bb752: {
        _534 = Le(copy _5, const 57_u8);
        switchInt(move _534) -> [0: bb753, otherwise: bb758];
    }

    bb753: {
        _535 = Le(const 65_u8, copy _5);
        switchInt(move _535) -> [0: bb755, otherwise: bb754];
    }

    bb754: {
        _536 = Le(copy _5, const 90_u8);
        switchInt(move _536) -> [0: bb755, otherwise: bb758];
    }

    bb755: {
        _537 = Le(const 97_u8, copy _5);
        switchInt(move _537) -> [0: bb757, otherwise: bb756];
    }

    bb756: {
        _538 = Le(copy _5, const 122_u8);
        switchInt(move _538) -> [0: bb757, otherwise: bb758];
    }

    bb757: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb758: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S61;
        goto -> bb798;
    }

    bb759: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb760: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb761: {
        _539 = Le(const 48_u8, copy _5);
        switchInt(move _539) -> [0: bb763, otherwise: bb762];
    }

    bb762: {
        _540 = Le(copy _5, const 57_u8);
        switchInt(move _540) -> [0: bb763, otherwise: bb768];
    }

    bb763: {
        _541 = Le(const 65_u8, copy _5);
        switchInt(move _541) -> [0: bb765, otherwise: bb764];
    }

    bb764: {
        _542 = Le(copy _5, const 90_u8);
        switchInt(move _542) -> [0: bb765, otherwise: bb768];
    }

    bb765: {
        _543 = Le(const 97_u8, copy _5);
        switchInt(move _543) -> [0: bb767, otherwise: bb766];
    }

    bb766: {
        _544 = Le(copy _5, const 122_u8);
        switchInt(move _544) -> [0: bb767, otherwise: bb768];
    }

    bb767: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb768: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S59;
        goto -> bb769;
    }

    bb769: {
        StorageLive(_546);
        StorageLive(_545);
        _545 = copy _2;
        _546 = Lt(move _545, copy _4);
        switchInt(move _546) -> [0: bb770, otherwise: bb771];
    }

    bb770: {
        StorageDead(_545);
        _5 = const 0_u8;
        goto -> bb773;
    }

    bb771: {
        StorageDead(_545);
        StorageLive(_548);
        StorageLive(_547);
        _547 = copy _2;
        _548 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _547) -> [return: bb772, unwind unreachable];
    }

    bb772: {
        StorageDead(_547);
        _5 = copy (*_548);
        StorageDead(_548);
        goto -> bb773;
    }

    bb773: {
        StorageDead(_546);
        switchInt(copy _5) -> [45: bb774, 46: bb788, 62: bb789, otherwise: bb790];
    }

    bb774: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S60;
        goto -> bb775;
    }

    bb775: {
        StorageLive(_550);
        StorageLive(_549);
        _549 = copy _2;
        _550 = Lt(move _549, copy _4);
        switchInt(move _550) -> [0: bb776, otherwise: bb777];
    }

    bb776: {
        StorageDead(_549);
        _5 = const 0_u8;
        StorageDead(_550);
        goto -> bb780;
    }

    bb777: {
        StorageDead(_549);
        StorageLive(_552);
        StorageLive(_551);
        _551 = copy _2;
        _552 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _551) -> [return: bb778, unwind unreachable];
    }

    bb778: {
        StorageDead(_551);
        _5 = copy (*_552);
        StorageDead(_552);
        StorageDead(_550);
        switchInt(copy _5) -> [45: bb779, otherwise: bb780];
    }

    bb779: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S62;
        goto -> bb804;
    }

    bb780: {
        _553 = Le(const 48_u8, copy _5);
        switchInt(move _553) -> [0: bb782, otherwise: bb781];
    }

    bb781: {
        _554 = Le(copy _5, const 57_u8);
        switchInt(move _554) -> [0: bb782, otherwise: bb787];
    }

    bb782: {
        _555 = Le(const 65_u8, copy _5);
        switchInt(move _555) -> [0: bb784, otherwise: bb783];
    }

    bb783: {
        _556 = Le(copy _5, const 90_u8);
        switchInt(move _556) -> [0: bb784, otherwise: bb787];
    }

    bb784: {
        _557 = Le(const 97_u8, copy _5);
        switchInt(move _557) -> [0: bb786, otherwise: bb785];
    }

    bb785: {
        _558 = Le(copy _5, const 122_u8);
        switchInt(move _558) -> [0: bb786, otherwise: bb787];
    }

    bb786: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb787: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S63;
        goto -> bb827;
    }

    bb788: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb789: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb790: {
        _559 = Le(const 48_u8, copy _5);
        switchInt(move _559) -> [0: bb792, otherwise: bb791];
    }

    bb791: {
        _560 = Le(copy _5, const 57_u8);
        switchInt(move _560) -> [0: bb792, otherwise: bb797];
    }

    bb792: {
        _561 = Le(const 65_u8, copy _5);
        switchInt(move _561) -> [0: bb794, otherwise: bb793];
    }

    bb793: {
        _562 = Le(copy _5, const 90_u8);
        switchInt(move _562) -> [0: bb794, otherwise: bb797];
    }

    bb794: {
        _563 = Le(const 97_u8, copy _5);
        switchInt(move _563) -> [0: bb796, otherwise: bb795];
    }

    bb795: {
        _564 = Le(copy _5, const 122_u8);
        switchInt(move _564) -> [0: bb796, otherwise: bb797];
    }

    bb796: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb797: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S61;
        goto -> bb798;
    }

    bb798: {
        StorageLive(_566);
        StorageLive(_565);
        _565 = copy _2;
        _566 = Lt(move _565, copy _4);
        switchInt(move _566) -> [0: bb799, otherwise: bb800];
    }

    bb799: {
        StorageDead(_565);
        _5 = const 0_u8;
        goto -> bb802;
    }

    bb800: {
        StorageDead(_565);
        StorageLive(_568);
        StorageLive(_567);
        _567 = copy _2;
        _568 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _567) -> [return: bb801, unwind unreachable];
    }

    bb801: {
        StorageDead(_567);
        _5 = copy (*_568);
        StorageDead(_568);
        goto -> bb802;
    }

    bb802: {
        StorageDead(_566);
        switchInt(copy _5) -> [45: bb803, 46: bb817, 62: bb818, otherwise: bb819];
    }

    bb803: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S62;
        goto -> bb804;
    }

    bb804: {
        StorageLive(_570);
        StorageLive(_569);
        _569 = copy _2;
        _570 = Lt(move _569, copy _4);
        switchInt(move _570) -> [0: bb805, otherwise: bb806];
    }

    bb805: {
        StorageDead(_569);
        _5 = const 0_u8;
        StorageDead(_570);
        goto -> bb809;
    }

    bb806: {
        StorageDead(_569);
        StorageLive(_572);
        StorageLive(_571);
        _571 = copy _2;
        _572 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _571) -> [return: bb807, unwind unreachable];
    }

    bb807: {
        StorageDead(_571);
        _5 = copy (*_572);
        StorageDead(_572);
        StorageDead(_570);
        switchInt(copy _5) -> [45: bb808, otherwise: bb809];
    }

    bb808: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S64;
        goto -> bb833;
    }

    bb809: {
        _573 = Le(const 48_u8, copy _5);
        switchInt(move _573) -> [0: bb811, otherwise: bb810];
    }

    bb810: {
        _574 = Le(copy _5, const 57_u8);
        switchInt(move _574) -> [0: bb811, otherwise: bb816];
    }

    bb811: {
        _575 = Le(const 65_u8, copy _5);
        switchInt(move _575) -> [0: bb813, otherwise: bb812];
    }

    bb812: {
        _576 = Le(copy _5, const 90_u8);
        switchInt(move _576) -> [0: bb813, otherwise: bb816];
    }

    bb813: {
        _577 = Le(const 97_u8, copy _5);
        switchInt(move _577) -> [0: bb815, otherwise: bb814];
    }

    bb814: {
        _578 = Le(copy _5, const 122_u8);
        switchInt(move _578) -> [0: bb815, otherwise: bb816];
    }

    bb815: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb816: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S65;
        goto -> bb856;
    }

    bb817: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb818: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb819: {
        _579 = Le(const 48_u8, copy _5);
        switchInt(move _579) -> [0: bb821, otherwise: bb820];
    }

    bb820: {
        _580 = Le(copy _5, const 57_u8);
        switchInt(move _580) -> [0: bb821, otherwise: bb826];
    }

    bb821: {
        _581 = Le(const 65_u8, copy _5);
        switchInt(move _581) -> [0: bb823, otherwise: bb822];
    }

    bb822: {
        _582 = Le(copy _5, const 90_u8);
        switchInt(move _582) -> [0: bb823, otherwise: bb826];
    }

    bb823: {
        _583 = Le(const 97_u8, copy _5);
        switchInt(move _583) -> [0: bb825, otherwise: bb824];
    }

    bb824: {
        _584 = Le(copy _5, const 122_u8);
        switchInt(move _584) -> [0: bb825, otherwise: bb826];
    }

    bb825: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb826: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S63;
        goto -> bb827;
    }

    bb827: {
        StorageLive(_586);
        StorageLive(_585);
        _585 = copy _2;
        _586 = Lt(move _585, copy _4);
        switchInt(move _586) -> [0: bb828, otherwise: bb829];
    }

    bb828: {
        StorageDead(_585);
        _5 = const 0_u8;
        goto -> bb831;
    }

    bb829: {
        StorageDead(_585);
        StorageLive(_588);
        StorageLive(_587);
        _587 = copy _2;
        _588 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _587) -> [return: bb830, unwind unreachable];
    }

    bb830: {
        StorageDead(_587);
        _5 = copy (*_588);
        StorageDead(_588);
        goto -> bb831;
    }

    bb831: {
        StorageDead(_586);
        switchInt(copy _5) -> [45: bb832, 46: bb846, 62: bb847, otherwise: bb848];
    }

    bb832: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S64;
        goto -> bb833;
    }

    bb833: {
        StorageLive(_590);
        StorageLive(_589);
        _589 = copy _2;
        _590 = Lt(move _589, copy _4);
        switchInt(move _590) -> [0: bb834, otherwise: bb835];
    }

    bb834: {
        StorageDead(_589);
        _5 = const 0_u8;
        StorageDead(_590);
        goto -> bb838;
    }

    bb835: {
        StorageDead(_589);
        StorageLive(_592);
        StorageLive(_591);
        _591 = copy _2;
        _592 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _591) -> [return: bb836, unwind unreachable];
    }

    bb836: {
        StorageDead(_591);
        _5 = copy (*_592);
        StorageDead(_592);
        StorageDead(_590);
        switchInt(copy _5) -> [45: bb837, otherwise: bb838];
    }

    bb837: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S66;
        goto -> bb862;
    }

    bb838: {
        _593 = Le(const 48_u8, copy _5);
        switchInt(move _593) -> [0: bb840, otherwise: bb839];
    }

    bb839: {
        _594 = Le(copy _5, const 57_u8);
        switchInt(move _594) -> [0: bb840, otherwise: bb845];
    }

    bb840: {
        _595 = Le(const 65_u8, copy _5);
        switchInt(move _595) -> [0: bb842, otherwise: bb841];
    }

    bb841: {
        _596 = Le(copy _5, const 90_u8);
        switchInt(move _596) -> [0: bb842, otherwise: bb845];
    }

    bb842: {
        _597 = Le(const 97_u8, copy _5);
        switchInt(move _597) -> [0: bb844, otherwise: bb843];
    }

    bb843: {
        _598 = Le(copy _5, const 122_u8);
        switchInt(move _598) -> [0: bb844, otherwise: bb845];
    }

    bb844: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb845: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S67;
        goto -> bb885;
    }

    bb846: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb847: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb848: {
        _599 = Le(const 48_u8, copy _5);
        switchInt(move _599) -> [0: bb850, otherwise: bb849];
    }

    bb849: {
        _600 = Le(copy _5, const 57_u8);
        switchInt(move _600) -> [0: bb850, otherwise: bb855];
    }

    bb850: {
        _601 = Le(const 65_u8, copy _5);
        switchInt(move _601) -> [0: bb852, otherwise: bb851];
    }

    bb851: {
        _602 = Le(copy _5, const 90_u8);
        switchInt(move _602) -> [0: bb852, otherwise: bb855];
    }

    bb852: {
        _603 = Le(const 97_u8, copy _5);
        switchInt(move _603) -> [0: bb854, otherwise: bb853];
    }

    bb853: {
        _604 = Le(copy _5, const 122_u8);
        switchInt(move _604) -> [0: bb854, otherwise: bb855];
    }

    bb854: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb855: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S65;
        goto -> bb856;
    }

    bb856: {
        StorageLive(_606);
        StorageLive(_605);
        _605 = copy _2;
        _606 = Lt(move _605, copy _4);
        switchInt(move _606) -> [0: bb857, otherwise: bb858];
    }

    bb857: {
        StorageDead(_605);
        _5 = const 0_u8;
        goto -> bb860;
    }

    bb858: {
        StorageDead(_605);
        StorageLive(_608);
        StorageLive(_607);
        _607 = copy _2;
        _608 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _607) -> [return: bb859, unwind unreachable];
    }

    bb859: {
        StorageDead(_607);
        _5 = copy (*_608);
        StorageDead(_608);
        goto -> bb860;
    }

    bb860: {
        StorageDead(_606);
        switchInt(copy _5) -> [45: bb861, 46: bb875, 62: bb876, otherwise: bb877];
    }

    bb861: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S66;
        goto -> bb862;
    }

    bb862: {
        StorageLive(_610);
        StorageLive(_609);
        _609 = copy _2;
        _610 = Lt(move _609, copy _4);
        switchInt(move _610) -> [0: bb863, otherwise: bb864];
    }

    bb863: {
        StorageDead(_609);
        _5 = const 0_u8;
        StorageDead(_610);
        goto -> bb867;
    }

    bb864: {
        StorageDead(_609);
        StorageLive(_612);
        StorageLive(_611);
        _611 = copy _2;
        _612 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _611) -> [return: bb865, unwind unreachable];
    }

    bb865: {
        StorageDead(_611);
        _5 = copy (*_612);
        StorageDead(_612);
        StorageDead(_610);
        switchInt(copy _5) -> [45: bb866, otherwise: bb867];
    }

    bb866: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S68;
        goto -> bb891;
    }

    bb867: {
        _613 = Le(const 48_u8, copy _5);
        switchInt(move _613) -> [0: bb869, otherwise: bb868];
    }

    bb868: {
        _614 = Le(copy _5, const 57_u8);
        switchInt(move _614) -> [0: bb869, otherwise: bb874];
    }

    bb869: {
        _615 = Le(const 65_u8, copy _5);
        switchInt(move _615) -> [0: bb871, otherwise: bb870];
    }

    bb870: {
        _616 = Le(copy _5, const 90_u8);
        switchInt(move _616) -> [0: bb871, otherwise: bb874];
    }

    bb871: {
        _617 = Le(const 97_u8, copy _5);
        switchInt(move _617) -> [0: bb873, otherwise: bb872];
    }

    bb872: {
        _618 = Le(copy _5, const 122_u8);
        switchInt(move _618) -> [0: bb873, otherwise: bb874];
    }

    bb873: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb874: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S69;
        goto -> bb914;
    }

    bb875: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb876: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb877: {
        _619 = Le(const 48_u8, copy _5);
        switchInt(move _619) -> [0: bb879, otherwise: bb878];
    }

    bb878: {
        _620 = Le(copy _5, const 57_u8);
        switchInt(move _620) -> [0: bb879, otherwise: bb884];
    }

    bb879: {
        _621 = Le(const 65_u8, copy _5);
        switchInt(move _621) -> [0: bb881, otherwise: bb880];
    }

    bb880: {
        _622 = Le(copy _5, const 90_u8);
        switchInt(move _622) -> [0: bb881, otherwise: bb884];
    }

    bb881: {
        _623 = Le(const 97_u8, copy _5);
        switchInt(move _623) -> [0: bb883, otherwise: bb882];
    }

    bb882: {
        _624 = Le(copy _5, const 122_u8);
        switchInt(move _624) -> [0: bb883, otherwise: bb884];
    }

    bb883: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb884: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S67;
        goto -> bb885;
    }

    bb885: {
        StorageLive(_626);
        StorageLive(_625);
        _625 = copy _2;
        _626 = Lt(move _625, copy _4);
        switchInt(move _626) -> [0: bb886, otherwise: bb887];
    }

    bb886: {
        StorageDead(_625);
        _5 = const 0_u8;
        goto -> bb889;
    }

    bb887: {
        StorageDead(_625);
        StorageLive(_628);
        StorageLive(_627);
        _627 = copy _2;
        _628 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _627) -> [return: bb888, unwind unreachable];
    }

    bb888: {
        StorageDead(_627);
        _5 = copy (*_628);
        StorageDead(_628);
        goto -> bb889;
    }

    bb889: {
        StorageDead(_626);
        switchInt(copy _5) -> [45: bb890, 46: bb904, 62: bb905, otherwise: bb906];
    }

    bb890: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S68;
        goto -> bb891;
    }

    bb891: {
        StorageLive(_630);
        StorageLive(_629);
        _629 = copy _2;
        _630 = Lt(move _629, copy _4);
        switchInt(move _630) -> [0: bb892, otherwise: bb893];
    }

    bb892: {
        StorageDead(_629);
        _5 = const 0_u8;
        StorageDead(_630);
        goto -> bb896;
    }

    bb893: {
        StorageDead(_629);
        StorageLive(_632);
        StorageLive(_631);
        _631 = copy _2;
        _632 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _631) -> [return: bb894, unwind unreachable];
    }

    bb894: {
        StorageDead(_631);
        _5 = copy (*_632);
        StorageDead(_632);
        StorageDead(_630);
        switchInt(copy _5) -> [45: bb895, otherwise: bb896];
    }

    bb895: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S70;
        goto -> bb920;
    }

    bb896: {
        _633 = Le(const 48_u8, copy _5);
        switchInt(move _633) -> [0: bb898, otherwise: bb897];
    }

    bb897: {
        _634 = Le(copy _5, const 57_u8);
        switchInt(move _634) -> [0: bb898, otherwise: bb903];
    }

    bb898: {
        _635 = Le(const 65_u8, copy _5);
        switchInt(move _635) -> [0: bb900, otherwise: bb899];
    }

    bb899: {
        _636 = Le(copy _5, const 90_u8);
        switchInt(move _636) -> [0: bb900, otherwise: bb903];
    }

    bb900: {
        _637 = Le(const 97_u8, copy _5);
        switchInt(move _637) -> [0: bb902, otherwise: bb901];
    }

    bb901: {
        _638 = Le(copy _5, const 122_u8);
        switchInt(move _638) -> [0: bb902, otherwise: bb903];
    }

    bb902: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb903: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S71;
        goto -> bb943;
    }

    bb904: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb905: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb906: {
        _639 = Le(const 48_u8, copy _5);
        switchInt(move _639) -> [0: bb908, otherwise: bb907];
    }

    bb907: {
        _640 = Le(copy _5, const 57_u8);
        switchInt(move _640) -> [0: bb908, otherwise: bb913];
    }

    bb908: {
        _641 = Le(const 65_u8, copy _5);
        switchInt(move _641) -> [0: bb910, otherwise: bb909];
    }

    bb909: {
        _642 = Le(copy _5, const 90_u8);
        switchInt(move _642) -> [0: bb910, otherwise: bb913];
    }

    bb910: {
        _643 = Le(const 97_u8, copy _5);
        switchInt(move _643) -> [0: bb912, otherwise: bb911];
    }

    bb911: {
        _644 = Le(copy _5, const 122_u8);
        switchInt(move _644) -> [0: bb912, otherwise: bb913];
    }

    bb912: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb913: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S69;
        goto -> bb914;
    }

    bb914: {
        StorageLive(_646);
        StorageLive(_645);
        _645 = copy _2;
        _646 = Lt(move _645, copy _4);
        switchInt(move _646) -> [0: bb915, otherwise: bb916];
    }

    bb915: {
        StorageDead(_645);
        _5 = const 0_u8;
        goto -> bb918;
    }

    bb916: {
        StorageDead(_645);
        StorageLive(_648);
        StorageLive(_647);
        _647 = copy _2;
        _648 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _647) -> [return: bb917, unwind unreachable];
    }

    bb917: {
        StorageDead(_647);
        _5 = copy (*_648);
        StorageDead(_648);
        goto -> bb918;
    }

    bb918: {
        StorageDead(_646);
        switchInt(copy _5) -> [45: bb919, 46: bb933, 62: bb934, otherwise: bb935];
    }

    bb919: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S70;
        goto -> bb920;
    }

    bb920: {
        StorageLive(_650);
        StorageLive(_649);
        _649 = copy _2;
        _650 = Lt(move _649, copy _4);
        switchInt(move _650) -> [0: bb921, otherwise: bb922];
    }

    bb921: {
        StorageDead(_649);
        _5 = const 0_u8;
        StorageDead(_650);
        goto -> bb925;
    }

    bb922: {
        StorageDead(_649);
        StorageLive(_652);
        StorageLive(_651);
        _651 = copy _2;
        _652 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _651) -> [return: bb923, unwind unreachable];
    }

    bb923: {
        StorageDead(_651);
        _5 = copy (*_652);
        StorageDead(_652);
        StorageDead(_650);
        switchInt(copy _5) -> [45: bb924, otherwise: bb925];
    }

    bb924: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S72;
        goto -> bb949;
    }

    bb925: {
        _653 = Le(const 48_u8, copy _5);
        switchInt(move _653) -> [0: bb927, otherwise: bb926];
    }

    bb926: {
        _654 = Le(copy _5, const 57_u8);
        switchInt(move _654) -> [0: bb927, otherwise: bb932];
    }

    bb927: {
        _655 = Le(const 65_u8, copy _5);
        switchInt(move _655) -> [0: bb929, otherwise: bb928];
    }

    bb928: {
        _656 = Le(copy _5, const 90_u8);
        switchInt(move _656) -> [0: bb929, otherwise: bb932];
    }

    bb929: {
        _657 = Le(const 97_u8, copy _5);
        switchInt(move _657) -> [0: bb931, otherwise: bb930];
    }

    bb930: {
        _658 = Le(copy _5, const 122_u8);
        switchInt(move _658) -> [0: bb931, otherwise: bb932];
    }

    bb931: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb932: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S73;
        goto -> bb972;
    }

    bb933: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb934: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb935: {
        _659 = Le(const 48_u8, copy _5);
        switchInt(move _659) -> [0: bb937, otherwise: bb936];
    }

    bb936: {
        _660 = Le(copy _5, const 57_u8);
        switchInt(move _660) -> [0: bb937, otherwise: bb942];
    }

    bb937: {
        _661 = Le(const 65_u8, copy _5);
        switchInt(move _661) -> [0: bb939, otherwise: bb938];
    }

    bb938: {
        _662 = Le(copy _5, const 90_u8);
        switchInt(move _662) -> [0: bb939, otherwise: bb942];
    }

    bb939: {
        _663 = Le(const 97_u8, copy _5);
        switchInt(move _663) -> [0: bb941, otherwise: bb940];
    }

    bb940: {
        _664 = Le(copy _5, const 122_u8);
        switchInt(move _664) -> [0: bb941, otherwise: bb942];
    }

    bb941: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb942: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S71;
        goto -> bb943;
    }

    bb943: {
        StorageLive(_666);
        StorageLive(_665);
        _665 = copy _2;
        _666 = Lt(move _665, copy _4);
        switchInt(move _666) -> [0: bb944, otherwise: bb945];
    }

    bb944: {
        StorageDead(_665);
        _5 = const 0_u8;
        goto -> bb947;
    }

    bb945: {
        StorageDead(_665);
        StorageLive(_668);
        StorageLive(_667);
        _667 = copy _2;
        _668 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _667) -> [return: bb946, unwind unreachable];
    }

    bb946: {
        StorageDead(_667);
        _5 = copy (*_668);
        StorageDead(_668);
        goto -> bb947;
    }

    bb947: {
        StorageDead(_666);
        switchInt(copy _5) -> [45: bb948, 46: bb962, 62: bb963, otherwise: bb964];
    }

    bb948: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S72;
        goto -> bb949;
    }

    bb949: {
        StorageLive(_670);
        StorageLive(_669);
        _669 = copy _2;
        _670 = Lt(move _669, copy _4);
        switchInt(move _670) -> [0: bb950, otherwise: bb951];
    }

    bb950: {
        StorageDead(_669);
        _5 = const 0_u8;
        StorageDead(_670);
        goto -> bb954;
    }

    bb951: {
        StorageDead(_669);
        StorageLive(_672);
        StorageLive(_671);
        _671 = copy _2;
        _672 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _671) -> [return: bb952, unwind unreachable];
    }

    bb952: {
        StorageDead(_671);
        _5 = copy (*_672);
        StorageDead(_672);
        StorageDead(_670);
        switchInt(copy _5) -> [45: bb953, otherwise: bb954];
    }

    bb953: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S74;
        goto -> bb978;
    }

    bb954: {
        _673 = Le(const 48_u8, copy _5);
        switchInt(move _673) -> [0: bb956, otherwise: bb955];
    }

    bb955: {
        _674 = Le(copy _5, const 57_u8);
        switchInt(move _674) -> [0: bb956, otherwise: bb961];
    }

    bb956: {
        _675 = Le(const 65_u8, copy _5);
        switchInt(move _675) -> [0: bb958, otherwise: bb957];
    }

    bb957: {
        _676 = Le(copy _5, const 90_u8);
        switchInt(move _676) -> [0: bb958, otherwise: bb961];
    }

    bb958: {
        _677 = Le(const 97_u8, copy _5);
        switchInt(move _677) -> [0: bb960, otherwise: bb959];
    }

    bb959: {
        _678 = Le(copy _5, const 122_u8);
        switchInt(move _678) -> [0: bb960, otherwise: bb961];
    }

    bb960: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb961: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S75;
        goto -> bb1001;
    }

    bb962: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb963: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb964: {
        _679 = Le(const 48_u8, copy _5);
        switchInt(move _679) -> [0: bb966, otherwise: bb965];
    }

    bb965: {
        _680 = Le(copy _5, const 57_u8);
        switchInt(move _680) -> [0: bb966, otherwise: bb971];
    }

    bb966: {
        _681 = Le(const 65_u8, copy _5);
        switchInt(move _681) -> [0: bb968, otherwise: bb967];
    }

    bb967: {
        _682 = Le(copy _5, const 90_u8);
        switchInt(move _682) -> [0: bb968, otherwise: bb971];
    }

    bb968: {
        _683 = Le(const 97_u8, copy _5);
        switchInt(move _683) -> [0: bb970, otherwise: bb969];
    }

    bb969: {
        _684 = Le(copy _5, const 122_u8);
        switchInt(move _684) -> [0: bb970, otherwise: bb971];
    }

    bb970: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb971: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S73;
        goto -> bb972;
    }

    bb972: {
        StorageLive(_686);
        StorageLive(_685);
        _685 = copy _2;
        _686 = Lt(move _685, copy _4);
        switchInt(move _686) -> [0: bb973, otherwise: bb974];
    }

    bb973: {
        StorageDead(_685);
        _5 = const 0_u8;
        goto -> bb976;
    }

    bb974: {
        StorageDead(_685);
        StorageLive(_688);
        StorageLive(_687);
        _687 = copy _2;
        _688 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _687) -> [return: bb975, unwind unreachable];
    }

    bb975: {
        StorageDead(_687);
        _5 = copy (*_688);
        StorageDead(_688);
        goto -> bb976;
    }

    bb976: {
        StorageDead(_686);
        switchInt(copy _5) -> [45: bb977, 46: bb991, 62: bb992, otherwise: bb993];
    }

    bb977: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S74;
        goto -> bb978;
    }

    bb978: {
        StorageLive(_690);
        StorageLive(_689);
        _689 = copy _2;
        _690 = Lt(move _689, copy _4);
        switchInt(move _690) -> [0: bb979, otherwise: bb980];
    }

    bb979: {
        StorageDead(_689);
        _5 = const 0_u8;
        StorageDead(_690);
        goto -> bb983;
    }

    bb980: {
        StorageDead(_689);
        StorageLive(_692);
        StorageLive(_691);
        _691 = copy _2;
        _692 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _691) -> [return: bb981, unwind unreachable];
    }

    bb981: {
        StorageDead(_691);
        _5 = copy (*_692);
        StorageDead(_692);
        StorageDead(_690);
        switchInt(copy _5) -> [45: bb982, otherwise: bb983];
    }

    bb982: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S76;
        goto -> bb1007;
    }

    bb983: {
        _693 = Le(const 48_u8, copy _5);
        switchInt(move _693) -> [0: bb985, otherwise: bb984];
    }

    bb984: {
        _694 = Le(copy _5, const 57_u8);
        switchInt(move _694) -> [0: bb985, otherwise: bb990];
    }

    bb985: {
        _695 = Le(const 65_u8, copy _5);
        switchInt(move _695) -> [0: bb987, otherwise: bb986];
    }

    bb986: {
        _696 = Le(copy _5, const 90_u8);
        switchInt(move _696) -> [0: bb987, otherwise: bb990];
    }

    bb987: {
        _697 = Le(const 97_u8, copy _5);
        switchInt(move _697) -> [0: bb989, otherwise: bb988];
    }

    bb988: {
        _698 = Le(copy _5, const 122_u8);
        switchInt(move _698) -> [0: bb989, otherwise: bb990];
    }

    bb989: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb990: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S77;
        goto -> bb1030;
    }

    bb991: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb992: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb993: {
        _699 = Le(const 48_u8, copy _5);
        switchInt(move _699) -> [0: bb995, otherwise: bb994];
    }

    bb994: {
        _700 = Le(copy _5, const 57_u8);
        switchInt(move _700) -> [0: bb995, otherwise: bb1000];
    }

    bb995: {
        _701 = Le(const 65_u8, copy _5);
        switchInt(move _701) -> [0: bb997, otherwise: bb996];
    }

    bb996: {
        _702 = Le(copy _5, const 90_u8);
        switchInt(move _702) -> [0: bb997, otherwise: bb1000];
    }

    bb997: {
        _703 = Le(const 97_u8, copy _5);
        switchInt(move _703) -> [0: bb999, otherwise: bb998];
    }

    bb998: {
        _704 = Le(copy _5, const 122_u8);
        switchInt(move _704) -> [0: bb999, otherwise: bb1000];
    }

    bb999: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1000: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S75;
        goto -> bb1001;
    }

    bb1001: {
        StorageLive(_706);
        StorageLive(_705);
        _705 = copy _2;
        _706 = Lt(move _705, copy _4);
        switchInt(move _706) -> [0: bb1002, otherwise: bb1003];
    }

    bb1002: {
        StorageDead(_705);
        _5 = const 0_u8;
        goto -> bb1005;
    }

    bb1003: {
        StorageDead(_705);
        StorageLive(_708);
        StorageLive(_707);
        _707 = copy _2;
        _708 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _707) -> [return: bb1004, unwind unreachable];
    }

    bb1004: {
        StorageDead(_707);
        _5 = copy (*_708);
        StorageDead(_708);
        goto -> bb1005;
    }

    bb1005: {
        StorageDead(_706);
        switchInt(copy _5) -> [45: bb1006, 46: bb1020, 62: bb1021, otherwise: bb1022];
    }

    bb1006: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S76;
        goto -> bb1007;
    }

    bb1007: {
        StorageLive(_710);
        StorageLive(_709);
        _709 = copy _2;
        _710 = Lt(move _709, copy _4);
        switchInt(move _710) -> [0: bb1008, otherwise: bb1009];
    }

    bb1008: {
        StorageDead(_709);
        _5 = const 0_u8;
        StorageDead(_710);
        goto -> bb1012;
    }

    bb1009: {
        StorageDead(_709);
        StorageLive(_712);
        StorageLive(_711);
        _711 = copy _2;
        _712 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _711) -> [return: bb1010, unwind unreachable];
    }

    bb1010: {
        StorageDead(_711);
        _5 = copy (*_712);
        StorageDead(_712);
        StorageDead(_710);
        switchInt(copy _5) -> [45: bb1011, otherwise: bb1012];
    }

    bb1011: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S78;
        goto -> bb1036;
    }

    bb1012: {
        _713 = Le(const 48_u8, copy _5);
        switchInt(move _713) -> [0: bb1014, otherwise: bb1013];
    }

    bb1013: {
        _714 = Le(copy _5, const 57_u8);
        switchInt(move _714) -> [0: bb1014, otherwise: bb1019];
    }

    bb1014: {
        _715 = Le(const 65_u8, copy _5);
        switchInt(move _715) -> [0: bb1016, otherwise: bb1015];
    }

    bb1015: {
        _716 = Le(copy _5, const 90_u8);
        switchInt(move _716) -> [0: bb1016, otherwise: bb1019];
    }

    bb1016: {
        _717 = Le(const 97_u8, copy _5);
        switchInt(move _717) -> [0: bb1018, otherwise: bb1017];
    }

    bb1017: {
        _718 = Le(copy _5, const 122_u8);
        switchInt(move _718) -> [0: bb1018, otherwise: bb1019];
    }

    bb1018: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1019: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S79;
        goto -> bb1059;
    }

    bb1020: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1021: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1022: {
        _719 = Le(const 48_u8, copy _5);
        switchInt(move _719) -> [0: bb1024, otherwise: bb1023];
    }

    bb1023: {
        _720 = Le(copy _5, const 57_u8);
        switchInt(move _720) -> [0: bb1024, otherwise: bb1029];
    }

    bb1024: {
        _721 = Le(const 65_u8, copy _5);
        switchInt(move _721) -> [0: bb1026, otherwise: bb1025];
    }

    bb1025: {
        _722 = Le(copy _5, const 90_u8);
        switchInt(move _722) -> [0: bb1026, otherwise: bb1029];
    }

    bb1026: {
        _723 = Le(const 97_u8, copy _5);
        switchInt(move _723) -> [0: bb1028, otherwise: bb1027];
    }

    bb1027: {
        _724 = Le(copy _5, const 122_u8);
        switchInt(move _724) -> [0: bb1028, otherwise: bb1029];
    }

    bb1028: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1029: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S77;
        goto -> bb1030;
    }

    bb1030: {
        StorageLive(_726);
        StorageLive(_725);
        _725 = copy _2;
        _726 = Lt(move _725, copy _4);
        switchInt(move _726) -> [0: bb1031, otherwise: bb1032];
    }

    bb1031: {
        StorageDead(_725);
        _5 = const 0_u8;
        goto -> bb1034;
    }

    bb1032: {
        StorageDead(_725);
        StorageLive(_728);
        StorageLive(_727);
        _727 = copy _2;
        _728 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _727) -> [return: bb1033, unwind unreachable];
    }

    bb1033: {
        StorageDead(_727);
        _5 = copy (*_728);
        StorageDead(_728);
        goto -> bb1034;
    }

    bb1034: {
        StorageDead(_726);
        switchInt(copy _5) -> [45: bb1035, 46: bb1049, 62: bb1050, otherwise: bb1051];
    }

    bb1035: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S78;
        goto -> bb1036;
    }

    bb1036: {
        StorageLive(_730);
        StorageLive(_729);
        _729 = copy _2;
        _730 = Lt(move _729, copy _4);
        switchInt(move _730) -> [0: bb1037, otherwise: bb1038];
    }

    bb1037: {
        StorageDead(_729);
        _5 = const 0_u8;
        StorageDead(_730);
        goto -> bb1041;
    }

    bb1038: {
        StorageDead(_729);
        StorageLive(_732);
        StorageLive(_731);
        _731 = copy _2;
        _732 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _731) -> [return: bb1039, unwind unreachable];
    }

    bb1039: {
        StorageDead(_731);
        _5 = copy (*_732);
        StorageDead(_732);
        StorageDead(_730);
        switchInt(copy _5) -> [45: bb1040, otherwise: bb1041];
    }

    bb1040: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S80;
        goto -> bb1065;
    }

    bb1041: {
        _733 = Le(const 48_u8, copy _5);
        switchInt(move _733) -> [0: bb1043, otherwise: bb1042];
    }

    bb1042: {
        _734 = Le(copy _5, const 57_u8);
        switchInt(move _734) -> [0: bb1043, otherwise: bb1048];
    }

    bb1043: {
        _735 = Le(const 65_u8, copy _5);
        switchInt(move _735) -> [0: bb1045, otherwise: bb1044];
    }

    bb1044: {
        _736 = Le(copy _5, const 90_u8);
        switchInt(move _736) -> [0: bb1045, otherwise: bb1048];
    }

    bb1045: {
        _737 = Le(const 97_u8, copy _5);
        switchInt(move _737) -> [0: bb1047, otherwise: bb1046];
    }

    bb1046: {
        _738 = Le(copy _5, const 122_u8);
        switchInt(move _738) -> [0: bb1047, otherwise: bb1048];
    }

    bb1047: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1048: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S81;
        goto -> bb1088;
    }

    bb1049: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1050: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1051: {
        _739 = Le(const 48_u8, copy _5);
        switchInt(move _739) -> [0: bb1053, otherwise: bb1052];
    }

    bb1052: {
        _740 = Le(copy _5, const 57_u8);
        switchInt(move _740) -> [0: bb1053, otherwise: bb1058];
    }

    bb1053: {
        _741 = Le(const 65_u8, copy _5);
        switchInt(move _741) -> [0: bb1055, otherwise: bb1054];
    }

    bb1054: {
        _742 = Le(copy _5, const 90_u8);
        switchInt(move _742) -> [0: bb1055, otherwise: bb1058];
    }

    bb1055: {
        _743 = Le(const 97_u8, copy _5);
        switchInt(move _743) -> [0: bb1057, otherwise: bb1056];
    }

    bb1056: {
        _744 = Le(copy _5, const 122_u8);
        switchInt(move _744) -> [0: bb1057, otherwise: bb1058];
    }

    bb1057: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1058: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S79;
        goto -> bb1059;
    }

    bb1059: {
        StorageLive(_746);
        StorageLive(_745);
        _745 = copy _2;
        _746 = Lt(move _745, copy _4);
        switchInt(move _746) -> [0: bb1060, otherwise: bb1061];
    }

    bb1060: {
        StorageDead(_745);
        _5 = const 0_u8;
        goto -> bb1063;
    }

    bb1061: {
        StorageDead(_745);
        StorageLive(_748);
        StorageLive(_747);
        _747 = copy _2;
        _748 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _747) -> [return: bb1062, unwind unreachable];
    }

    bb1062: {
        StorageDead(_747);
        _5 = copy (*_748);
        StorageDead(_748);
        goto -> bb1063;
    }

    bb1063: {
        StorageDead(_746);
        switchInt(copy _5) -> [45: bb1064, 46: bb1078, 62: bb1079, otherwise: bb1080];
    }

    bb1064: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S80;
        goto -> bb1065;
    }

    bb1065: {
        StorageLive(_750);
        StorageLive(_749);
        _749 = copy _2;
        _750 = Lt(move _749, copy _4);
        switchInt(move _750) -> [0: bb1066, otherwise: bb1067];
    }

    bb1066: {
        StorageDead(_749);
        _5 = const 0_u8;
        StorageDead(_750);
        goto -> bb1070;
    }

    bb1067: {
        StorageDead(_749);
        StorageLive(_752);
        StorageLive(_751);
        _751 = copy _2;
        _752 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _751) -> [return: bb1068, unwind unreachable];
    }

    bb1068: {
        StorageDead(_751);
        _5 = copy (*_752);
        StorageDead(_752);
        StorageDead(_750);
        switchInt(copy _5) -> [45: bb1069, otherwise: bb1070];
    }

    bb1069: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S82;
        goto -> bb1094;
    }

    bb1070: {
        _753 = Le(const 48_u8, copy _5);
        switchInt(move _753) -> [0: bb1072, otherwise: bb1071];
    }

    bb1071: {
        _754 = Le(copy _5, const 57_u8);
        switchInt(move _754) -> [0: bb1072, otherwise: bb1077];
    }

    bb1072: {
        _755 = Le(const 65_u8, copy _5);
        switchInt(move _755) -> [0: bb1074, otherwise: bb1073];
    }

    bb1073: {
        _756 = Le(copy _5, const 90_u8);
        switchInt(move _756) -> [0: bb1074, otherwise: bb1077];
    }

    bb1074: {
        _757 = Le(const 97_u8, copy _5);
        switchInt(move _757) -> [0: bb1076, otherwise: bb1075];
    }

    bb1075: {
        _758 = Le(copy _5, const 122_u8);
        switchInt(move _758) -> [0: bb1076, otherwise: bb1077];
    }

    bb1076: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1077: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S83;
        goto -> bb1117;
    }

    bb1078: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1079: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1080: {
        _759 = Le(const 48_u8, copy _5);
        switchInt(move _759) -> [0: bb1082, otherwise: bb1081];
    }

    bb1081: {
        _760 = Le(copy _5, const 57_u8);
        switchInt(move _760) -> [0: bb1082, otherwise: bb1087];
    }

    bb1082: {
        _761 = Le(const 65_u8, copy _5);
        switchInt(move _761) -> [0: bb1084, otherwise: bb1083];
    }

    bb1083: {
        _762 = Le(copy _5, const 90_u8);
        switchInt(move _762) -> [0: bb1084, otherwise: bb1087];
    }

    bb1084: {
        _763 = Le(const 97_u8, copy _5);
        switchInt(move _763) -> [0: bb1086, otherwise: bb1085];
    }

    bb1085: {
        _764 = Le(copy _5, const 122_u8);
        switchInt(move _764) -> [0: bb1086, otherwise: bb1087];
    }

    bb1086: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1087: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S81;
        goto -> bb1088;
    }

    bb1088: {
        StorageLive(_766);
        StorageLive(_765);
        _765 = copy _2;
        _766 = Lt(move _765, copy _4);
        switchInt(move _766) -> [0: bb1089, otherwise: bb1090];
    }

    bb1089: {
        StorageDead(_765);
        _5 = const 0_u8;
        goto -> bb1092;
    }

    bb1090: {
        StorageDead(_765);
        StorageLive(_768);
        StorageLive(_767);
        _767 = copy _2;
        _768 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _767) -> [return: bb1091, unwind unreachable];
    }

    bb1091: {
        StorageDead(_767);
        _5 = copy (*_768);
        StorageDead(_768);
        goto -> bb1092;
    }

    bb1092: {
        StorageDead(_766);
        switchInt(copy _5) -> [45: bb1093, 46: bb1107, 62: bb1108, otherwise: bb1109];
    }

    bb1093: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S82;
        goto -> bb1094;
    }

    bb1094: {
        StorageLive(_770);
        StorageLive(_769);
        _769 = copy _2;
        _770 = Lt(move _769, copy _4);
        switchInt(move _770) -> [0: bb1095, otherwise: bb1096];
    }

    bb1095: {
        StorageDead(_769);
        _5 = const 0_u8;
        StorageDead(_770);
        goto -> bb1099;
    }

    bb1096: {
        StorageDead(_769);
        StorageLive(_772);
        StorageLive(_771);
        _771 = copy _2;
        _772 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _771) -> [return: bb1097, unwind unreachable];
    }

    bb1097: {
        StorageDead(_771);
        _5 = copy (*_772);
        StorageDead(_772);
        StorageDead(_770);
        switchInt(copy _5) -> [45: bb1098, otherwise: bb1099];
    }

    bb1098: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S84;
        goto -> bb1123;
    }

    bb1099: {
        _773 = Le(const 48_u8, copy _5);
        switchInt(move _773) -> [0: bb1101, otherwise: bb1100];
    }

    bb1100: {
        _774 = Le(copy _5, const 57_u8);
        switchInt(move _774) -> [0: bb1101, otherwise: bb1106];
    }

    bb1101: {
        _775 = Le(const 65_u8, copy _5);
        switchInt(move _775) -> [0: bb1103, otherwise: bb1102];
    }

    bb1102: {
        _776 = Le(copy _5, const 90_u8);
        switchInt(move _776) -> [0: bb1103, otherwise: bb1106];
    }

    bb1103: {
        _777 = Le(const 97_u8, copy _5);
        switchInt(move _777) -> [0: bb1105, otherwise: bb1104];
    }

    bb1104: {
        _778 = Le(copy _5, const 122_u8);
        switchInt(move _778) -> [0: bb1105, otherwise: bb1106];
    }

    bb1105: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1106: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S85;
        goto -> bb1146;
    }

    bb1107: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1108: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1109: {
        _779 = Le(const 48_u8, copy _5);
        switchInt(move _779) -> [0: bb1111, otherwise: bb1110];
    }

    bb1110: {
        _780 = Le(copy _5, const 57_u8);
        switchInt(move _780) -> [0: bb1111, otherwise: bb1116];
    }

    bb1111: {
        _781 = Le(const 65_u8, copy _5);
        switchInt(move _781) -> [0: bb1113, otherwise: bb1112];
    }

    bb1112: {
        _782 = Le(copy _5, const 90_u8);
        switchInt(move _782) -> [0: bb1113, otherwise: bb1116];
    }

    bb1113: {
        _783 = Le(const 97_u8, copy _5);
        switchInt(move _783) -> [0: bb1115, otherwise: bb1114];
    }

    bb1114: {
        _784 = Le(copy _5, const 122_u8);
        switchInt(move _784) -> [0: bb1115, otherwise: bb1116];
    }

    bb1115: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1116: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S83;
        goto -> bb1117;
    }

    bb1117: {
        StorageLive(_786);
        StorageLive(_785);
        _785 = copy _2;
        _786 = Lt(move _785, copy _4);
        switchInt(move _786) -> [0: bb1118, otherwise: bb1119];
    }

    bb1118: {
        StorageDead(_785);
        _5 = const 0_u8;
        goto -> bb1121;
    }

    bb1119: {
        StorageDead(_785);
        StorageLive(_788);
        StorageLive(_787);
        _787 = copy _2;
        _788 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _787) -> [return: bb1120, unwind unreachable];
    }

    bb1120: {
        StorageDead(_787);
        _5 = copy (*_788);
        StorageDead(_788);
        goto -> bb1121;
    }

    bb1121: {
        StorageDead(_786);
        switchInt(copy _5) -> [45: bb1122, 46: bb1136, 62: bb1137, otherwise: bb1138];
    }

    bb1122: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S84;
        goto -> bb1123;
    }

    bb1123: {
        StorageLive(_790);
        StorageLive(_789);
        _789 = copy _2;
        _790 = Lt(move _789, copy _4);
        switchInt(move _790) -> [0: bb1124, otherwise: bb1125];
    }

    bb1124: {
        StorageDead(_789);
        _5 = const 0_u8;
        StorageDead(_790);
        goto -> bb1128;
    }

    bb1125: {
        StorageDead(_789);
        StorageLive(_792);
        StorageLive(_791);
        _791 = copy _2;
        _792 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _791) -> [return: bb1126, unwind unreachable];
    }

    bb1126: {
        StorageDead(_791);
        _5 = copy (*_792);
        StorageDead(_792);
        StorageDead(_790);
        switchInt(copy _5) -> [45: bb1127, otherwise: bb1128];
    }

    bb1127: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S86;
        goto -> bb1152;
    }

    bb1128: {
        _793 = Le(const 48_u8, copy _5);
        switchInt(move _793) -> [0: bb1130, otherwise: bb1129];
    }

    bb1129: {
        _794 = Le(copy _5, const 57_u8);
        switchInt(move _794) -> [0: bb1130, otherwise: bb1135];
    }

    bb1130: {
        _795 = Le(const 65_u8, copy _5);
        switchInt(move _795) -> [0: bb1132, otherwise: bb1131];
    }

    bb1131: {
        _796 = Le(copy _5, const 90_u8);
        switchInt(move _796) -> [0: bb1132, otherwise: bb1135];
    }

    bb1132: {
        _797 = Le(const 97_u8, copy _5);
        switchInt(move _797) -> [0: bb1134, otherwise: bb1133];
    }

    bb1133: {
        _798 = Le(copy _5, const 122_u8);
        switchInt(move _798) -> [0: bb1134, otherwise: bb1135];
    }

    bb1134: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1135: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S87;
        goto -> bb1175;
    }

    bb1136: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1137: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1138: {
        _799 = Le(const 48_u8, copy _5);
        switchInt(move _799) -> [0: bb1140, otherwise: bb1139];
    }

    bb1139: {
        _800 = Le(copy _5, const 57_u8);
        switchInt(move _800) -> [0: bb1140, otherwise: bb1145];
    }

    bb1140: {
        _801 = Le(const 65_u8, copy _5);
        switchInt(move _801) -> [0: bb1142, otherwise: bb1141];
    }

    bb1141: {
        _802 = Le(copy _5, const 90_u8);
        switchInt(move _802) -> [0: bb1142, otherwise: bb1145];
    }

    bb1142: {
        _803 = Le(const 97_u8, copy _5);
        switchInt(move _803) -> [0: bb1144, otherwise: bb1143];
    }

    bb1143: {
        _804 = Le(copy _5, const 122_u8);
        switchInt(move _804) -> [0: bb1144, otherwise: bb1145];
    }

    bb1144: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1145: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S85;
        goto -> bb1146;
    }

    bb1146: {
        StorageLive(_806);
        StorageLive(_805);
        _805 = copy _2;
        _806 = Lt(move _805, copy _4);
        switchInt(move _806) -> [0: bb1147, otherwise: bb1148];
    }

    bb1147: {
        StorageDead(_805);
        _5 = const 0_u8;
        goto -> bb1150;
    }

    bb1148: {
        StorageDead(_805);
        StorageLive(_808);
        StorageLive(_807);
        _807 = copy _2;
        _808 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _807) -> [return: bb1149, unwind unreachable];
    }

    bb1149: {
        StorageDead(_807);
        _5 = copy (*_808);
        StorageDead(_808);
        goto -> bb1150;
    }

    bb1150: {
        StorageDead(_806);
        switchInt(copy _5) -> [45: bb1151, 46: bb1165, 62: bb1166, otherwise: bb1167];
    }

    bb1151: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S86;
        goto -> bb1152;
    }

    bb1152: {
        StorageLive(_810);
        StorageLive(_809);
        _809 = copy _2;
        _810 = Lt(move _809, copy _4);
        switchInt(move _810) -> [0: bb1153, otherwise: bb1154];
    }

    bb1153: {
        StorageDead(_809);
        _5 = const 0_u8;
        StorageDead(_810);
        goto -> bb1157;
    }

    bb1154: {
        StorageDead(_809);
        StorageLive(_812);
        StorageLive(_811);
        _811 = copy _2;
        _812 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _811) -> [return: bb1155, unwind unreachable];
    }

    bb1155: {
        StorageDead(_811);
        _5 = copy (*_812);
        StorageDead(_812);
        StorageDead(_810);
        switchInt(copy _5) -> [45: bb1156, otherwise: bb1157];
    }

    bb1156: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S88;
        goto -> bb1181;
    }

    bb1157: {
        _813 = Le(const 48_u8, copy _5);
        switchInt(move _813) -> [0: bb1159, otherwise: bb1158];
    }

    bb1158: {
        _814 = Le(copy _5, const 57_u8);
        switchInt(move _814) -> [0: bb1159, otherwise: bb1164];
    }

    bb1159: {
        _815 = Le(const 65_u8, copy _5);
        switchInt(move _815) -> [0: bb1161, otherwise: bb1160];
    }

    bb1160: {
        _816 = Le(copy _5, const 90_u8);
        switchInt(move _816) -> [0: bb1161, otherwise: bb1164];
    }

    bb1161: {
        _817 = Le(const 97_u8, copy _5);
        switchInt(move _817) -> [0: bb1163, otherwise: bb1162];
    }

    bb1162: {
        _818 = Le(copy _5, const 122_u8);
        switchInt(move _818) -> [0: bb1163, otherwise: bb1164];
    }

    bb1163: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1164: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S89;
        goto -> bb1204;
    }

    bb1165: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1166: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1167: {
        _819 = Le(const 48_u8, copy _5);
        switchInt(move _819) -> [0: bb1169, otherwise: bb1168];
    }

    bb1168: {
        _820 = Le(copy _5, const 57_u8);
        switchInt(move _820) -> [0: bb1169, otherwise: bb1174];
    }

    bb1169: {
        _821 = Le(const 65_u8, copy _5);
        switchInt(move _821) -> [0: bb1171, otherwise: bb1170];
    }

    bb1170: {
        _822 = Le(copy _5, const 90_u8);
        switchInt(move _822) -> [0: bb1171, otherwise: bb1174];
    }

    bb1171: {
        _823 = Le(const 97_u8, copy _5);
        switchInt(move _823) -> [0: bb1173, otherwise: bb1172];
    }

    bb1172: {
        _824 = Le(copy _5, const 122_u8);
        switchInt(move _824) -> [0: bb1173, otherwise: bb1174];
    }

    bb1173: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1174: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S87;
        goto -> bb1175;
    }

    bb1175: {
        StorageLive(_826);
        StorageLive(_825);
        _825 = copy _2;
        _826 = Lt(move _825, copy _4);
        switchInt(move _826) -> [0: bb1176, otherwise: bb1177];
    }

    bb1176: {
        StorageDead(_825);
        _5 = const 0_u8;
        goto -> bb1179;
    }

    bb1177: {
        StorageDead(_825);
        StorageLive(_828);
        StorageLive(_827);
        _827 = copy _2;
        _828 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _827) -> [return: bb1178, unwind unreachable];
    }

    bb1178: {
        StorageDead(_827);
        _5 = copy (*_828);
        StorageDead(_828);
        goto -> bb1179;
    }

    bb1179: {
        StorageDead(_826);
        switchInt(copy _5) -> [45: bb1180, 46: bb1194, 62: bb1195, otherwise: bb1196];
    }

    bb1180: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S88;
        goto -> bb1181;
    }

    bb1181: {
        StorageLive(_830);
        StorageLive(_829);
        _829 = copy _2;
        _830 = Lt(move _829, copy _4);
        switchInt(move _830) -> [0: bb1182, otherwise: bb1183];
    }

    bb1182: {
        StorageDead(_829);
        _5 = const 0_u8;
        StorageDead(_830);
        goto -> bb1186;
    }

    bb1183: {
        StorageDead(_829);
        StorageLive(_832);
        StorageLive(_831);
        _831 = copy _2;
        _832 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _831) -> [return: bb1184, unwind unreachable];
    }

    bb1184: {
        StorageDead(_831);
        _5 = copy (*_832);
        StorageDead(_832);
        StorageDead(_830);
        switchInt(copy _5) -> [45: bb1185, otherwise: bb1186];
    }

    bb1185: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S90;
        goto -> bb1210;
    }

    bb1186: {
        _833 = Le(const 48_u8, copy _5);
        switchInt(move _833) -> [0: bb1188, otherwise: bb1187];
    }

    bb1187: {
        _834 = Le(copy _5, const 57_u8);
        switchInt(move _834) -> [0: bb1188, otherwise: bb1193];
    }

    bb1188: {
        _835 = Le(const 65_u8, copy _5);
        switchInt(move _835) -> [0: bb1190, otherwise: bb1189];
    }

    bb1189: {
        _836 = Le(copy _5, const 90_u8);
        switchInt(move _836) -> [0: bb1190, otherwise: bb1193];
    }

    bb1190: {
        _837 = Le(const 97_u8, copy _5);
        switchInt(move _837) -> [0: bb1192, otherwise: bb1191];
    }

    bb1191: {
        _838 = Le(copy _5, const 122_u8);
        switchInt(move _838) -> [0: bb1192, otherwise: bb1193];
    }

    bb1192: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1193: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S91;
        goto -> bb1233;
    }

    bb1194: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1195: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1196: {
        _839 = Le(const 48_u8, copy _5);
        switchInt(move _839) -> [0: bb1198, otherwise: bb1197];
    }

    bb1197: {
        _840 = Le(copy _5, const 57_u8);
        switchInt(move _840) -> [0: bb1198, otherwise: bb1203];
    }

    bb1198: {
        _841 = Le(const 65_u8, copy _5);
        switchInt(move _841) -> [0: bb1200, otherwise: bb1199];
    }

    bb1199: {
        _842 = Le(copy _5, const 90_u8);
        switchInt(move _842) -> [0: bb1200, otherwise: bb1203];
    }

    bb1200: {
        _843 = Le(const 97_u8, copy _5);
        switchInt(move _843) -> [0: bb1202, otherwise: bb1201];
    }

    bb1201: {
        _844 = Le(copy _5, const 122_u8);
        switchInt(move _844) -> [0: bb1202, otherwise: bb1203];
    }

    bb1202: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1203: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S89;
        goto -> bb1204;
    }

    bb1204: {
        StorageLive(_846);
        StorageLive(_845);
        _845 = copy _2;
        _846 = Lt(move _845, copy _4);
        switchInt(move _846) -> [0: bb1205, otherwise: bb1206];
    }

    bb1205: {
        StorageDead(_845);
        _5 = const 0_u8;
        goto -> bb1208;
    }

    bb1206: {
        StorageDead(_845);
        StorageLive(_848);
        StorageLive(_847);
        _847 = copy _2;
        _848 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _847) -> [return: bb1207, unwind unreachable];
    }

    bb1207: {
        StorageDead(_847);
        _5 = copy (*_848);
        StorageDead(_848);
        goto -> bb1208;
    }

    bb1208: {
        StorageDead(_846);
        switchInt(copy _5) -> [45: bb1209, 46: bb1223, 62: bb1224, otherwise: bb1225];
    }

    bb1209: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S90;
        goto -> bb1210;
    }

    bb1210: {
        StorageLive(_850);
        StorageLive(_849);
        _849 = copy _2;
        _850 = Lt(move _849, copy _4);
        switchInt(move _850) -> [0: bb1211, otherwise: bb1212];
    }

    bb1211: {
        StorageDead(_849);
        _5 = const 0_u8;
        StorageDead(_850);
        goto -> bb1215;
    }

    bb1212: {
        StorageDead(_849);
        StorageLive(_852);
        StorageLive(_851);
        _851 = copy _2;
        _852 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _851) -> [return: bb1213, unwind unreachable];
    }

    bb1213: {
        StorageDead(_851);
        _5 = copy (*_852);
        StorageDead(_852);
        StorageDead(_850);
        switchInt(copy _5) -> [45: bb1214, otherwise: bb1215];
    }

    bb1214: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S92;
        goto -> bb1239;
    }

    bb1215: {
        _853 = Le(const 48_u8, copy _5);
        switchInt(move _853) -> [0: bb1217, otherwise: bb1216];
    }

    bb1216: {
        _854 = Le(copy _5, const 57_u8);
        switchInt(move _854) -> [0: bb1217, otherwise: bb1222];
    }

    bb1217: {
        _855 = Le(const 65_u8, copy _5);
        switchInt(move _855) -> [0: bb1219, otherwise: bb1218];
    }

    bb1218: {
        _856 = Le(copy _5, const 90_u8);
        switchInt(move _856) -> [0: bb1219, otherwise: bb1222];
    }

    bb1219: {
        _857 = Le(const 97_u8, copy _5);
        switchInt(move _857) -> [0: bb1221, otherwise: bb1220];
    }

    bb1220: {
        _858 = Le(copy _5, const 122_u8);
        switchInt(move _858) -> [0: bb1221, otherwise: bb1222];
    }

    bb1221: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1222: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S93;
        goto -> bb1262;
    }

    bb1223: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1224: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1225: {
        _859 = Le(const 48_u8, copy _5);
        switchInt(move _859) -> [0: bb1227, otherwise: bb1226];
    }

    bb1226: {
        _860 = Le(copy _5, const 57_u8);
        switchInt(move _860) -> [0: bb1227, otherwise: bb1232];
    }

    bb1227: {
        _861 = Le(const 65_u8, copy _5);
        switchInt(move _861) -> [0: bb1229, otherwise: bb1228];
    }

    bb1228: {
        _862 = Le(copy _5, const 90_u8);
        switchInt(move _862) -> [0: bb1229, otherwise: bb1232];
    }

    bb1229: {
        _863 = Le(const 97_u8, copy _5);
        switchInt(move _863) -> [0: bb1231, otherwise: bb1230];
    }

    bb1230: {
        _864 = Le(copy _5, const 122_u8);
        switchInt(move _864) -> [0: bb1231, otherwise: bb1232];
    }

    bb1231: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1232: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S91;
        goto -> bb1233;
    }

    bb1233: {
        StorageLive(_866);
        StorageLive(_865);
        _865 = copy _2;
        _866 = Lt(move _865, copy _4);
        switchInt(move _866) -> [0: bb1234, otherwise: bb1235];
    }

    bb1234: {
        StorageDead(_865);
        _5 = const 0_u8;
        goto -> bb1237;
    }

    bb1235: {
        StorageDead(_865);
        StorageLive(_868);
        StorageLive(_867);
        _867 = copy _2;
        _868 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _867) -> [return: bb1236, unwind unreachable];
    }

    bb1236: {
        StorageDead(_867);
        _5 = copy (*_868);
        StorageDead(_868);
        goto -> bb1237;
    }

    bb1237: {
        StorageDead(_866);
        switchInt(copy _5) -> [45: bb1238, 46: bb1252, 62: bb1253, otherwise: bb1254];
    }

    bb1238: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S92;
        goto -> bb1239;
    }

    bb1239: {
        StorageLive(_870);
        StorageLive(_869);
        _869 = copy _2;
        _870 = Lt(move _869, copy _4);
        switchInt(move _870) -> [0: bb1240, otherwise: bb1241];
    }

    bb1240: {
        StorageDead(_869);
        _5 = const 0_u8;
        StorageDead(_870);
        goto -> bb1244;
    }

    bb1241: {
        StorageDead(_869);
        StorageLive(_872);
        StorageLive(_871);
        _871 = copy _2;
        _872 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _871) -> [return: bb1242, unwind unreachable];
    }

    bb1242: {
        StorageDead(_871);
        _5 = copy (*_872);
        StorageDead(_872);
        StorageDead(_870);
        switchInt(copy _5) -> [45: bb1243, otherwise: bb1244];
    }

    bb1243: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S94;
        goto -> bb1268;
    }

    bb1244: {
        _873 = Le(const 48_u8, copy _5);
        switchInt(move _873) -> [0: bb1246, otherwise: bb1245];
    }

    bb1245: {
        _874 = Le(copy _5, const 57_u8);
        switchInt(move _874) -> [0: bb1246, otherwise: bb1251];
    }

    bb1246: {
        _875 = Le(const 65_u8, copy _5);
        switchInt(move _875) -> [0: bb1248, otherwise: bb1247];
    }

    bb1247: {
        _876 = Le(copy _5, const 90_u8);
        switchInt(move _876) -> [0: bb1248, otherwise: bb1251];
    }

    bb1248: {
        _877 = Le(const 97_u8, copy _5);
        switchInt(move _877) -> [0: bb1250, otherwise: bb1249];
    }

    bb1249: {
        _878 = Le(copy _5, const 122_u8);
        switchInt(move _878) -> [0: bb1250, otherwise: bb1251];
    }

    bb1250: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1251: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S95;
        goto -> bb1291;
    }

    bb1252: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1253: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1254: {
        _879 = Le(const 48_u8, copy _5);
        switchInt(move _879) -> [0: bb1256, otherwise: bb1255];
    }

    bb1255: {
        _880 = Le(copy _5, const 57_u8);
        switchInt(move _880) -> [0: bb1256, otherwise: bb1261];
    }

    bb1256: {
        _881 = Le(const 65_u8, copy _5);
        switchInt(move _881) -> [0: bb1258, otherwise: bb1257];
    }

    bb1257: {
        _882 = Le(copy _5, const 90_u8);
        switchInt(move _882) -> [0: bb1258, otherwise: bb1261];
    }

    bb1258: {
        _883 = Le(const 97_u8, copy _5);
        switchInt(move _883) -> [0: bb1260, otherwise: bb1259];
    }

    bb1259: {
        _884 = Le(copy _5, const 122_u8);
        switchInt(move _884) -> [0: bb1260, otherwise: bb1261];
    }

    bb1260: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1261: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S93;
        goto -> bb1262;
    }

    bb1262: {
        StorageLive(_886);
        StorageLive(_885);
        _885 = copy _2;
        _886 = Lt(move _885, copy _4);
        switchInt(move _886) -> [0: bb1263, otherwise: bb1264];
    }

    bb1263: {
        StorageDead(_885);
        _5 = const 0_u8;
        goto -> bb1266;
    }

    bb1264: {
        StorageDead(_885);
        StorageLive(_888);
        StorageLive(_887);
        _887 = copy _2;
        _888 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _887) -> [return: bb1265, unwind unreachable];
    }

    bb1265: {
        StorageDead(_887);
        _5 = copy (*_888);
        StorageDead(_888);
        goto -> bb1266;
    }

    bb1266: {
        StorageDead(_886);
        switchInt(copy _5) -> [45: bb1267, 46: bb1281, 62: bb1282, otherwise: bb1283];
    }

    bb1267: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S94;
        goto -> bb1268;
    }

    bb1268: {
        StorageLive(_890);
        StorageLive(_889);
        _889 = copy _2;
        _890 = Lt(move _889, copy _4);
        switchInt(move _890) -> [0: bb1269, otherwise: bb1270];
    }

    bb1269: {
        StorageDead(_889);
        _5 = const 0_u8;
        StorageDead(_890);
        goto -> bb1273;
    }

    bb1270: {
        StorageDead(_889);
        StorageLive(_892);
        StorageLive(_891);
        _891 = copy _2;
        _892 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _891) -> [return: bb1271, unwind unreachable];
    }

    bb1271: {
        StorageDead(_891);
        _5 = copy (*_892);
        StorageDead(_892);
        StorageDead(_890);
        switchInt(copy _5) -> [45: bb1272, otherwise: bb1273];
    }

    bb1272: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S96;
        goto -> bb1297;
    }

    bb1273: {
        _893 = Le(const 48_u8, copy _5);
        switchInt(move _893) -> [0: bb1275, otherwise: bb1274];
    }

    bb1274: {
        _894 = Le(copy _5, const 57_u8);
        switchInt(move _894) -> [0: bb1275, otherwise: bb1280];
    }

    bb1275: {
        _895 = Le(const 65_u8, copy _5);
        switchInt(move _895) -> [0: bb1277, otherwise: bb1276];
    }

    bb1276: {
        _896 = Le(copy _5, const 90_u8);
        switchInt(move _896) -> [0: bb1277, otherwise: bb1280];
    }

    bb1277: {
        _897 = Le(const 97_u8, copy _5);
        switchInt(move _897) -> [0: bb1279, otherwise: bb1278];
    }

    bb1278: {
        _898 = Le(copy _5, const 122_u8);
        switchInt(move _898) -> [0: bb1279, otherwise: bb1280];
    }

    bb1279: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1280: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S97;
        goto -> bb1320;
    }

    bb1281: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1282: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1283: {
        _899 = Le(const 48_u8, copy _5);
        switchInt(move _899) -> [0: bb1285, otherwise: bb1284];
    }

    bb1284: {
        _900 = Le(copy _5, const 57_u8);
        switchInt(move _900) -> [0: bb1285, otherwise: bb1290];
    }

    bb1285: {
        _901 = Le(const 65_u8, copy _5);
        switchInt(move _901) -> [0: bb1287, otherwise: bb1286];
    }

    bb1286: {
        _902 = Le(copy _5, const 90_u8);
        switchInt(move _902) -> [0: bb1287, otherwise: bb1290];
    }

    bb1287: {
        _903 = Le(const 97_u8, copy _5);
        switchInt(move _903) -> [0: bb1289, otherwise: bb1288];
    }

    bb1288: {
        _904 = Le(copy _5, const 122_u8);
        switchInt(move _904) -> [0: bb1289, otherwise: bb1290];
    }

    bb1289: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1290: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S95;
        goto -> bb1291;
    }

    bb1291: {
        StorageLive(_906);
        StorageLive(_905);
        _905 = copy _2;
        _906 = Lt(move _905, copy _4);
        switchInt(move _906) -> [0: bb1292, otherwise: bb1293];
    }

    bb1292: {
        StorageDead(_905);
        _5 = const 0_u8;
        goto -> bb1295;
    }

    bb1293: {
        StorageDead(_905);
        StorageLive(_908);
        StorageLive(_907);
        _907 = copy _2;
        _908 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _907) -> [return: bb1294, unwind unreachable];
    }

    bb1294: {
        StorageDead(_907);
        _5 = copy (*_908);
        StorageDead(_908);
        goto -> bb1295;
    }

    bb1295: {
        StorageDead(_906);
        switchInt(copy _5) -> [45: bb1296, 46: bb1310, 62: bb1311, otherwise: bb1312];
    }

    bb1296: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S96;
        goto -> bb1297;
    }

    bb1297: {
        StorageLive(_910);
        StorageLive(_909);
        _909 = copy _2;
        _910 = Lt(move _909, copy _4);
        switchInt(move _910) -> [0: bb1298, otherwise: bb1299];
    }

    bb1298: {
        StorageDead(_909);
        _5 = const 0_u8;
        StorageDead(_910);
        goto -> bb1302;
    }

    bb1299: {
        StorageDead(_909);
        StorageLive(_912);
        StorageLive(_911);
        _911 = copy _2;
        _912 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _911) -> [return: bb1300, unwind unreachable];
    }

    bb1300: {
        StorageDead(_911);
        _5 = copy (*_912);
        StorageDead(_912);
        StorageDead(_910);
        switchInt(copy _5) -> [45: bb1301, otherwise: bb1302];
    }

    bb1301: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S98;
        goto -> bb1326;
    }

    bb1302: {
        _913 = Le(const 48_u8, copy _5);
        switchInt(move _913) -> [0: bb1304, otherwise: bb1303];
    }

    bb1303: {
        _914 = Le(copy _5, const 57_u8);
        switchInt(move _914) -> [0: bb1304, otherwise: bb1309];
    }

    bb1304: {
        _915 = Le(const 65_u8, copy _5);
        switchInt(move _915) -> [0: bb1306, otherwise: bb1305];
    }

    bb1305: {
        _916 = Le(copy _5, const 90_u8);
        switchInt(move _916) -> [0: bb1306, otherwise: bb1309];
    }

    bb1306: {
        _917 = Le(const 97_u8, copy _5);
        switchInt(move _917) -> [0: bb1308, otherwise: bb1307];
    }

    bb1307: {
        _918 = Le(copy _5, const 122_u8);
        switchInt(move _918) -> [0: bb1308, otherwise: bb1309];
    }

    bb1308: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1309: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S99;
        goto -> bb1349;
    }

    bb1310: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1311: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1312: {
        _919 = Le(const 48_u8, copy _5);
        switchInt(move _919) -> [0: bb1314, otherwise: bb1313];
    }

    bb1313: {
        _920 = Le(copy _5, const 57_u8);
        switchInt(move _920) -> [0: bb1314, otherwise: bb1319];
    }

    bb1314: {
        _921 = Le(const 65_u8, copy _5);
        switchInt(move _921) -> [0: bb1316, otherwise: bb1315];
    }

    bb1315: {
        _922 = Le(copy _5, const 90_u8);
        switchInt(move _922) -> [0: bb1316, otherwise: bb1319];
    }

    bb1316: {
        _923 = Le(const 97_u8, copy _5);
        switchInt(move _923) -> [0: bb1318, otherwise: bb1317];
    }

    bb1317: {
        _924 = Le(copy _5, const 122_u8);
        switchInt(move _924) -> [0: bb1318, otherwise: bb1319];
    }

    bb1318: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1319: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S97;
        goto -> bb1320;
    }

    bb1320: {
        StorageLive(_926);
        StorageLive(_925);
        _925 = copy _2;
        _926 = Lt(move _925, copy _4);
        switchInt(move _926) -> [0: bb1321, otherwise: bb1322];
    }

    bb1321: {
        StorageDead(_925);
        _5 = const 0_u8;
        goto -> bb1324;
    }

    bb1322: {
        StorageDead(_925);
        StorageLive(_928);
        StorageLive(_927);
        _927 = copy _2;
        _928 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _927) -> [return: bb1323, unwind unreachable];
    }

    bb1323: {
        StorageDead(_927);
        _5 = copy (*_928);
        StorageDead(_928);
        goto -> bb1324;
    }

    bb1324: {
        StorageDead(_926);
        switchInt(copy _5) -> [45: bb1325, 46: bb1339, 62: bb1340, otherwise: bb1341];
    }

    bb1325: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S98;
        goto -> bb1326;
    }

    bb1326: {
        StorageLive(_930);
        StorageLive(_929);
        _929 = copy _2;
        _930 = Lt(move _929, copy _4);
        switchInt(move _930) -> [0: bb1327, otherwise: bb1328];
    }

    bb1327: {
        StorageDead(_929);
        _5 = const 0_u8;
        StorageDead(_930);
        goto -> bb1331;
    }

    bb1328: {
        StorageDead(_929);
        StorageLive(_932);
        StorageLive(_931);
        _931 = copy _2;
        _932 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _931) -> [return: bb1329, unwind unreachable];
    }

    bb1329: {
        StorageDead(_931);
        _5 = copy (*_932);
        StorageDead(_932);
        StorageDead(_930);
        switchInt(copy _5) -> [45: bb1330, otherwise: bb1331];
    }

    bb1330: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S100;
        goto -> bb1355;
    }

    bb1331: {
        _933 = Le(const 48_u8, copy _5);
        switchInt(move _933) -> [0: bb1333, otherwise: bb1332];
    }

    bb1332: {
        _934 = Le(copy _5, const 57_u8);
        switchInt(move _934) -> [0: bb1333, otherwise: bb1338];
    }

    bb1333: {
        _935 = Le(const 65_u8, copy _5);
        switchInt(move _935) -> [0: bb1335, otherwise: bb1334];
    }

    bb1334: {
        _936 = Le(copy _5, const 90_u8);
        switchInt(move _936) -> [0: bb1335, otherwise: bb1338];
    }

    bb1335: {
        _937 = Le(const 97_u8, copy _5);
        switchInt(move _937) -> [0: bb1337, otherwise: bb1336];
    }

    bb1336: {
        _938 = Le(copy _5, const 122_u8);
        switchInt(move _938) -> [0: bb1337, otherwise: bb1338];
    }

    bb1337: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1338: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S101;
        goto -> bb1378;
    }

    bb1339: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1340: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1341: {
        _939 = Le(const 48_u8, copy _5);
        switchInt(move _939) -> [0: bb1343, otherwise: bb1342];
    }

    bb1342: {
        _940 = Le(copy _5, const 57_u8);
        switchInt(move _940) -> [0: bb1343, otherwise: bb1348];
    }

    bb1343: {
        _941 = Le(const 65_u8, copy _5);
        switchInt(move _941) -> [0: bb1345, otherwise: bb1344];
    }

    bb1344: {
        _942 = Le(copy _5, const 90_u8);
        switchInt(move _942) -> [0: bb1345, otherwise: bb1348];
    }

    bb1345: {
        _943 = Le(const 97_u8, copy _5);
        switchInt(move _943) -> [0: bb1347, otherwise: bb1346];
    }

    bb1346: {
        _944 = Le(copy _5, const 122_u8);
        switchInt(move _944) -> [0: bb1347, otherwise: bb1348];
    }

    bb1347: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1348: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S99;
        goto -> bb1349;
    }

    bb1349: {
        StorageLive(_946);
        StorageLive(_945);
        _945 = copy _2;
        _946 = Lt(move _945, copy _4);
        switchInt(move _946) -> [0: bb1350, otherwise: bb1351];
    }

    bb1350: {
        StorageDead(_945);
        _5 = const 0_u8;
        goto -> bb1353;
    }

    bb1351: {
        StorageDead(_945);
        StorageLive(_948);
        StorageLive(_947);
        _947 = copy _2;
        _948 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _947) -> [return: bb1352, unwind unreachable];
    }

    bb1352: {
        StorageDead(_947);
        _5 = copy (*_948);
        StorageDead(_948);
        goto -> bb1353;
    }

    bb1353: {
        StorageDead(_946);
        switchInt(copy _5) -> [45: bb1354, 46: bb1368, 62: bb1369, otherwise: bb1370];
    }

    bb1354: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S100;
        goto -> bb1355;
    }

    bb1355: {
        StorageLive(_950);
        StorageLive(_949);
        _949 = copy _2;
        _950 = Lt(move _949, copy _4);
        switchInt(move _950) -> [0: bb1356, otherwise: bb1357];
    }

    bb1356: {
        StorageDead(_949);
        _5 = const 0_u8;
        StorageDead(_950);
        goto -> bb1360;
    }

    bb1357: {
        StorageDead(_949);
        StorageLive(_952);
        StorageLive(_951);
        _951 = copy _2;
        _952 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _951) -> [return: bb1358, unwind unreachable];
    }

    bb1358: {
        StorageDead(_951);
        _5 = copy (*_952);
        StorageDead(_952);
        StorageDead(_950);
        switchInt(copy _5) -> [45: bb1359, otherwise: bb1360];
    }

    bb1359: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S102;
        goto -> bb1384;
    }

    bb1360: {
        _953 = Le(const 48_u8, copy _5);
        switchInt(move _953) -> [0: bb1362, otherwise: bb1361];
    }

    bb1361: {
        _954 = Le(copy _5, const 57_u8);
        switchInt(move _954) -> [0: bb1362, otherwise: bb1367];
    }

    bb1362: {
        _955 = Le(const 65_u8, copy _5);
        switchInt(move _955) -> [0: bb1364, otherwise: bb1363];
    }

    bb1363: {
        _956 = Le(copy _5, const 90_u8);
        switchInt(move _956) -> [0: bb1364, otherwise: bb1367];
    }

    bb1364: {
        _957 = Le(const 97_u8, copy _5);
        switchInt(move _957) -> [0: bb1366, otherwise: bb1365];
    }

    bb1365: {
        _958 = Le(copy _5, const 122_u8);
        switchInt(move _958) -> [0: bb1366, otherwise: bb1367];
    }

    bb1366: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1367: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S103;
        goto -> bb1407;
    }

    bb1368: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1369: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1370: {
        _959 = Le(const 48_u8, copy _5);
        switchInt(move _959) -> [0: bb1372, otherwise: bb1371];
    }

    bb1371: {
        _960 = Le(copy _5, const 57_u8);
        switchInt(move _960) -> [0: bb1372, otherwise: bb1377];
    }

    bb1372: {
        _961 = Le(const 65_u8, copy _5);
        switchInt(move _961) -> [0: bb1374, otherwise: bb1373];
    }

    bb1373: {
        _962 = Le(copy _5, const 90_u8);
        switchInt(move _962) -> [0: bb1374, otherwise: bb1377];
    }

    bb1374: {
        _963 = Le(const 97_u8, copy _5);
        switchInt(move _963) -> [0: bb1376, otherwise: bb1375];
    }

    bb1375: {
        _964 = Le(copy _5, const 122_u8);
        switchInt(move _964) -> [0: bb1376, otherwise: bb1377];
    }

    bb1376: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1377: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S101;
        goto -> bb1378;
    }

    bb1378: {
        StorageLive(_966);
        StorageLive(_965);
        _965 = copy _2;
        _966 = Lt(move _965, copy _4);
        switchInt(move _966) -> [0: bb1379, otherwise: bb1380];
    }

    bb1379: {
        StorageDead(_965);
        _5 = const 0_u8;
        goto -> bb1382;
    }

    bb1380: {
        StorageDead(_965);
        StorageLive(_968);
        StorageLive(_967);
        _967 = copy _2;
        _968 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _967) -> [return: bb1381, unwind unreachable];
    }

    bb1381: {
        StorageDead(_967);
        _5 = copy (*_968);
        StorageDead(_968);
        goto -> bb1382;
    }

    bb1382: {
        StorageDead(_966);
        switchInt(copy _5) -> [45: bb1383, 46: bb1397, 62: bb1398, otherwise: bb1399];
    }

    bb1383: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S102;
        goto -> bb1384;
    }

    bb1384: {
        StorageLive(_970);
        StorageLive(_969);
        _969 = copy _2;
        _970 = Lt(move _969, copy _4);
        switchInt(move _970) -> [0: bb1385, otherwise: bb1386];
    }

    bb1385: {
        StorageDead(_969);
        _5 = const 0_u8;
        StorageDead(_970);
        goto -> bb1389;
    }

    bb1386: {
        StorageDead(_969);
        StorageLive(_972);
        StorageLive(_971);
        _971 = copy _2;
        _972 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _971) -> [return: bb1387, unwind unreachable];
    }

    bb1387: {
        StorageDead(_971);
        _5 = copy (*_972);
        StorageDead(_972);
        StorageDead(_970);
        switchInt(copy _5) -> [45: bb1388, otherwise: bb1389];
    }

    bb1388: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S104;
        goto -> bb1413;
    }

    bb1389: {
        _973 = Le(const 48_u8, copy _5);
        switchInt(move _973) -> [0: bb1391, otherwise: bb1390];
    }

    bb1390: {
        _974 = Le(copy _5, const 57_u8);
        switchInt(move _974) -> [0: bb1391, otherwise: bb1396];
    }

    bb1391: {
        _975 = Le(const 65_u8, copy _5);
        switchInt(move _975) -> [0: bb1393, otherwise: bb1392];
    }

    bb1392: {
        _976 = Le(copy _5, const 90_u8);
        switchInt(move _976) -> [0: bb1393, otherwise: bb1396];
    }

    bb1393: {
        _977 = Le(const 97_u8, copy _5);
        switchInt(move _977) -> [0: bb1395, otherwise: bb1394];
    }

    bb1394: {
        _978 = Le(copy _5, const 122_u8);
        switchInt(move _978) -> [0: bb1395, otherwise: bb1396];
    }

    bb1395: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1396: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S105;
        goto -> bb1436;
    }

    bb1397: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1398: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1399: {
        _979 = Le(const 48_u8, copy _5);
        switchInt(move _979) -> [0: bb1401, otherwise: bb1400];
    }

    bb1400: {
        _980 = Le(copy _5, const 57_u8);
        switchInt(move _980) -> [0: bb1401, otherwise: bb1406];
    }

    bb1401: {
        _981 = Le(const 65_u8, copy _5);
        switchInt(move _981) -> [0: bb1403, otherwise: bb1402];
    }

    bb1402: {
        _982 = Le(copy _5, const 90_u8);
        switchInt(move _982) -> [0: bb1403, otherwise: bb1406];
    }

    bb1403: {
        _983 = Le(const 97_u8, copy _5);
        switchInt(move _983) -> [0: bb1405, otherwise: bb1404];
    }

    bb1404: {
        _984 = Le(copy _5, const 122_u8);
        switchInt(move _984) -> [0: bb1405, otherwise: bb1406];
    }

    bb1405: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1406: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S103;
        goto -> bb1407;
    }

    bb1407: {
        StorageLive(_986);
        StorageLive(_985);
        _985 = copy _2;
        _986 = Lt(move _985, copy _4);
        switchInt(move _986) -> [0: bb1408, otherwise: bb1409];
    }

    bb1408: {
        StorageDead(_985);
        _5 = const 0_u8;
        goto -> bb1411;
    }

    bb1409: {
        StorageDead(_985);
        StorageLive(_988);
        StorageLive(_987);
        _987 = copy _2;
        _988 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _987) -> [return: bb1410, unwind unreachable];
    }

    bb1410: {
        StorageDead(_987);
        _5 = copy (*_988);
        StorageDead(_988);
        goto -> bb1411;
    }

    bb1411: {
        StorageDead(_986);
        switchInt(copy _5) -> [45: bb1412, 46: bb1426, 62: bb1427, otherwise: bb1428];
    }

    bb1412: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S104;
        goto -> bb1413;
    }

    bb1413: {
        StorageLive(_990);
        StorageLive(_989);
        _989 = copy _2;
        _990 = Lt(move _989, copy _4);
        switchInt(move _990) -> [0: bb1414, otherwise: bb1415];
    }

    bb1414: {
        StorageDead(_989);
        _5 = const 0_u8;
        StorageDead(_990);
        goto -> bb1418;
    }

    bb1415: {
        StorageDead(_989);
        StorageLive(_992);
        StorageLive(_991);
        _991 = copy _2;
        _992 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _991) -> [return: bb1416, unwind unreachable];
    }

    bb1416: {
        StorageDead(_991);
        _5 = copy (*_992);
        StorageDead(_992);
        StorageDead(_990);
        switchInt(copy _5) -> [45: bb1417, otherwise: bb1418];
    }

    bb1417: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S106;
        goto -> bb1442;
    }

    bb1418: {
        _993 = Le(const 48_u8, copy _5);
        switchInt(move _993) -> [0: bb1420, otherwise: bb1419];
    }

    bb1419: {
        _994 = Le(copy _5, const 57_u8);
        switchInt(move _994) -> [0: bb1420, otherwise: bb1425];
    }

    bb1420: {
        _995 = Le(const 65_u8, copy _5);
        switchInt(move _995) -> [0: bb1422, otherwise: bb1421];
    }

    bb1421: {
        _996 = Le(copy _5, const 90_u8);
        switchInt(move _996) -> [0: bb1422, otherwise: bb1425];
    }

    bb1422: {
        _997 = Le(const 97_u8, copy _5);
        switchInt(move _997) -> [0: bb1424, otherwise: bb1423];
    }

    bb1423: {
        _998 = Le(copy _5, const 122_u8);
        switchInt(move _998) -> [0: bb1424, otherwise: bb1425];
    }

    bb1424: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1425: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S107;
        goto -> bb1465;
    }

    bb1426: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1427: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1428: {
        _999 = Le(const 48_u8, copy _5);
        switchInt(move _999) -> [0: bb1430, otherwise: bb1429];
    }

    bb1429: {
        _1000 = Le(copy _5, const 57_u8);
        switchInt(move _1000) -> [0: bb1430, otherwise: bb1435];
    }

    bb1430: {
        _1001 = Le(const 65_u8, copy _5);
        switchInt(move _1001) -> [0: bb1432, otherwise: bb1431];
    }

    bb1431: {
        _1002 = Le(copy _5, const 90_u8);
        switchInt(move _1002) -> [0: bb1432, otherwise: bb1435];
    }

    bb1432: {
        _1003 = Le(const 97_u8, copy _5);
        switchInt(move _1003) -> [0: bb1434, otherwise: bb1433];
    }

    bb1433: {
        _1004 = Le(copy _5, const 122_u8);
        switchInt(move _1004) -> [0: bb1434, otherwise: bb1435];
    }

    bb1434: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1435: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S105;
        goto -> bb1436;
    }

    bb1436: {
        StorageLive(_1006);
        StorageLive(_1005);
        _1005 = copy _2;
        _1006 = Lt(move _1005, copy _4);
        switchInt(move _1006) -> [0: bb1437, otherwise: bb1438];
    }

    bb1437: {
        StorageDead(_1005);
        _5 = const 0_u8;
        goto -> bb1440;
    }

    bb1438: {
        StorageDead(_1005);
        StorageLive(_1008);
        StorageLive(_1007);
        _1007 = copy _2;
        _1008 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1007) -> [return: bb1439, unwind unreachable];
    }

    bb1439: {
        StorageDead(_1007);
        _5 = copy (*_1008);
        StorageDead(_1008);
        goto -> bb1440;
    }

    bb1440: {
        StorageDead(_1006);
        switchInt(copy _5) -> [45: bb1441, 46: bb1455, 62: bb1456, otherwise: bb1457];
    }

    bb1441: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S106;
        goto -> bb1442;
    }

    bb1442: {
        StorageLive(_1010);
        StorageLive(_1009);
        _1009 = copy _2;
        _1010 = Lt(move _1009, copy _4);
        switchInt(move _1010) -> [0: bb1443, otherwise: bb1444];
    }

    bb1443: {
        StorageDead(_1009);
        _5 = const 0_u8;
        StorageDead(_1010);
        goto -> bb1447;
    }

    bb1444: {
        StorageDead(_1009);
        StorageLive(_1012);
        StorageLive(_1011);
        _1011 = copy _2;
        _1012 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1011) -> [return: bb1445, unwind unreachable];
    }

    bb1445: {
        StorageDead(_1011);
        _5 = copy (*_1012);
        StorageDead(_1012);
        StorageDead(_1010);
        switchInt(copy _5) -> [45: bb1446, otherwise: bb1447];
    }

    bb1446: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S108;
        goto -> bb1471;
    }

    bb1447: {
        _1013 = Le(const 48_u8, copy _5);
        switchInt(move _1013) -> [0: bb1449, otherwise: bb1448];
    }

    bb1448: {
        _1014 = Le(copy _5, const 57_u8);
        switchInt(move _1014) -> [0: bb1449, otherwise: bb1454];
    }

    bb1449: {
        _1015 = Le(const 65_u8, copy _5);
        switchInt(move _1015) -> [0: bb1451, otherwise: bb1450];
    }

    bb1450: {
        _1016 = Le(copy _5, const 90_u8);
        switchInt(move _1016) -> [0: bb1451, otherwise: bb1454];
    }

    bb1451: {
        _1017 = Le(const 97_u8, copy _5);
        switchInt(move _1017) -> [0: bb1453, otherwise: bb1452];
    }

    bb1452: {
        _1018 = Le(copy _5, const 122_u8);
        switchInt(move _1018) -> [0: bb1453, otherwise: bb1454];
    }

    bb1453: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1454: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S109;
        goto -> bb1494;
    }

    bb1455: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1456: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1457: {
        _1019 = Le(const 48_u8, copy _5);
        switchInt(move _1019) -> [0: bb1459, otherwise: bb1458];
    }

    bb1458: {
        _1020 = Le(copy _5, const 57_u8);
        switchInt(move _1020) -> [0: bb1459, otherwise: bb1464];
    }

    bb1459: {
        _1021 = Le(const 65_u8, copy _5);
        switchInt(move _1021) -> [0: bb1461, otherwise: bb1460];
    }

    bb1460: {
        _1022 = Le(copy _5, const 90_u8);
        switchInt(move _1022) -> [0: bb1461, otherwise: bb1464];
    }

    bb1461: {
        _1023 = Le(const 97_u8, copy _5);
        switchInt(move _1023) -> [0: bb1463, otherwise: bb1462];
    }

    bb1462: {
        _1024 = Le(copy _5, const 122_u8);
        switchInt(move _1024) -> [0: bb1463, otherwise: bb1464];
    }

    bb1463: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1464: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S107;
        goto -> bb1465;
    }

    bb1465: {
        StorageLive(_1026);
        StorageLive(_1025);
        _1025 = copy _2;
        _1026 = Lt(move _1025, copy _4);
        switchInt(move _1026) -> [0: bb1466, otherwise: bb1467];
    }

    bb1466: {
        StorageDead(_1025);
        _5 = const 0_u8;
        goto -> bb1469;
    }

    bb1467: {
        StorageDead(_1025);
        StorageLive(_1028);
        StorageLive(_1027);
        _1027 = copy _2;
        _1028 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1027) -> [return: bb1468, unwind unreachable];
    }

    bb1468: {
        StorageDead(_1027);
        _5 = copy (*_1028);
        StorageDead(_1028);
        goto -> bb1469;
    }

    bb1469: {
        StorageDead(_1026);
        switchInt(copy _5) -> [45: bb1470, 46: bb1484, 62: bb1485, otherwise: bb1486];
    }

    bb1470: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S108;
        goto -> bb1471;
    }

    bb1471: {
        StorageLive(_1030);
        StorageLive(_1029);
        _1029 = copy _2;
        _1030 = Lt(move _1029, copy _4);
        switchInt(move _1030) -> [0: bb1472, otherwise: bb1473];
    }

    bb1472: {
        StorageDead(_1029);
        _5 = const 0_u8;
        StorageDead(_1030);
        goto -> bb1476;
    }

    bb1473: {
        StorageDead(_1029);
        StorageLive(_1032);
        StorageLive(_1031);
        _1031 = copy _2;
        _1032 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1031) -> [return: bb1474, unwind unreachable];
    }

    bb1474: {
        StorageDead(_1031);
        _5 = copy (*_1032);
        StorageDead(_1032);
        StorageDead(_1030);
        switchInt(copy _5) -> [45: bb1475, otherwise: bb1476];
    }

    bb1475: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S110;
        goto -> bb1500;
    }

    bb1476: {
        _1033 = Le(const 48_u8, copy _5);
        switchInt(move _1033) -> [0: bb1478, otherwise: bb1477];
    }

    bb1477: {
        _1034 = Le(copy _5, const 57_u8);
        switchInt(move _1034) -> [0: bb1478, otherwise: bb1483];
    }

    bb1478: {
        _1035 = Le(const 65_u8, copy _5);
        switchInt(move _1035) -> [0: bb1480, otherwise: bb1479];
    }

    bb1479: {
        _1036 = Le(copy _5, const 90_u8);
        switchInt(move _1036) -> [0: bb1480, otherwise: bb1483];
    }

    bb1480: {
        _1037 = Le(const 97_u8, copy _5);
        switchInt(move _1037) -> [0: bb1482, otherwise: bb1481];
    }

    bb1481: {
        _1038 = Le(copy _5, const 122_u8);
        switchInt(move _1038) -> [0: bb1482, otherwise: bb1483];
    }

    bb1482: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1483: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S111;
        goto -> bb1523;
    }

    bb1484: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1485: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1486: {
        _1039 = Le(const 48_u8, copy _5);
        switchInt(move _1039) -> [0: bb1488, otherwise: bb1487];
    }

    bb1487: {
        _1040 = Le(copy _5, const 57_u8);
        switchInt(move _1040) -> [0: bb1488, otherwise: bb1493];
    }

    bb1488: {
        _1041 = Le(const 65_u8, copy _5);
        switchInt(move _1041) -> [0: bb1490, otherwise: bb1489];
    }

    bb1489: {
        _1042 = Le(copy _5, const 90_u8);
        switchInt(move _1042) -> [0: bb1490, otherwise: bb1493];
    }

    bb1490: {
        _1043 = Le(const 97_u8, copy _5);
        switchInt(move _1043) -> [0: bb1492, otherwise: bb1491];
    }

    bb1491: {
        _1044 = Le(copy _5, const 122_u8);
        switchInt(move _1044) -> [0: bb1492, otherwise: bb1493];
    }

    bb1492: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1493: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S109;
        goto -> bb1494;
    }

    bb1494: {
        StorageLive(_1046);
        StorageLive(_1045);
        _1045 = copy _2;
        _1046 = Lt(move _1045, copy _4);
        switchInt(move _1046) -> [0: bb1495, otherwise: bb1496];
    }

    bb1495: {
        StorageDead(_1045);
        _5 = const 0_u8;
        goto -> bb1498;
    }

    bb1496: {
        StorageDead(_1045);
        StorageLive(_1048);
        StorageLive(_1047);
        _1047 = copy _2;
        _1048 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1047) -> [return: bb1497, unwind unreachable];
    }

    bb1497: {
        StorageDead(_1047);
        _5 = copy (*_1048);
        StorageDead(_1048);
        goto -> bb1498;
    }

    bb1498: {
        StorageDead(_1046);
        switchInt(copy _5) -> [45: bb1499, 46: bb1513, 62: bb1514, otherwise: bb1515];
    }

    bb1499: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S110;
        goto -> bb1500;
    }

    bb1500: {
        StorageLive(_1050);
        StorageLive(_1049);
        _1049 = copy _2;
        _1050 = Lt(move _1049, copy _4);
        switchInt(move _1050) -> [0: bb1501, otherwise: bb1502];
    }

    bb1501: {
        StorageDead(_1049);
        _5 = const 0_u8;
        StorageDead(_1050);
        goto -> bb1505;
    }

    bb1502: {
        StorageDead(_1049);
        StorageLive(_1052);
        StorageLive(_1051);
        _1051 = copy _2;
        _1052 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1051) -> [return: bb1503, unwind unreachable];
    }

    bb1503: {
        StorageDead(_1051);
        _5 = copy (*_1052);
        StorageDead(_1052);
        StorageDead(_1050);
        switchInt(copy _5) -> [45: bb1504, otherwise: bb1505];
    }

    bb1504: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S112;
        goto -> bb1529;
    }

    bb1505: {
        _1053 = Le(const 48_u8, copy _5);
        switchInt(move _1053) -> [0: bb1507, otherwise: bb1506];
    }

    bb1506: {
        _1054 = Le(copy _5, const 57_u8);
        switchInt(move _1054) -> [0: bb1507, otherwise: bb1512];
    }

    bb1507: {
        _1055 = Le(const 65_u8, copy _5);
        switchInt(move _1055) -> [0: bb1509, otherwise: bb1508];
    }

    bb1508: {
        _1056 = Le(copy _5, const 90_u8);
        switchInt(move _1056) -> [0: bb1509, otherwise: bb1512];
    }

    bb1509: {
        _1057 = Le(const 97_u8, copy _5);
        switchInt(move _1057) -> [0: bb1511, otherwise: bb1510];
    }

    bb1510: {
        _1058 = Le(copy _5, const 122_u8);
        switchInt(move _1058) -> [0: bb1511, otherwise: bb1512];
    }

    bb1511: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1512: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S113;
        goto -> bb1552;
    }

    bb1513: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1514: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1515: {
        _1059 = Le(const 48_u8, copy _5);
        switchInt(move _1059) -> [0: bb1517, otherwise: bb1516];
    }

    bb1516: {
        _1060 = Le(copy _5, const 57_u8);
        switchInt(move _1060) -> [0: bb1517, otherwise: bb1522];
    }

    bb1517: {
        _1061 = Le(const 65_u8, copy _5);
        switchInt(move _1061) -> [0: bb1519, otherwise: bb1518];
    }

    bb1518: {
        _1062 = Le(copy _5, const 90_u8);
        switchInt(move _1062) -> [0: bb1519, otherwise: bb1522];
    }

    bb1519: {
        _1063 = Le(const 97_u8, copy _5);
        switchInt(move _1063) -> [0: bb1521, otherwise: bb1520];
    }

    bb1520: {
        _1064 = Le(copy _5, const 122_u8);
        switchInt(move _1064) -> [0: bb1521, otherwise: bb1522];
    }

    bb1521: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1522: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S111;
        goto -> bb1523;
    }

    bb1523: {
        StorageLive(_1066);
        StorageLive(_1065);
        _1065 = copy _2;
        _1066 = Lt(move _1065, copy _4);
        switchInt(move _1066) -> [0: bb1524, otherwise: bb1525];
    }

    bb1524: {
        StorageDead(_1065);
        _5 = const 0_u8;
        goto -> bb1527;
    }

    bb1525: {
        StorageDead(_1065);
        StorageLive(_1068);
        StorageLive(_1067);
        _1067 = copy _2;
        _1068 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1067) -> [return: bb1526, unwind unreachable];
    }

    bb1526: {
        StorageDead(_1067);
        _5 = copy (*_1068);
        StorageDead(_1068);
        goto -> bb1527;
    }

    bb1527: {
        StorageDead(_1066);
        switchInt(copy _5) -> [45: bb1528, 46: bb1542, 62: bb1543, otherwise: bb1544];
    }

    bb1528: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S112;
        goto -> bb1529;
    }

    bb1529: {
        StorageLive(_1070);
        StorageLive(_1069);
        _1069 = copy _2;
        _1070 = Lt(move _1069, copy _4);
        switchInt(move _1070) -> [0: bb1530, otherwise: bb1531];
    }

    bb1530: {
        StorageDead(_1069);
        _5 = const 0_u8;
        StorageDead(_1070);
        goto -> bb1534;
    }

    bb1531: {
        StorageDead(_1069);
        StorageLive(_1072);
        StorageLive(_1071);
        _1071 = copy _2;
        _1072 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1071) -> [return: bb1532, unwind unreachable];
    }

    bb1532: {
        StorageDead(_1071);
        _5 = copy (*_1072);
        StorageDead(_1072);
        StorageDead(_1070);
        switchInt(copy _5) -> [45: bb1533, otherwise: bb1534];
    }

    bb1533: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S114;
        goto -> bb1558;
    }

    bb1534: {
        _1073 = Le(const 48_u8, copy _5);
        switchInt(move _1073) -> [0: bb1536, otherwise: bb1535];
    }

    bb1535: {
        _1074 = Le(copy _5, const 57_u8);
        switchInt(move _1074) -> [0: bb1536, otherwise: bb1541];
    }

    bb1536: {
        _1075 = Le(const 65_u8, copy _5);
        switchInt(move _1075) -> [0: bb1538, otherwise: bb1537];
    }

    bb1537: {
        _1076 = Le(copy _5, const 90_u8);
        switchInt(move _1076) -> [0: bb1538, otherwise: bb1541];
    }

    bb1538: {
        _1077 = Le(const 97_u8, copy _5);
        switchInt(move _1077) -> [0: bb1540, otherwise: bb1539];
    }

    bb1539: {
        _1078 = Le(copy _5, const 122_u8);
        switchInt(move _1078) -> [0: bb1540, otherwise: bb1541];
    }

    bb1540: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1541: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S115;
        goto -> bb1581;
    }

    bb1542: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1543: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1544: {
        _1079 = Le(const 48_u8, copy _5);
        switchInt(move _1079) -> [0: bb1546, otherwise: bb1545];
    }

    bb1545: {
        _1080 = Le(copy _5, const 57_u8);
        switchInt(move _1080) -> [0: bb1546, otherwise: bb1551];
    }

    bb1546: {
        _1081 = Le(const 65_u8, copy _5);
        switchInt(move _1081) -> [0: bb1548, otherwise: bb1547];
    }

    bb1547: {
        _1082 = Le(copy _5, const 90_u8);
        switchInt(move _1082) -> [0: bb1548, otherwise: bb1551];
    }

    bb1548: {
        _1083 = Le(const 97_u8, copy _5);
        switchInt(move _1083) -> [0: bb1550, otherwise: bb1549];
    }

    bb1549: {
        _1084 = Le(copy _5, const 122_u8);
        switchInt(move _1084) -> [0: bb1550, otherwise: bb1551];
    }

    bb1550: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1551: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S113;
        goto -> bb1552;
    }

    bb1552: {
        StorageLive(_1086);
        StorageLive(_1085);
        _1085 = copy _2;
        _1086 = Lt(move _1085, copy _4);
        switchInt(move _1086) -> [0: bb1553, otherwise: bb1554];
    }

    bb1553: {
        StorageDead(_1085);
        _5 = const 0_u8;
        goto -> bb1556;
    }

    bb1554: {
        StorageDead(_1085);
        StorageLive(_1088);
        StorageLive(_1087);
        _1087 = copy _2;
        _1088 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1087) -> [return: bb1555, unwind unreachable];
    }

    bb1555: {
        StorageDead(_1087);
        _5 = copy (*_1088);
        StorageDead(_1088);
        goto -> bb1556;
    }

    bb1556: {
        StorageDead(_1086);
        switchInt(copy _5) -> [45: bb1557, 46: bb1571, 62: bb1572, otherwise: bb1573];
    }

    bb1557: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S114;
        goto -> bb1558;
    }

    bb1558: {
        StorageLive(_1090);
        StorageLive(_1089);
        _1089 = copy _2;
        _1090 = Lt(move _1089, copy _4);
        switchInt(move _1090) -> [0: bb1559, otherwise: bb1560];
    }

    bb1559: {
        StorageDead(_1089);
        _5 = const 0_u8;
        StorageDead(_1090);
        goto -> bb1563;
    }

    bb1560: {
        StorageDead(_1089);
        StorageLive(_1092);
        StorageLive(_1091);
        _1091 = copy _2;
        _1092 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1091) -> [return: bb1561, unwind unreachable];
    }

    bb1561: {
        StorageDead(_1091);
        _5 = copy (*_1092);
        StorageDead(_1092);
        StorageDead(_1090);
        switchInt(copy _5) -> [45: bb1562, otherwise: bb1563];
    }

    bb1562: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S116;
        goto -> bb1587;
    }

    bb1563: {
        _1093 = Le(const 48_u8, copy _5);
        switchInt(move _1093) -> [0: bb1565, otherwise: bb1564];
    }

    bb1564: {
        _1094 = Le(copy _5, const 57_u8);
        switchInt(move _1094) -> [0: bb1565, otherwise: bb1570];
    }

    bb1565: {
        _1095 = Le(const 65_u8, copy _5);
        switchInt(move _1095) -> [0: bb1567, otherwise: bb1566];
    }

    bb1566: {
        _1096 = Le(copy _5, const 90_u8);
        switchInt(move _1096) -> [0: bb1567, otherwise: bb1570];
    }

    bb1567: {
        _1097 = Le(const 97_u8, copy _5);
        switchInt(move _1097) -> [0: bb1569, otherwise: bb1568];
    }

    bb1568: {
        _1098 = Le(copy _5, const 122_u8);
        switchInt(move _1098) -> [0: bb1569, otherwise: bb1570];
    }

    bb1569: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1570: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S117;
        goto -> bb1610;
    }

    bb1571: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1572: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1573: {
        _1099 = Le(const 48_u8, copy _5);
        switchInt(move _1099) -> [0: bb1575, otherwise: bb1574];
    }

    bb1574: {
        _1100 = Le(copy _5, const 57_u8);
        switchInt(move _1100) -> [0: bb1575, otherwise: bb1580];
    }

    bb1575: {
        _1101 = Le(const 65_u8, copy _5);
        switchInt(move _1101) -> [0: bb1577, otherwise: bb1576];
    }

    bb1576: {
        _1102 = Le(copy _5, const 90_u8);
        switchInt(move _1102) -> [0: bb1577, otherwise: bb1580];
    }

    bb1577: {
        _1103 = Le(const 97_u8, copy _5);
        switchInt(move _1103) -> [0: bb1579, otherwise: bb1578];
    }

    bb1578: {
        _1104 = Le(copy _5, const 122_u8);
        switchInt(move _1104) -> [0: bb1579, otherwise: bb1580];
    }

    bb1579: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1580: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S115;
        goto -> bb1581;
    }

    bb1581: {
        StorageLive(_1106);
        StorageLive(_1105);
        _1105 = copy _2;
        _1106 = Lt(move _1105, copy _4);
        switchInt(move _1106) -> [0: bb1582, otherwise: bb1583];
    }

    bb1582: {
        StorageDead(_1105);
        _5 = const 0_u8;
        goto -> bb1585;
    }

    bb1583: {
        StorageDead(_1105);
        StorageLive(_1108);
        StorageLive(_1107);
        _1107 = copy _2;
        _1108 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1107) -> [return: bb1584, unwind unreachable];
    }

    bb1584: {
        StorageDead(_1107);
        _5 = copy (*_1108);
        StorageDead(_1108);
        goto -> bb1585;
    }

    bb1585: {
        StorageDead(_1106);
        switchInt(copy _5) -> [45: bb1586, 46: bb1600, 62: bb1601, otherwise: bb1602];
    }

    bb1586: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S116;
        goto -> bb1587;
    }

    bb1587: {
        StorageLive(_1110);
        StorageLive(_1109);
        _1109 = copy _2;
        _1110 = Lt(move _1109, copy _4);
        switchInt(move _1110) -> [0: bb1588, otherwise: bb1589];
    }

    bb1588: {
        StorageDead(_1109);
        _5 = const 0_u8;
        StorageDead(_1110);
        goto -> bb1592;
    }

    bb1589: {
        StorageDead(_1109);
        StorageLive(_1112);
        StorageLive(_1111);
        _1111 = copy _2;
        _1112 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1111) -> [return: bb1590, unwind unreachable];
    }

    bb1590: {
        StorageDead(_1111);
        _5 = copy (*_1112);
        StorageDead(_1112);
        StorageDead(_1110);
        switchInt(copy _5) -> [45: bb1591, otherwise: bb1592];
    }

    bb1591: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S118;
        goto -> bb1616;
    }

    bb1592: {
        _1113 = Le(const 48_u8, copy _5);
        switchInt(move _1113) -> [0: bb1594, otherwise: bb1593];
    }

    bb1593: {
        _1114 = Le(copy _5, const 57_u8);
        switchInt(move _1114) -> [0: bb1594, otherwise: bb1599];
    }

    bb1594: {
        _1115 = Le(const 65_u8, copy _5);
        switchInt(move _1115) -> [0: bb1596, otherwise: bb1595];
    }

    bb1595: {
        _1116 = Le(copy _5, const 90_u8);
        switchInt(move _1116) -> [0: bb1596, otherwise: bb1599];
    }

    bb1596: {
        _1117 = Le(const 97_u8, copy _5);
        switchInt(move _1117) -> [0: bb1598, otherwise: bb1597];
    }

    bb1597: {
        _1118 = Le(copy _5, const 122_u8);
        switchInt(move _1118) -> [0: bb1598, otherwise: bb1599];
    }

    bb1598: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1599: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S119;
        goto -> bb1639;
    }

    bb1600: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1601: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1602: {
        _1119 = Le(const 48_u8, copy _5);
        switchInt(move _1119) -> [0: bb1604, otherwise: bb1603];
    }

    bb1603: {
        _1120 = Le(copy _5, const 57_u8);
        switchInt(move _1120) -> [0: bb1604, otherwise: bb1609];
    }

    bb1604: {
        _1121 = Le(const 65_u8, copy _5);
        switchInt(move _1121) -> [0: bb1606, otherwise: bb1605];
    }

    bb1605: {
        _1122 = Le(copy _5, const 90_u8);
        switchInt(move _1122) -> [0: bb1606, otherwise: bb1609];
    }

    bb1606: {
        _1123 = Le(const 97_u8, copy _5);
        switchInt(move _1123) -> [0: bb1608, otherwise: bb1607];
    }

    bb1607: {
        _1124 = Le(copy _5, const 122_u8);
        switchInt(move _1124) -> [0: bb1608, otherwise: bb1609];
    }

    bb1608: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1609: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S117;
        goto -> bb1610;
    }

    bb1610: {
        StorageLive(_1126);
        StorageLive(_1125);
        _1125 = copy _2;
        _1126 = Lt(move _1125, copy _4);
        switchInt(move _1126) -> [0: bb1611, otherwise: bb1612];
    }

    bb1611: {
        StorageDead(_1125);
        _5 = const 0_u8;
        goto -> bb1614;
    }

    bb1612: {
        StorageDead(_1125);
        StorageLive(_1128);
        StorageLive(_1127);
        _1127 = copy _2;
        _1128 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1127) -> [return: bb1613, unwind unreachable];
    }

    bb1613: {
        StorageDead(_1127);
        _5 = copy (*_1128);
        StorageDead(_1128);
        goto -> bb1614;
    }

    bb1614: {
        StorageDead(_1126);
        switchInt(copy _5) -> [45: bb1615, 46: bb1629, 62: bb1630, otherwise: bb1631];
    }

    bb1615: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S118;
        goto -> bb1616;
    }

    bb1616: {
        StorageLive(_1130);
        StorageLive(_1129);
        _1129 = copy _2;
        _1130 = Lt(move _1129, copy _4);
        switchInt(move _1130) -> [0: bb1617, otherwise: bb1618];
    }

    bb1617: {
        StorageDead(_1129);
        _5 = const 0_u8;
        StorageDead(_1130);
        goto -> bb1621;
    }

    bb1618: {
        StorageDead(_1129);
        StorageLive(_1132);
        StorageLive(_1131);
        _1131 = copy _2;
        _1132 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1131) -> [return: bb1619, unwind unreachable];
    }

    bb1619: {
        StorageDead(_1131);
        _5 = copy (*_1132);
        StorageDead(_1132);
        StorageDead(_1130);
        switchInt(copy _5) -> [45: bb1620, otherwise: bb1621];
    }

    bb1620: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S120;
        goto -> bb1645;
    }

    bb1621: {
        _1133 = Le(const 48_u8, copy _5);
        switchInt(move _1133) -> [0: bb1623, otherwise: bb1622];
    }

    bb1622: {
        _1134 = Le(copy _5, const 57_u8);
        switchInt(move _1134) -> [0: bb1623, otherwise: bb1628];
    }

    bb1623: {
        _1135 = Le(const 65_u8, copy _5);
        switchInt(move _1135) -> [0: bb1625, otherwise: bb1624];
    }

    bb1624: {
        _1136 = Le(copy _5, const 90_u8);
        switchInt(move _1136) -> [0: bb1625, otherwise: bb1628];
    }

    bb1625: {
        _1137 = Le(const 97_u8, copy _5);
        switchInt(move _1137) -> [0: bb1627, otherwise: bb1626];
    }

    bb1626: {
        _1138 = Le(copy _5, const 122_u8);
        switchInt(move _1138) -> [0: bb1627, otherwise: bb1628];
    }

    bb1627: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1628: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S121;
        goto -> bb1668;
    }

    bb1629: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1630: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1631: {
        _1139 = Le(const 48_u8, copy _5);
        switchInt(move _1139) -> [0: bb1633, otherwise: bb1632];
    }

    bb1632: {
        _1140 = Le(copy _5, const 57_u8);
        switchInt(move _1140) -> [0: bb1633, otherwise: bb1638];
    }

    bb1633: {
        _1141 = Le(const 65_u8, copy _5);
        switchInt(move _1141) -> [0: bb1635, otherwise: bb1634];
    }

    bb1634: {
        _1142 = Le(copy _5, const 90_u8);
        switchInt(move _1142) -> [0: bb1635, otherwise: bb1638];
    }

    bb1635: {
        _1143 = Le(const 97_u8, copy _5);
        switchInt(move _1143) -> [0: bb1637, otherwise: bb1636];
    }

    bb1636: {
        _1144 = Le(copy _5, const 122_u8);
        switchInt(move _1144) -> [0: bb1637, otherwise: bb1638];
    }

    bb1637: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1638: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S119;
        goto -> bb1639;
    }

    bb1639: {
        StorageLive(_1146);
        StorageLive(_1145);
        _1145 = copy _2;
        _1146 = Lt(move _1145, copy _4);
        switchInt(move _1146) -> [0: bb1640, otherwise: bb1641];
    }

    bb1640: {
        StorageDead(_1145);
        _5 = const 0_u8;
        goto -> bb1643;
    }

    bb1641: {
        StorageDead(_1145);
        StorageLive(_1148);
        StorageLive(_1147);
        _1147 = copy _2;
        _1148 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1147) -> [return: bb1642, unwind unreachable];
    }

    bb1642: {
        StorageDead(_1147);
        _5 = copy (*_1148);
        StorageDead(_1148);
        goto -> bb1643;
    }

    bb1643: {
        StorageDead(_1146);
        switchInt(copy _5) -> [45: bb1644, 46: bb1658, 62: bb1659, otherwise: bb1660];
    }

    bb1644: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S120;
        goto -> bb1645;
    }

    bb1645: {
        StorageLive(_1150);
        StorageLive(_1149);
        _1149 = copy _2;
        _1150 = Lt(move _1149, copy _4);
        switchInt(move _1150) -> [0: bb1646, otherwise: bb1647];
    }

    bb1646: {
        StorageDead(_1149);
        _5 = const 0_u8;
        StorageDead(_1150);
        goto -> bb1650;
    }

    bb1647: {
        StorageDead(_1149);
        StorageLive(_1152);
        StorageLive(_1151);
        _1151 = copy _2;
        _1152 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1151) -> [return: bb1648, unwind unreachable];
    }

    bb1648: {
        StorageDead(_1151);
        _5 = copy (*_1152);
        StorageDead(_1152);
        StorageDead(_1150);
        switchInt(copy _5) -> [45: bb1649, otherwise: bb1650];
    }

    bb1649: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S122;
        goto -> bb1674;
    }

    bb1650: {
        _1153 = Le(const 48_u8, copy _5);
        switchInt(move _1153) -> [0: bb1652, otherwise: bb1651];
    }

    bb1651: {
        _1154 = Le(copy _5, const 57_u8);
        switchInt(move _1154) -> [0: bb1652, otherwise: bb1657];
    }

    bb1652: {
        _1155 = Le(const 65_u8, copy _5);
        switchInt(move _1155) -> [0: bb1654, otherwise: bb1653];
    }

    bb1653: {
        _1156 = Le(copy _5, const 90_u8);
        switchInt(move _1156) -> [0: bb1654, otherwise: bb1657];
    }

    bb1654: {
        _1157 = Le(const 97_u8, copy _5);
        switchInt(move _1157) -> [0: bb1656, otherwise: bb1655];
    }

    bb1655: {
        _1158 = Le(copy _5, const 122_u8);
        switchInt(move _1158) -> [0: bb1656, otherwise: bb1657];
    }

    bb1656: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1657: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S123;
        goto -> bb1697;
    }

    bb1658: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1659: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1660: {
        _1159 = Le(const 48_u8, copy _5);
        switchInt(move _1159) -> [0: bb1662, otherwise: bb1661];
    }

    bb1661: {
        _1160 = Le(copy _5, const 57_u8);
        switchInt(move _1160) -> [0: bb1662, otherwise: bb1667];
    }

    bb1662: {
        _1161 = Le(const 65_u8, copy _5);
        switchInt(move _1161) -> [0: bb1664, otherwise: bb1663];
    }

    bb1663: {
        _1162 = Le(copy _5, const 90_u8);
        switchInt(move _1162) -> [0: bb1664, otherwise: bb1667];
    }

    bb1664: {
        _1163 = Le(const 97_u8, copy _5);
        switchInt(move _1163) -> [0: bb1666, otherwise: bb1665];
    }

    bb1665: {
        _1164 = Le(copy _5, const 122_u8);
        switchInt(move _1164) -> [0: bb1666, otherwise: bb1667];
    }

    bb1666: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1667: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S121;
        goto -> bb1668;
    }

    bb1668: {
        StorageLive(_1166);
        StorageLive(_1165);
        _1165 = copy _2;
        _1166 = Lt(move _1165, copy _4);
        switchInt(move _1166) -> [0: bb1669, otherwise: bb1670];
    }

    bb1669: {
        StorageDead(_1165);
        _5 = const 0_u8;
        goto -> bb1672;
    }

    bb1670: {
        StorageDead(_1165);
        StorageLive(_1168);
        StorageLive(_1167);
        _1167 = copy _2;
        _1168 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1167) -> [return: bb1671, unwind unreachable];
    }

    bb1671: {
        StorageDead(_1167);
        _5 = copy (*_1168);
        StorageDead(_1168);
        goto -> bb1672;
    }

    bb1672: {
        StorageDead(_1166);
        switchInt(copy _5) -> [45: bb1673, 46: bb1687, 62: bb1688, otherwise: bb1689];
    }

    bb1673: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S122;
        goto -> bb1674;
    }

    bb1674: {
        StorageLive(_1170);
        StorageLive(_1169);
        _1169 = copy _2;
        _1170 = Lt(move _1169, copy _4);
        switchInt(move _1170) -> [0: bb1675, otherwise: bb1676];
    }

    bb1675: {
        StorageDead(_1169);
        _5 = const 0_u8;
        StorageDead(_1170);
        goto -> bb1679;
    }

    bb1676: {
        StorageDead(_1169);
        StorageLive(_1172);
        StorageLive(_1171);
        _1171 = copy _2;
        _1172 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1171) -> [return: bb1677, unwind unreachable];
    }

    bb1677: {
        StorageDead(_1171);
        _5 = copy (*_1172);
        StorageDead(_1172);
        StorageDead(_1170);
        switchInt(copy _5) -> [45: bb1678, otherwise: bb1679];
    }

    bb1678: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S124;
        goto -> bb1703;
    }

    bb1679: {
        _1173 = Le(const 48_u8, copy _5);
        switchInt(move _1173) -> [0: bb1681, otherwise: bb1680];
    }

    bb1680: {
        _1174 = Le(copy _5, const 57_u8);
        switchInt(move _1174) -> [0: bb1681, otherwise: bb1686];
    }

    bb1681: {
        _1175 = Le(const 65_u8, copy _5);
        switchInt(move _1175) -> [0: bb1683, otherwise: bb1682];
    }

    bb1682: {
        _1176 = Le(copy _5, const 90_u8);
        switchInt(move _1176) -> [0: bb1683, otherwise: bb1686];
    }

    bb1683: {
        _1177 = Le(const 97_u8, copy _5);
        switchInt(move _1177) -> [0: bb1685, otherwise: bb1684];
    }

    bb1684: {
        _1178 = Le(copy _5, const 122_u8);
        switchInt(move _1178) -> [0: bb1685, otherwise: bb1686];
    }

    bb1685: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1686: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S125;
        goto -> bb1726;
    }

    bb1687: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1688: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1689: {
        _1179 = Le(const 48_u8, copy _5);
        switchInt(move _1179) -> [0: bb1691, otherwise: bb1690];
    }

    bb1690: {
        _1180 = Le(copy _5, const 57_u8);
        switchInt(move _1180) -> [0: bb1691, otherwise: bb1696];
    }

    bb1691: {
        _1181 = Le(const 65_u8, copy _5);
        switchInt(move _1181) -> [0: bb1693, otherwise: bb1692];
    }

    bb1692: {
        _1182 = Le(copy _5, const 90_u8);
        switchInt(move _1182) -> [0: bb1693, otherwise: bb1696];
    }

    bb1693: {
        _1183 = Le(const 97_u8, copy _5);
        switchInt(move _1183) -> [0: bb1695, otherwise: bb1694];
    }

    bb1694: {
        _1184 = Le(copy _5, const 122_u8);
        switchInt(move _1184) -> [0: bb1695, otherwise: bb1696];
    }

    bb1695: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1696: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S123;
        goto -> bb1697;
    }

    bb1697: {
        StorageLive(_1186);
        StorageLive(_1185);
        _1185 = copy _2;
        _1186 = Lt(move _1185, copy _4);
        switchInt(move _1186) -> [0: bb1698, otherwise: bb1699];
    }

    bb1698: {
        StorageDead(_1185);
        _5 = const 0_u8;
        goto -> bb1701;
    }

    bb1699: {
        StorageDead(_1185);
        StorageLive(_1188);
        StorageLive(_1187);
        _1187 = copy _2;
        _1188 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1187) -> [return: bb1700, unwind unreachable];
    }

    bb1700: {
        StorageDead(_1187);
        _5 = copy (*_1188);
        StorageDead(_1188);
        goto -> bb1701;
    }

    bb1701: {
        StorageDead(_1186);
        switchInt(copy _5) -> [45: bb1702, 46: bb1716, 62: bb1717, otherwise: bb1718];
    }

    bb1702: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S124;
        goto -> bb1703;
    }

    bb1703: {
        StorageLive(_1190);
        StorageLive(_1189);
        _1189 = copy _2;
        _1190 = Lt(move _1189, copy _4);
        switchInt(move _1190) -> [0: bb1704, otherwise: bb1705];
    }

    bb1704: {
        StorageDead(_1189);
        _5 = const 0_u8;
        StorageDead(_1190);
        goto -> bb1708;
    }

    bb1705: {
        StorageDead(_1189);
        StorageLive(_1192);
        StorageLive(_1191);
        _1191 = copy _2;
        _1192 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1191) -> [return: bb1706, unwind unreachable];
    }

    bb1706: {
        StorageDead(_1191);
        _5 = copy (*_1192);
        StorageDead(_1192);
        StorageDead(_1190);
        switchInt(copy _5) -> [45: bb1707, otherwise: bb1708];
    }

    bb1707: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S126;
        goto -> bb1732;
    }

    bb1708: {
        _1193 = Le(const 48_u8, copy _5);
        switchInt(move _1193) -> [0: bb1710, otherwise: bb1709];
    }

    bb1709: {
        _1194 = Le(copy _5, const 57_u8);
        switchInt(move _1194) -> [0: bb1710, otherwise: bb1715];
    }

    bb1710: {
        _1195 = Le(const 65_u8, copy _5);
        switchInt(move _1195) -> [0: bb1712, otherwise: bb1711];
    }

    bb1711: {
        _1196 = Le(copy _5, const 90_u8);
        switchInt(move _1196) -> [0: bb1712, otherwise: bb1715];
    }

    bb1712: {
        _1197 = Le(const 97_u8, copy _5);
        switchInt(move _1197) -> [0: bb1714, otherwise: bb1713];
    }

    bb1713: {
        _1198 = Le(copy _5, const 122_u8);
        switchInt(move _1198) -> [0: bb1714, otherwise: bb1715];
    }

    bb1714: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1715: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S127;
        goto -> bb1755;
    }

    bb1716: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1717: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1718: {
        _1199 = Le(const 48_u8, copy _5);
        switchInt(move _1199) -> [0: bb1720, otherwise: bb1719];
    }

    bb1719: {
        _1200 = Le(copy _5, const 57_u8);
        switchInt(move _1200) -> [0: bb1720, otherwise: bb1725];
    }

    bb1720: {
        _1201 = Le(const 65_u8, copy _5);
        switchInt(move _1201) -> [0: bb1722, otherwise: bb1721];
    }

    bb1721: {
        _1202 = Le(copy _5, const 90_u8);
        switchInt(move _1202) -> [0: bb1722, otherwise: bb1725];
    }

    bb1722: {
        _1203 = Le(const 97_u8, copy _5);
        switchInt(move _1203) -> [0: bb1724, otherwise: bb1723];
    }

    bb1723: {
        _1204 = Le(copy _5, const 122_u8);
        switchInt(move _1204) -> [0: bb1724, otherwise: bb1725];
    }

    bb1724: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1725: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S125;
        goto -> bb1726;
    }

    bb1726: {
        StorageLive(_1206);
        StorageLive(_1205);
        _1205 = copy _2;
        _1206 = Lt(move _1205, copy _4);
        switchInt(move _1206) -> [0: bb1727, otherwise: bb1728];
    }

    bb1727: {
        StorageDead(_1205);
        _5 = const 0_u8;
        goto -> bb1730;
    }

    bb1728: {
        StorageDead(_1205);
        StorageLive(_1208);
        StorageLive(_1207);
        _1207 = copy _2;
        _1208 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1207) -> [return: bb1729, unwind unreachable];
    }

    bb1729: {
        StorageDead(_1207);
        _5 = copy (*_1208);
        StorageDead(_1208);
        goto -> bb1730;
    }

    bb1730: {
        StorageDead(_1206);
        switchInt(copy _5) -> [45: bb1731, 46: bb1745, 62: bb1746, otherwise: bb1747];
    }

    bb1731: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S126;
        goto -> bb1732;
    }

    bb1732: {
        StorageLive(_1210);
        StorageLive(_1209);
        _1209 = copy _2;
        _1210 = Lt(move _1209, copy _4);
        switchInt(move _1210) -> [0: bb1733, otherwise: bb1734];
    }

    bb1733: {
        StorageDead(_1209);
        _5 = const 0_u8;
        StorageDead(_1210);
        goto -> bb1737;
    }

    bb1734: {
        StorageDead(_1209);
        StorageLive(_1212);
        StorageLive(_1211);
        _1211 = copy _2;
        _1212 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1211) -> [return: bb1735, unwind unreachable];
    }

    bb1735: {
        StorageDead(_1211);
        _5 = copy (*_1212);
        StorageDead(_1212);
        StorageDead(_1210);
        switchInt(copy _5) -> [45: bb1736, otherwise: bb1737];
    }

    bb1736: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S128;
        goto -> bb1761;
    }

    bb1737: {
        _1213 = Le(const 48_u8, copy _5);
        switchInt(move _1213) -> [0: bb1739, otherwise: bb1738];
    }

    bb1738: {
        _1214 = Le(copy _5, const 57_u8);
        switchInt(move _1214) -> [0: bb1739, otherwise: bb1744];
    }

    bb1739: {
        _1215 = Le(const 65_u8, copy _5);
        switchInt(move _1215) -> [0: bb1741, otherwise: bb1740];
    }

    bb1740: {
        _1216 = Le(copy _5, const 90_u8);
        switchInt(move _1216) -> [0: bb1741, otherwise: bb1744];
    }

    bb1741: {
        _1217 = Le(const 97_u8, copy _5);
        switchInt(move _1217) -> [0: bb1743, otherwise: bb1742];
    }

    bb1742: {
        _1218 = Le(copy _5, const 122_u8);
        switchInt(move _1218) -> [0: bb1743, otherwise: bb1744];
    }

    bb1743: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1744: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S129;
        goto -> bb1784;
    }

    bb1745: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1746: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1747: {
        _1219 = Le(const 48_u8, copy _5);
        switchInt(move _1219) -> [0: bb1749, otherwise: bb1748];
    }

    bb1748: {
        _1220 = Le(copy _5, const 57_u8);
        switchInt(move _1220) -> [0: bb1749, otherwise: bb1754];
    }

    bb1749: {
        _1221 = Le(const 65_u8, copy _5);
        switchInt(move _1221) -> [0: bb1751, otherwise: bb1750];
    }

    bb1750: {
        _1222 = Le(copy _5, const 90_u8);
        switchInt(move _1222) -> [0: bb1751, otherwise: bb1754];
    }

    bb1751: {
        _1223 = Le(const 97_u8, copy _5);
        switchInt(move _1223) -> [0: bb1753, otherwise: bb1752];
    }

    bb1752: {
        _1224 = Le(copy _5, const 122_u8);
        switchInt(move _1224) -> [0: bb1753, otherwise: bb1754];
    }

    bb1753: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1754: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S127;
        goto -> bb1755;
    }

    bb1755: {
        StorageLive(_1226);
        StorageLive(_1225);
        _1225 = copy _2;
        _1226 = Lt(move _1225, copy _4);
        switchInt(move _1226) -> [0: bb1756, otherwise: bb1757];
    }

    bb1756: {
        StorageDead(_1225);
        _5 = const 0_u8;
        goto -> bb1759;
    }

    bb1757: {
        StorageDead(_1225);
        StorageLive(_1228);
        StorageLive(_1227);
        _1227 = copy _2;
        _1228 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1227) -> [return: bb1758, unwind unreachable];
    }

    bb1758: {
        StorageDead(_1227);
        _5 = copy (*_1228);
        StorageDead(_1228);
        goto -> bb1759;
    }

    bb1759: {
        StorageDead(_1226);
        switchInt(copy _5) -> [45: bb1760, 46: bb1774, 62: bb1775, otherwise: bb1776];
    }

    bb1760: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S128;
        goto -> bb1761;
    }

    bb1761: {
        StorageLive(_1230);
        StorageLive(_1229);
        _1229 = copy _2;
        _1230 = Lt(move _1229, copy _4);
        switchInt(move _1230) -> [0: bb1762, otherwise: bb1763];
    }

    bb1762: {
        StorageDead(_1229);
        _5 = const 0_u8;
        StorageDead(_1230);
        goto -> bb1766;
    }

    bb1763: {
        StorageDead(_1229);
        StorageLive(_1232);
        StorageLive(_1231);
        _1231 = copy _2;
        _1232 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1231) -> [return: bb1764, unwind unreachable];
    }

    bb1764: {
        StorageDead(_1231);
        _5 = copy (*_1232);
        StorageDead(_1232);
        StorageDead(_1230);
        switchInt(copy _5) -> [45: bb1765, otherwise: bb1766];
    }

    bb1765: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S130;
        goto -> bb1790;
    }

    bb1766: {
        _1233 = Le(const 48_u8, copy _5);
        switchInt(move _1233) -> [0: bb1768, otherwise: bb1767];
    }

    bb1767: {
        _1234 = Le(copy _5, const 57_u8);
        switchInt(move _1234) -> [0: bb1768, otherwise: bb1773];
    }

    bb1768: {
        _1235 = Le(const 65_u8, copy _5);
        switchInt(move _1235) -> [0: bb1770, otherwise: bb1769];
    }

    bb1769: {
        _1236 = Le(copy _5, const 90_u8);
        switchInt(move _1236) -> [0: bb1770, otherwise: bb1773];
    }

    bb1770: {
        _1237 = Le(const 97_u8, copy _5);
        switchInt(move _1237) -> [0: bb1772, otherwise: bb1771];
    }

    bb1771: {
        _1238 = Le(copy _5, const 122_u8);
        switchInt(move _1238) -> [0: bb1772, otherwise: bb1773];
    }

    bb1772: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1773: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S131;
        goto -> bb1812;
    }

    bb1774: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1775: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1776: {
        _1239 = Le(const 48_u8, copy _5);
        switchInt(move _1239) -> [0: bb1778, otherwise: bb1777];
    }

    bb1777: {
        _1240 = Le(copy _5, const 57_u8);
        switchInt(move _1240) -> [0: bb1778, otherwise: bb1783];
    }

    bb1778: {
        _1241 = Le(const 65_u8, copy _5);
        switchInt(move _1241) -> [0: bb1780, otherwise: bb1779];
    }

    bb1779: {
        _1242 = Le(copy _5, const 90_u8);
        switchInt(move _1242) -> [0: bb1780, otherwise: bb1783];
    }

    bb1780: {
        _1243 = Le(const 97_u8, copy _5);
        switchInt(move _1243) -> [0: bb1782, otherwise: bb1781];
    }

    bb1781: {
        _1244 = Le(copy _5, const 122_u8);
        switchInt(move _1244) -> [0: bb1782, otherwise: bb1783];
    }

    bb1782: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1783: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S129;
        goto -> bb1784;
    }

    bb1784: {
        StorageLive(_1246);
        StorageLive(_1245);
        _1245 = copy _2;
        _1246 = Lt(move _1245, copy _4);
        switchInt(move _1246) -> [0: bb1785, otherwise: bb1786];
    }

    bb1785: {
        StorageDead(_1245);
        _5 = const 0_u8;
        goto -> bb1788;
    }

    bb1786: {
        StorageDead(_1245);
        StorageLive(_1248);
        StorageLive(_1247);
        _1247 = copy _2;
        _1248 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1247) -> [return: bb1787, unwind unreachable];
    }

    bb1787: {
        StorageDead(_1247);
        _5 = copy (*_1248);
        StorageDead(_1248);
        goto -> bb1788;
    }

    bb1788: {
        StorageDead(_1246);
        switchInt(copy _5) -> [45: bb1789, 46: bb1802, 62: bb1803, otherwise: bb1804];
    }

    bb1789: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S130;
        goto -> bb1790;
    }

    bb1790: {
        StorageLive(_1250);
        StorageLive(_1249);
        _1249 = copy _2;
        _1250 = Lt(move _1249, copy _4);
        switchInt(move _1250) -> [0: bb1791, otherwise: bb1792];
    }

    bb1791: {
        StorageDead(_1249);
        _5 = const 0_u8;
        goto -> bb1794;
    }

    bb1792: {
        StorageDead(_1249);
        StorageLive(_1252);
        StorageLive(_1251);
        _1251 = copy _2;
        _1252 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1251) -> [return: bb1793, unwind unreachable];
    }

    bb1793: {
        StorageDead(_1251);
        _5 = copy (*_1252);
        StorageDead(_1252);
        goto -> bb1794;
    }

    bb1794: {
        StorageDead(_1250);
        _1253 = Le(const 48_u8, copy _5);
        switchInt(move _1253) -> [0: bb1796, otherwise: bb1795];
    }

    bb1795: {
        _1254 = Le(copy _5, const 57_u8);
        switchInt(move _1254) -> [0: bb1796, otherwise: bb1801];
    }

    bb1796: {
        _1255 = Le(const 65_u8, copy _5);
        switchInt(move _1255) -> [0: bb1798, otherwise: bb1797];
    }

    bb1797: {
        _1256 = Le(copy _5, const 90_u8);
        switchInt(move _1256) -> [0: bb1798, otherwise: bb1801];
    }

    bb1798: {
        _1257 = Le(const 97_u8, copy _5);
        switchInt(move _1257) -> [0: bb1800, otherwise: bb1799];
    }

    bb1799: {
        _1258 = Le(copy _5, const 122_u8);
        switchInt(move _1258) -> [0: bb1800, otherwise: bb1801];
    }

    bb1800: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1801: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S132;
        goto -> bb1827;
    }

    bb1802: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1803: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1804: {
        _1259 = Le(const 48_u8, copy _5);
        switchInt(move _1259) -> [0: bb1806, otherwise: bb1805];
    }

    bb1805: {
        _1260 = Le(copy _5, const 57_u8);
        switchInt(move _1260) -> [0: bb1806, otherwise: bb1811];
    }

    bb1806: {
        _1261 = Le(const 65_u8, copy _5);
        switchInt(move _1261) -> [0: bb1808, otherwise: bb1807];
    }

    bb1807: {
        _1262 = Le(copy _5, const 90_u8);
        switchInt(move _1262) -> [0: bb1808, otherwise: bb1811];
    }

    bb1808: {
        _1263 = Le(const 97_u8, copy _5);
        switchInt(move _1263) -> [0: bb1810, otherwise: bb1809];
    }

    bb1809: {
        _1264 = Le(copy _5, const 122_u8);
        switchInt(move _1264) -> [0: bb1810, otherwise: bb1811];
    }

    bb1810: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1811: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S131;
        goto -> bb1812;
    }

    bb1812: {
        StorageLive(_1266);
        StorageLive(_1265);
        _1265 = copy _2;
        _1266 = Lt(move _1265, copy _4);
        switchInt(move _1266) -> [0: bb1813, otherwise: bb1814];
    }

    bb1813: {
        StorageDead(_1265);
        _5 = const 0_u8;
        goto -> bb1816;
    }

    bb1814: {
        StorageDead(_1265);
        StorageLive(_1268);
        StorageLive(_1267);
        _1267 = copy _2;
        _1268 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1267) -> [return: bb1815, unwind unreachable];
    }

    bb1815: {
        StorageDead(_1267);
        _5 = copy (*_1268);
        StorageDead(_1268);
        goto -> bb1816;
    }

    bb1816: {
        StorageDead(_1266);
        switchInt(copy _5) -> [46: bb1817, 62: bb1818, otherwise: bb1819];
    }

    bb1817: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1818: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1819: {
        _1269 = Le(const 48_u8, copy _5);
        switchInt(move _1269) -> [0: bb1821, otherwise: bb1820];
    }

    bb1820: {
        _1270 = Le(copy _5, const 57_u8);
        switchInt(move _1270) -> [0: bb1821, otherwise: bb1826];
    }

    bb1821: {
        _1271 = Le(const 65_u8, copy _5);
        switchInt(move _1271) -> [0: bb1823, otherwise: bb1822];
    }

    bb1822: {
        _1272 = Le(copy _5, const 90_u8);
        switchInt(move _1272) -> [0: bb1823, otherwise: bb1826];
    }

    bb1823: {
        _1273 = Le(const 97_u8, copy _5);
        switchInt(move _1273) -> [0: bb1825, otherwise: bb1824];
    }

    bb1824: {
        _1274 = Le(copy _5, const 122_u8);
        switchInt(move _1274) -> [0: bb1825, otherwise: bb1826];
    }

    bb1825: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1826: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S132;
        goto -> bb1827;
    }

    bb1827: {
        StorageLive(_1276);
        StorageLive(_1275);
        _1275 = copy _2;
        _1276 = Lt(move _1275, copy _4);
        switchInt(move _1276) -> [0: bb1828, otherwise: bb1829];
    }

    bb1828: {
        StorageDead(_1275);
        _5 = const 0_u8;
        goto -> bb1831;
    }

    bb1829: {
        StorageDead(_1275);
        StorageLive(_1278);
        StorageLive(_1277);
        _1277 = copy _2;
        _1278 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1277) -> [return: bb1830, unwind unreachable];
    }

    bb1830: {
        StorageDead(_1277);
        _5 = copy (*_1278);
        StorageDead(_1278);
        goto -> bb1831;
    }

    bb1831: {
        StorageDead(_1276);
        switchInt(copy _5) -> [46: bb1832, 62: bb1833, otherwise: bb1835];
    }

    bb1832: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb35;
    }

    bb1833: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1834;
    }

    bb1834: {
        _0 = Option::<usize>::Some(move _2);
        goto -> bb1849;
    }

    bb1835: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1836: {
        _1279 = Le(const 35_u8, copy _5);
        switchInt(move _1279) -> [0: bb1838, otherwise: bb1837];
    }

    bb1837: {
        _1280 = Le(copy _5, const 39_u8);
        switchInt(move _1280) -> [0: bb1838, otherwise: bb1850];
    }

    bb1838: {
        _1281 = Le(const 42_u8, copy _5);
        switchInt(move _1281) -> [0: bb1840, otherwise: bb1839];
    }

    bb1839: {
        _1282 = Le(copy _5, const 43_u8);
        switchInt(move _1282) -> [0: bb1840, otherwise: bb1850];
    }

    bb1840: {
        _1283 = Le(const 45_u8, copy _5);
        switchInt(move _1283) -> [0: bb1842, otherwise: bb1841];
    }

    bb1841: {
        _1284 = Le(copy _5, const 57_u8);
        switchInt(move _1284) -> [0: bb1842, otherwise: bb1850];
    }

    bb1842: {
        _1285 = Le(const 65_u8, copy _5);
        switchInt(move _1285) -> [0: bb1844, otherwise: bb1843];
    }

    bb1843: {
        _1286 = Le(copy _5, const 90_u8);
        switchInt(move _1286) -> [0: bb1844, otherwise: bb1850];
    }

    bb1844: {
        _1287 = Le(const 94_u8, copy _5);
        switchInt(move _1287) -> [0: bb1846, otherwise: bb1845];
    }

    bb1845: {
        _1288 = Le(copy _5, const 126_u8);
        switchInt(move _1288) -> [0: bb1846, otherwise: bb1850];
    }

    bb1846: {
        _6 = const State::S6;
        goto -> bb1847;
    }

    bb1847: {
        _2 = move _3;
        _6 = const State::S2;
        goto -> bb1848;
    }

    bb1848: {
        _0 = const Option::<usize>::Some(0_usize);
        goto -> bb1849;
    }

    bb1849: {
        return;
    }

    bb1850: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S4;
        StorageLive(_1290);
        StorageLive(_1289);
        _1289 = copy _2;
        _1290 = Lt(move _1289, copy _4);
        switchInt(move _1290) -> [0: bb1851, otherwise: bb1852];
    }

    bb1851: {
        StorageDead(_1289);
        _5 = const 0_u8;
        goto -> bb1854;
    }

    bb1852: {
        StorageDead(_1289);
        StorageLive(_1292);
        StorageLive(_1291);
        _1291 = copy _2;
        _1292 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1291) -> [return: bb1853, unwind unreachable];
    }

    bb1853: {
        StorageDead(_1291);
        _5 = copy (*_1292);
        StorageDead(_1292);
        goto -> bb1854;
    }

    bb1854: {
        StorageDead(_1290);
        _6 = const State::S5;
        goto -> bb33;
    }
}

ALLOC0 (size: 16, align: 8) {
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
}
