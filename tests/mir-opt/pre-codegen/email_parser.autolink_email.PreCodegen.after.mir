// MIR for `autolink_email` after PreCodegen

fn autolink_email(_1: &[u8]) -> Option<usize> {
    debug s => _1;
    let mut _0: std::option::Option<usize>;
    let mut _2: usize;
    let mut _3: usize;
    let mut _5: u8;
    let mut _6: State;
    let mut _7: isize;
    let mut _8: usize;
    let mut _9: bool;
    let mut _10: usize;
    let mut _11: &u8;
    let mut _12: bool;
    let mut _13: bool;
    let mut _14: bool;
    let mut _15: bool;
    let mut _16: bool;
    let mut _17: bool;
    let mut _18: bool;
    let mut _19: bool;
    let mut _20: bool;
    let mut _21: bool;
    let mut _22: usize;
    let mut _23: bool;
    let mut _24: usize;
    let mut _25: &u8;
    let mut _26: bool;
    let mut _27: bool;
    let mut _28: bool;
    let mut _29: bool;
    let mut _30: bool;
    let mut _31: bool;
    let mut _32: bool;
    let mut _33: bool;
    let mut _34: bool;
    let mut _35: bool;
    let mut _36: usize;
    let mut _37: bool;
    let mut _38: usize;
    let mut _39: &u8;
    let mut _40: bool;
    let mut _41: bool;
    let mut _42: bool;
    let mut _43: bool;
    let mut _44: bool;
    let mut _45: bool;
    let mut _46: bool;
    let mut _47: bool;
    let mut _48: bool;
    let mut _49: bool;
    let mut _50: usize;
    let mut _51: bool;
    let mut _52: usize;
    let mut _53: &u8;
    let mut _54: bool;
    let mut _55: bool;
    let mut _56: bool;
    let mut _57: bool;
    let mut _58: bool;
    let mut _59: bool;
    let mut _60: usize;
    let mut _61: bool;
    let mut _62: usize;
    let mut _63: &u8;
    let mut _64: bool;
    let mut _65: bool;
    let mut _66: bool;
    let mut _67: bool;
    let mut _68: bool;
    let mut _69: bool;
    let mut _70: usize;
    let mut _71: bool;
    let mut _72: usize;
    let mut _73: &u8;
    let mut _74: bool;
    let mut _75: bool;
    let mut _76: bool;
    let mut _77: bool;
    let mut _78: bool;
    let mut _79: bool;
    let mut _80: usize;
    let mut _81: bool;
    let mut _82: usize;
    let mut _83: &u8;
    let mut _84: bool;
    let mut _85: bool;
    let mut _86: bool;
    let mut _87: bool;
    let mut _88: bool;
    let mut _89: bool;
    let mut _90: usize;
    let mut _91: bool;
    let mut _92: usize;
    let mut _93: &u8;
    let mut _94: bool;
    let mut _95: bool;
    let mut _96: bool;
    let mut _97: bool;
    let mut _98: bool;
    let mut _99: bool;
    let mut _100: usize;
    let mut _101: bool;
    let mut _102: usize;
    let mut _103: &u8;
    let mut _104: bool;
    let mut _105: bool;
    let mut _106: bool;
    let mut _107: bool;
    let mut _108: bool;
    let mut _109: bool;
    let mut _110: usize;
    let mut _111: bool;
    let mut _112: usize;
    let mut _113: &u8;
    let mut _114: bool;
    let mut _115: bool;
    let mut _116: bool;
    let mut _117: bool;
    let mut _118: bool;
    let mut _119: bool;
    let mut _120: usize;
    let mut _121: bool;
    let mut _122: usize;
    let mut _123: &u8;
    let mut _124: bool;
    let mut _125: bool;
    let mut _126: bool;
    let mut _127: bool;
    let mut _128: bool;
    let mut _129: bool;
    let mut _130: usize;
    let mut _131: bool;
    let mut _132: usize;
    let mut _133: &u8;
    let mut _134: bool;
    let mut _135: bool;
    let mut _136: bool;
    let mut _137: bool;
    let mut _138: bool;
    let mut _139: bool;
    let mut _140: usize;
    let mut _141: bool;
    let mut _142: usize;
    let mut _143: &u8;
    let mut _144: bool;
    let mut _145: bool;
    let mut _146: bool;
    let mut _147: bool;
    let mut _148: bool;
    let mut _149: bool;
    let mut _150: usize;
    let mut _151: bool;
    let mut _152: usize;
    let mut _153: &u8;
    let mut _154: bool;
    let mut _155: bool;
    let mut _156: bool;
    let mut _157: bool;
    let mut _158: bool;
    let mut _159: bool;
    let mut _160: usize;
    let mut _161: bool;
    let mut _162: usize;
    let mut _163: &u8;
    let mut _164: bool;
    let mut _165: bool;
    let mut _166: bool;
    let mut _167: bool;
    let mut _168: bool;
    let mut _169: bool;
    let mut _170: usize;
    let mut _171: bool;
    let mut _172: usize;
    let mut _173: &u8;
    let mut _174: bool;
    let mut _175: bool;
    let mut _176: bool;
    let mut _177: bool;
    let mut _178: bool;
    let mut _179: bool;
    let mut _180: usize;
    let mut _181: bool;
    let mut _182: usize;
    let mut _183: &u8;
    let mut _184: bool;
    let mut _185: bool;
    let mut _186: bool;
    let mut _187: bool;
    let mut _188: bool;
    let mut _189: bool;
    let mut _190: usize;
    let mut _191: bool;
    let mut _192: usize;
    let mut _193: &u8;
    let mut _194: bool;
    let mut _195: bool;
    let mut _196: bool;
    let mut _197: bool;
    let mut _198: bool;
    let mut _199: bool;
    let mut _200: usize;
    let mut _201: bool;
    let mut _202: usize;
    let mut _203: &u8;
    let mut _204: bool;
    let mut _205: bool;
    let mut _206: bool;
    let mut _207: bool;
    let mut _208: bool;
    let mut _209: bool;
    let mut _210: usize;
    let mut _211: bool;
    let mut _212: usize;
    let mut _213: &u8;
    let mut _214: bool;
    let mut _215: bool;
    let mut _216: bool;
    let mut _217: bool;
    let mut _218: bool;
    let mut _219: bool;
    let mut _220: usize;
    let mut _221: bool;
    let mut _222: usize;
    let mut _223: &u8;
    let mut _224: bool;
    let mut _225: bool;
    let mut _226: bool;
    let mut _227: bool;
    let mut _228: bool;
    let mut _229: bool;
    let mut _230: usize;
    let mut _231: bool;
    let mut _232: usize;
    let mut _233: &u8;
    let mut _234: bool;
    let mut _235: bool;
    let mut _236: bool;
    let mut _237: bool;
    let mut _238: bool;
    let mut _239: bool;
    let mut _240: usize;
    let mut _241: bool;
    let mut _242: usize;
    let mut _243: &u8;
    let mut _244: bool;
    let mut _245: bool;
    let mut _246: bool;
    let mut _247: bool;
    let mut _248: bool;
    let mut _249: bool;
    let mut _250: usize;
    let mut _251: bool;
    let mut _252: usize;
    let mut _253: &u8;
    let mut _254: bool;
    let mut _255: bool;
    let mut _256: bool;
    let mut _257: bool;
    let mut _258: bool;
    let mut _259: bool;
    let mut _260: usize;
    let mut _261: bool;
    let mut _262: usize;
    let mut _263: &u8;
    let mut _264: bool;
    let mut _265: bool;
    let mut _266: bool;
    let mut _267: bool;
    let mut _268: bool;
    let mut _269: bool;
    let mut _270: usize;
    let mut _271: bool;
    let mut _272: usize;
    let mut _273: &u8;
    let mut _274: bool;
    let mut _275: bool;
    let mut _276: bool;
    let mut _277: bool;
    let mut _278: bool;
    let mut _279: bool;
    let mut _280: usize;
    let mut _281: bool;
    let mut _282: usize;
    let mut _283: &u8;
    let mut _284: bool;
    let mut _285: bool;
    let mut _286: bool;
    let mut _287: bool;
    let mut _288: bool;
    let mut _289: bool;
    let mut _290: usize;
    let mut _291: bool;
    let mut _292: usize;
    let mut _293: &u8;
    let mut _294: bool;
    let mut _295: bool;
    let mut _296: bool;
    let mut _297: bool;
    let mut _298: bool;
    let mut _299: bool;
    let mut _300: usize;
    let mut _301: bool;
    let mut _302: usize;
    let mut _303: &u8;
    let mut _304: bool;
    let mut _305: bool;
    let mut _306: bool;
    let mut _307: bool;
    let mut _308: bool;
    let mut _309: bool;
    let mut _310: usize;
    let mut _311: bool;
    let mut _312: usize;
    let mut _313: &u8;
    let mut _314: bool;
    let mut _315: bool;
    let mut _316: bool;
    let mut _317: bool;
    let mut _318: bool;
    let mut _319: bool;
    let mut _320: usize;
    let mut _321: bool;
    let mut _322: usize;
    let mut _323: &u8;
    let mut _324: bool;
    let mut _325: bool;
    let mut _326: bool;
    let mut _327: bool;
    let mut _328: bool;
    let mut _329: bool;
    let mut _330: usize;
    let mut _331: bool;
    let mut _332: usize;
    let mut _333: &u8;
    let mut _334: bool;
    let mut _335: bool;
    let mut _336: bool;
    let mut _337: bool;
    let mut _338: bool;
    let mut _339: bool;
    let mut _340: usize;
    let mut _341: bool;
    let mut _342: usize;
    let mut _343: &u8;
    let mut _344: bool;
    let mut _345: bool;
    let mut _346: bool;
    let mut _347: bool;
    let mut _348: bool;
    let mut _349: bool;
    let mut _350: usize;
    let mut _351: bool;
    let mut _352: usize;
    let mut _353: &u8;
    let mut _354: bool;
    let mut _355: bool;
    let mut _356: bool;
    let mut _357: bool;
    let mut _358: bool;
    let mut _359: bool;
    let mut _360: usize;
    let mut _361: bool;
    let mut _362: usize;
    let mut _363: &u8;
    let mut _364: bool;
    let mut _365: bool;
    let mut _366: bool;
    let mut _367: bool;
    let mut _368: bool;
    let mut _369: bool;
    let mut _370: usize;
    let mut _371: bool;
    let mut _372: usize;
    let mut _373: &u8;
    let mut _374: bool;
    let mut _375: bool;
    let mut _376: bool;
    let mut _377: bool;
    let mut _378: bool;
    let mut _379: bool;
    let mut _380: usize;
    let mut _381: bool;
    let mut _382: usize;
    let mut _383: &u8;
    let mut _384: bool;
    let mut _385: bool;
    let mut _386: bool;
    let mut _387: bool;
    let mut _388: bool;
    let mut _389: bool;
    let mut _390: usize;
    let mut _391: bool;
    let mut _392: usize;
    let mut _393: &u8;
    let mut _394: bool;
    let mut _395: bool;
    let mut _396: bool;
    let mut _397: bool;
    let mut _398: bool;
    let mut _399: bool;
    let mut _400: usize;
    let mut _401: bool;
    let mut _402: usize;
    let mut _403: &u8;
    let mut _404: bool;
    let mut _405: bool;
    let mut _406: bool;
    let mut _407: bool;
    let mut _408: bool;
    let mut _409: bool;
    let mut _410: usize;
    let mut _411: bool;
    let mut _412: usize;
    let mut _413: &u8;
    let mut _414: bool;
    let mut _415: bool;
    let mut _416: bool;
    let mut _417: bool;
    let mut _418: bool;
    let mut _419: bool;
    let mut _420: usize;
    let mut _421: bool;
    let mut _422: usize;
    let mut _423: &u8;
    let mut _424: bool;
    let mut _425: bool;
    let mut _426: bool;
    let mut _427: bool;
    let mut _428: bool;
    let mut _429: bool;
    let mut _430: usize;
    let mut _431: bool;
    let mut _432: usize;
    let mut _433: &u8;
    let mut _434: bool;
    let mut _435: bool;
    let mut _436: bool;
    let mut _437: bool;
    let mut _438: bool;
    let mut _439: bool;
    let mut _440: usize;
    let mut _441: bool;
    let mut _442: usize;
    let mut _443: &u8;
    let mut _444: bool;
    let mut _445: bool;
    let mut _446: bool;
    let mut _447: bool;
    let mut _448: bool;
    let mut _449: bool;
    let mut _450: usize;
    let mut _451: bool;
    let mut _452: usize;
    let mut _453: &u8;
    let mut _454: bool;
    let mut _455: bool;
    let mut _456: bool;
    let mut _457: bool;
    let mut _458: bool;
    let mut _459: bool;
    let mut _460: usize;
    let mut _461: bool;
    let mut _462: usize;
    let mut _463: &u8;
    let mut _464: bool;
    let mut _465: bool;
    let mut _466: bool;
    let mut _467: bool;
    let mut _468: bool;
    let mut _469: bool;
    let mut _470: usize;
    let mut _471: bool;
    let mut _472: usize;
    let mut _473: &u8;
    let mut _474: bool;
    let mut _475: bool;
    let mut _476: bool;
    let mut _477: bool;
    let mut _478: bool;
    let mut _479: bool;
    let mut _480: usize;
    let mut _481: bool;
    let mut _482: usize;
    let mut _483: &u8;
    let mut _484: bool;
    let mut _485: bool;
    let mut _486: bool;
    let mut _487: bool;
    let mut _488: bool;
    let mut _489: bool;
    let mut _490: usize;
    let mut _491: bool;
    let mut _492: usize;
    let mut _493: &u8;
    let mut _494: bool;
    let mut _495: bool;
    let mut _496: bool;
    let mut _497: bool;
    let mut _498: bool;
    let mut _499: bool;
    let mut _500: usize;
    let mut _501: bool;
    let mut _502: usize;
    let mut _503: &u8;
    let mut _504: bool;
    let mut _505: bool;
    let mut _506: bool;
    let mut _507: bool;
    let mut _508: bool;
    let mut _509: bool;
    let mut _510: usize;
    let mut _511: bool;
    let mut _512: usize;
    let mut _513: &u8;
    let mut _514: bool;
    let mut _515: bool;
    let mut _516: bool;
    let mut _517: bool;
    let mut _518: bool;
    let mut _519: bool;
    let mut _520: usize;
    let mut _521: bool;
    let mut _522: usize;
    let mut _523: &u8;
    let mut _524: bool;
    let mut _525: bool;
    let mut _526: bool;
    let mut _527: bool;
    let mut _528: bool;
    let mut _529: bool;
    let mut _530: usize;
    let mut _531: bool;
    let mut _532: usize;
    let mut _533: &u8;
    let mut _534: bool;
    let mut _535: bool;
    let mut _536: bool;
    let mut _537: bool;
    let mut _538: bool;
    let mut _539: bool;
    let mut _540: usize;
    let mut _541: bool;
    let mut _542: usize;
    let mut _543: &u8;
    let mut _544: bool;
    let mut _545: bool;
    let mut _546: bool;
    let mut _547: bool;
    let mut _548: bool;
    let mut _549: bool;
    let mut _550: usize;
    let mut _551: bool;
    let mut _552: usize;
    let mut _553: &u8;
    let mut _554: bool;
    let mut _555: bool;
    let mut _556: bool;
    let mut _557: bool;
    let mut _558: bool;
    let mut _559: bool;
    let mut _560: usize;
    let mut _561: bool;
    let mut _562: usize;
    let mut _563: &u8;
    let mut _564: bool;
    let mut _565: bool;
    let mut _566: bool;
    let mut _567: bool;
    let mut _568: bool;
    let mut _569: bool;
    let mut _570: usize;
    let mut _571: bool;
    let mut _572: usize;
    let mut _573: &u8;
    let mut _574: bool;
    let mut _575: bool;
    let mut _576: bool;
    let mut _577: bool;
    let mut _578: bool;
    let mut _579: bool;
    let mut _580: usize;
    let mut _581: bool;
    let mut _582: usize;
    let mut _583: &u8;
    let mut _584: bool;
    let mut _585: bool;
    let mut _586: bool;
    let mut _587: bool;
    let mut _588: bool;
    let mut _589: bool;
    let mut _590: usize;
    let mut _591: bool;
    let mut _592: usize;
    let mut _593: &u8;
    let mut _594: bool;
    let mut _595: bool;
    let mut _596: bool;
    let mut _597: bool;
    let mut _598: bool;
    let mut _599: bool;
    let mut _600: usize;
    let mut _601: bool;
    let mut _602: usize;
    let mut _603: &u8;
    let mut _604: bool;
    let mut _605: bool;
    let mut _606: bool;
    let mut _607: bool;
    let mut _608: bool;
    let mut _609: bool;
    let mut _610: usize;
    let mut _611: bool;
    let mut _612: usize;
    let mut _613: &u8;
    let mut _614: bool;
    let mut _615: bool;
    let mut _616: bool;
    let mut _617: bool;
    let mut _618: bool;
    let mut _619: bool;
    let mut _620: usize;
    let mut _621: bool;
    let mut _622: usize;
    let mut _623: &u8;
    let mut _624: bool;
    let mut _625: bool;
    let mut _626: bool;
    let mut _627: bool;
    let mut _628: bool;
    let mut _629: bool;
    let mut _630: usize;
    let mut _631: bool;
    let mut _632: usize;
    let mut _633: &u8;
    let mut _634: bool;
    let mut _635: bool;
    let mut _636: bool;
    let mut _637: bool;
    let mut _638: bool;
    let mut _639: bool;
    let mut _640: usize;
    let mut _641: bool;
    let mut _642: usize;
    let mut _643: &u8;
    let mut _644: bool;
    let mut _645: bool;
    let mut _646: bool;
    let mut _647: bool;
    let mut _648: bool;
    let mut _649: bool;
    let mut _650: usize;
    let mut _651: bool;
    let mut _652: usize;
    let mut _653: &u8;
    let mut _654: bool;
    let mut _655: bool;
    let mut _656: bool;
    let mut _657: bool;
    let mut _658: bool;
    let mut _659: bool;
    let mut _660: usize;
    let mut _661: bool;
    let mut _662: usize;
    let mut _663: &u8;
    let mut _664: bool;
    let mut _665: bool;
    let mut _666: bool;
    let mut _667: bool;
    let mut _668: bool;
    let mut _669: bool;
    let mut _670: usize;
    let mut _671: bool;
    let mut _672: usize;
    let mut _673: &u8;
    let mut _674: bool;
    let mut _675: bool;
    let mut _676: bool;
    let mut _677: bool;
    let mut _678: bool;
    let mut _679: bool;
    let mut _680: usize;
    let mut _681: bool;
    let mut _682: usize;
    let mut _683: &u8;
    let mut _684: bool;
    let mut _685: bool;
    let mut _686: bool;
    let mut _687: bool;
    let mut _688: bool;
    let mut _689: bool;
    let mut _690: usize;
    let mut _691: bool;
    let mut _692: usize;
    let mut _693: &u8;
    let mut _694: bool;
    let mut _695: bool;
    let mut _696: bool;
    let mut _697: bool;
    let mut _698: bool;
    let mut _699: bool;
    let mut _700: usize;
    let mut _701: bool;
    let mut _702: usize;
    let mut _703: &u8;
    let mut _704: bool;
    let mut _705: bool;
    let mut _706: bool;
    let mut _707: bool;
    let mut _708: bool;
    let mut _709: bool;
    let mut _710: usize;
    let mut _711: bool;
    let mut _712: usize;
    let mut _713: &u8;
    let mut _714: bool;
    let mut _715: bool;
    let mut _716: bool;
    let mut _717: bool;
    let mut _718: bool;
    let mut _719: bool;
    let mut _720: usize;
    let mut _721: bool;
    let mut _722: usize;
    let mut _723: &u8;
    let mut _724: bool;
    let mut _725: bool;
    let mut _726: bool;
    let mut _727: bool;
    let mut _728: bool;
    let mut _729: bool;
    let mut _730: usize;
    let mut _731: bool;
    let mut _732: usize;
    let mut _733: &u8;
    let mut _734: bool;
    let mut _735: bool;
    let mut _736: bool;
    let mut _737: bool;
    let mut _738: bool;
    let mut _739: bool;
    let mut _740: usize;
    let mut _741: bool;
    let mut _742: usize;
    let mut _743: &u8;
    let mut _744: bool;
    let mut _745: bool;
    let mut _746: bool;
    let mut _747: bool;
    let mut _748: bool;
    let mut _749: bool;
    let mut _750: usize;
    let mut _751: bool;
    let mut _752: usize;
    let mut _753: &u8;
    let mut _754: bool;
    let mut _755: bool;
    let mut _756: bool;
    let mut _757: bool;
    let mut _758: bool;
    let mut _759: bool;
    let mut _760: usize;
    let mut _761: bool;
    let mut _762: usize;
    let mut _763: &u8;
    let mut _764: bool;
    let mut _765: bool;
    let mut _766: bool;
    let mut _767: bool;
    let mut _768: bool;
    let mut _769: bool;
    let mut _770: usize;
    let mut _771: bool;
    let mut _772: usize;
    let mut _773: &u8;
    let mut _774: bool;
    let mut _775: bool;
    let mut _776: bool;
    let mut _777: bool;
    let mut _778: bool;
    let mut _779: bool;
    let mut _780: usize;
    let mut _781: bool;
    let mut _782: usize;
    let mut _783: &u8;
    let mut _784: bool;
    let mut _785: bool;
    let mut _786: bool;
    let mut _787: bool;
    let mut _788: bool;
    let mut _789: bool;
    let mut _790: usize;
    let mut _791: bool;
    let mut _792: usize;
    let mut _793: &u8;
    let mut _794: bool;
    let mut _795: bool;
    let mut _796: bool;
    let mut _797: bool;
    let mut _798: bool;
    let mut _799: bool;
    let mut _800: usize;
    let mut _801: bool;
    let mut _802: usize;
    let mut _803: &u8;
    let mut _804: bool;
    let mut _805: bool;
    let mut _806: bool;
    let mut _807: bool;
    let mut _808: bool;
    let mut _809: bool;
    let mut _810: usize;
    let mut _811: bool;
    let mut _812: usize;
    let mut _813: &u8;
    let mut _814: bool;
    let mut _815: bool;
    let mut _816: bool;
    let mut _817: bool;
    let mut _818: bool;
    let mut _819: bool;
    let mut _820: usize;
    let mut _821: bool;
    let mut _822: usize;
    let mut _823: &u8;
    let mut _824: bool;
    let mut _825: bool;
    let mut _826: bool;
    let mut _827: bool;
    let mut _828: bool;
    let mut _829: bool;
    let mut _830: usize;
    let mut _831: bool;
    let mut _832: usize;
    let mut _833: &u8;
    let mut _834: bool;
    let mut _835: bool;
    let mut _836: bool;
    let mut _837: bool;
    let mut _838: bool;
    let mut _839: bool;
    let mut _840: usize;
    let mut _841: bool;
    let mut _842: usize;
    let mut _843: &u8;
    let mut _844: bool;
    let mut _845: bool;
    let mut _846: bool;
    let mut _847: bool;
    let mut _848: bool;
    let mut _849: bool;
    let mut _850: usize;
    let mut _851: bool;
    let mut _852: usize;
    let mut _853: &u8;
    let mut _854: bool;
    let mut _855: bool;
    let mut _856: bool;
    let mut _857: bool;
    let mut _858: bool;
    let mut _859: bool;
    let mut _860: usize;
    let mut _861: bool;
    let mut _862: usize;
    let mut _863: &u8;
    let mut _864: bool;
    let mut _865: bool;
    let mut _866: bool;
    let mut _867: bool;
    let mut _868: bool;
    let mut _869: bool;
    let mut _870: usize;
    let mut _871: bool;
    let mut _872: usize;
    let mut _873: &u8;
    let mut _874: bool;
    let mut _875: bool;
    let mut _876: bool;
    let mut _877: bool;
    let mut _878: bool;
    let mut _879: bool;
    let mut _880: usize;
    let mut _881: bool;
    let mut _882: usize;
    let mut _883: &u8;
    let mut _884: bool;
    let mut _885: bool;
    let mut _886: bool;
    let mut _887: bool;
    let mut _888: bool;
    let mut _889: bool;
    let mut _890: usize;
    let mut _891: bool;
    let mut _892: usize;
    let mut _893: &u8;
    let mut _894: bool;
    let mut _895: bool;
    let mut _896: bool;
    let mut _897: bool;
    let mut _898: bool;
    let mut _899: bool;
    let mut _900: usize;
    let mut _901: bool;
    let mut _902: usize;
    let mut _903: &u8;
    let mut _904: bool;
    let mut _905: bool;
    let mut _906: bool;
    let mut _907: bool;
    let mut _908: bool;
    let mut _909: bool;
    let mut _910: usize;
    let mut _911: bool;
    let mut _912: usize;
    let mut _913: &u8;
    let mut _914: bool;
    let mut _915: bool;
    let mut _916: bool;
    let mut _917: bool;
    let mut _918: bool;
    let mut _919: bool;
    let mut _920: usize;
    let mut _921: bool;
    let mut _922: usize;
    let mut _923: &u8;
    let mut _924: bool;
    let mut _925: bool;
    let mut _926: bool;
    let mut _927: bool;
    let mut _928: bool;
    let mut _929: bool;
    let mut _930: usize;
    let mut _931: bool;
    let mut _932: usize;
    let mut _933: &u8;
    let mut _934: bool;
    let mut _935: bool;
    let mut _936: bool;
    let mut _937: bool;
    let mut _938: bool;
    let mut _939: bool;
    let mut _940: usize;
    let mut _941: bool;
    let mut _942: usize;
    let mut _943: &u8;
    let mut _944: bool;
    let mut _945: bool;
    let mut _946: bool;
    let mut _947: bool;
    let mut _948: bool;
    let mut _949: bool;
    let mut _950: usize;
    let mut _951: bool;
    let mut _952: usize;
    let mut _953: &u8;
    let mut _954: bool;
    let mut _955: bool;
    let mut _956: bool;
    let mut _957: bool;
    let mut _958: bool;
    let mut _959: bool;
    let mut _960: usize;
    let mut _961: bool;
    let mut _962: usize;
    let mut _963: &u8;
    let mut _964: bool;
    let mut _965: bool;
    let mut _966: bool;
    let mut _967: bool;
    let mut _968: bool;
    let mut _969: bool;
    let mut _970: usize;
    let mut _971: bool;
    let mut _972: usize;
    let mut _973: &u8;
    let mut _974: bool;
    let mut _975: bool;
    let mut _976: bool;
    let mut _977: bool;
    let mut _978: bool;
    let mut _979: bool;
    let mut _980: usize;
    let mut _981: bool;
    let mut _982: usize;
    let mut _983: &u8;
    let mut _984: bool;
    let mut _985: bool;
    let mut _986: bool;
    let mut _987: bool;
    let mut _988: bool;
    let mut _989: bool;
    let mut _990: usize;
    let mut _991: bool;
    let mut _992: usize;
    let mut _993: &u8;
    let mut _994: bool;
    let mut _995: bool;
    let mut _996: bool;
    let mut _997: bool;
    let mut _998: bool;
    let mut _999: bool;
    let mut _1000: usize;
    let mut _1001: bool;
    let mut _1002: usize;
    let mut _1003: &u8;
    let mut _1004: bool;
    let mut _1005: bool;
    let mut _1006: bool;
    let mut _1007: bool;
    let mut _1008: bool;
    let mut _1009: bool;
    let mut _1010: usize;
    let mut _1011: bool;
    let mut _1012: usize;
    let mut _1013: &u8;
    let mut _1014: bool;
    let mut _1015: bool;
    let mut _1016: bool;
    let mut _1017: bool;
    let mut _1018: bool;
    let mut _1019: bool;
    let mut _1020: usize;
    let mut _1021: bool;
    let mut _1022: usize;
    let mut _1023: &u8;
    let mut _1024: bool;
    let mut _1025: bool;
    let mut _1026: bool;
    let mut _1027: bool;
    let mut _1028: bool;
    let mut _1029: bool;
    let mut _1030: usize;
    let mut _1031: bool;
    let mut _1032: usize;
    let mut _1033: &u8;
    let mut _1034: bool;
    let mut _1035: bool;
    let mut _1036: bool;
    let mut _1037: bool;
    let mut _1038: bool;
    let mut _1039: bool;
    let mut _1040: usize;
    let mut _1041: bool;
    let mut _1042: usize;
    let mut _1043: &u8;
    let mut _1044: bool;
    let mut _1045: bool;
    let mut _1046: bool;
    let mut _1047: bool;
    let mut _1048: bool;
    let mut _1049: bool;
    let mut _1050: usize;
    let mut _1051: bool;
    let mut _1052: usize;
    let mut _1053: &u8;
    let mut _1054: bool;
    let mut _1055: bool;
    let mut _1056: bool;
    let mut _1057: bool;
    let mut _1058: bool;
    let mut _1059: bool;
    let mut _1060: usize;
    let mut _1061: bool;
    let mut _1062: usize;
    let mut _1063: &u8;
    let mut _1064: bool;
    let mut _1065: bool;
    let mut _1066: bool;
    let mut _1067: bool;
    let mut _1068: bool;
    let mut _1069: bool;
    let mut _1070: usize;
    let mut _1071: bool;
    let mut _1072: usize;
    let mut _1073: &u8;
    let mut _1074: bool;
    let mut _1075: bool;
    let mut _1076: bool;
    let mut _1077: bool;
    let mut _1078: bool;
    let mut _1079: bool;
    let mut _1080: usize;
    let mut _1081: bool;
    let mut _1082: usize;
    let mut _1083: &u8;
    let mut _1084: bool;
    let mut _1085: bool;
    let mut _1086: bool;
    let mut _1087: bool;
    let mut _1088: bool;
    let mut _1089: bool;
    let mut _1090: usize;
    let mut _1091: bool;
    let mut _1092: usize;
    let mut _1093: &u8;
    let mut _1094: bool;
    let mut _1095: bool;
    let mut _1096: bool;
    let mut _1097: bool;
    let mut _1098: bool;
    let mut _1099: bool;
    let mut _1100: usize;
    let mut _1101: bool;
    let mut _1102: usize;
    let mut _1103: &u8;
    let mut _1104: bool;
    let mut _1105: bool;
    let mut _1106: bool;
    let mut _1107: bool;
    let mut _1108: bool;
    let mut _1109: bool;
    let mut _1110: usize;
    let mut _1111: bool;
    let mut _1112: usize;
    let mut _1113: &u8;
    let mut _1114: bool;
    let mut _1115: bool;
    let mut _1116: bool;
    let mut _1117: bool;
    let mut _1118: bool;
    let mut _1119: bool;
    let mut _1120: usize;
    let mut _1121: bool;
    let mut _1122: usize;
    let mut _1123: &u8;
    let mut _1124: bool;
    let mut _1125: bool;
    let mut _1126: bool;
    let mut _1127: bool;
    let mut _1128: bool;
    let mut _1129: bool;
    let mut _1130: usize;
    let mut _1131: bool;
    let mut _1132: usize;
    let mut _1133: &u8;
    let mut _1134: bool;
    let mut _1135: bool;
    let mut _1136: bool;
    let mut _1137: bool;
    let mut _1138: bool;
    let mut _1139: bool;
    let mut _1140: usize;
    let mut _1141: bool;
    let mut _1142: usize;
    let mut _1143: &u8;
    let mut _1144: bool;
    let mut _1145: bool;
    let mut _1146: bool;
    let mut _1147: bool;
    let mut _1148: bool;
    let mut _1149: bool;
    let mut _1150: usize;
    let mut _1151: bool;
    let mut _1152: usize;
    let mut _1153: &u8;
    let mut _1154: bool;
    let mut _1155: bool;
    let mut _1156: bool;
    let mut _1157: bool;
    let mut _1158: bool;
    let mut _1159: bool;
    let mut _1160: usize;
    let mut _1161: bool;
    let mut _1162: usize;
    let mut _1163: &u8;
    let mut _1164: bool;
    let mut _1165: bool;
    let mut _1166: bool;
    let mut _1167: bool;
    let mut _1168: bool;
    let mut _1169: bool;
    let mut _1170: usize;
    let mut _1171: bool;
    let mut _1172: usize;
    let mut _1173: &u8;
    let mut _1174: bool;
    let mut _1175: bool;
    let mut _1176: bool;
    let mut _1177: bool;
    let mut _1178: bool;
    let mut _1179: bool;
    let mut _1180: usize;
    let mut _1181: bool;
    let mut _1182: usize;
    let mut _1183: &u8;
    let mut _1184: bool;
    let mut _1185: bool;
    let mut _1186: bool;
    let mut _1187: bool;
    let mut _1188: bool;
    let mut _1189: bool;
    let mut _1190: usize;
    let mut _1191: bool;
    let mut _1192: usize;
    let mut _1193: &u8;
    let mut _1194: bool;
    let mut _1195: bool;
    let mut _1196: bool;
    let mut _1197: bool;
    let mut _1198: bool;
    let mut _1199: bool;
    let mut _1200: usize;
    let mut _1201: bool;
    let mut _1202: usize;
    let mut _1203: &u8;
    let mut _1204: bool;
    let mut _1205: bool;
    let mut _1206: bool;
    let mut _1207: bool;
    let mut _1208: bool;
    let mut _1209: bool;
    let mut _1210: usize;
    let mut _1211: bool;
    let mut _1212: usize;
    let mut _1213: &u8;
    let mut _1214: bool;
    let mut _1215: bool;
    let mut _1216: bool;
    let mut _1217: bool;
    let mut _1218: bool;
    let mut _1219: bool;
    let mut _1220: usize;
    let mut _1221: bool;
    let mut _1222: usize;
    let mut _1223: &u8;
    let mut _1224: bool;
    let mut _1225: bool;
    let mut _1226: bool;
    let mut _1227: bool;
    let mut _1228: bool;
    let mut _1229: bool;
    let mut _1230: usize;
    let mut _1231: bool;
    let mut _1232: usize;
    let mut _1233: &u8;
    let mut _1234: bool;
    let mut _1235: bool;
    let mut _1236: bool;
    let mut _1237: bool;
    let mut _1238: bool;
    let mut _1239: bool;
    let mut _1240: usize;
    let mut _1241: bool;
    let mut _1242: usize;
    let mut _1243: &u8;
    let mut _1244: bool;
    let mut _1245: bool;
    let mut _1246: bool;
    let mut _1247: bool;
    let mut _1248: bool;
    let mut _1249: bool;
    let mut _1250: usize;
    let mut _1251: bool;
    let mut _1252: usize;
    let mut _1253: &u8;
    let mut _1254: bool;
    let mut _1255: bool;
    let mut _1256: bool;
    let mut _1257: bool;
    let mut _1258: bool;
    let mut _1259: bool;
    let mut _1260: usize;
    let mut _1261: bool;
    let mut _1262: usize;
    let mut _1263: &u8;
    let mut _1264: bool;
    let mut _1265: bool;
    let mut _1266: bool;
    let mut _1267: bool;
    let mut _1268: bool;
    let mut _1269: bool;
    let mut _1270: usize;
    let mut _1271: bool;
    let mut _1272: usize;
    let mut _1273: &u8;
    let mut _1274: bool;
    let mut _1275: bool;
    let mut _1276: bool;
    let mut _1277: bool;
    let mut _1278: bool;
    let mut _1279: bool;
    let mut _1280: usize;
    let mut _1281: bool;
    let mut _1282: usize;
    let mut _1283: &u8;
    let mut _1284: bool;
    let mut _1285: bool;
    let mut _1286: bool;
    let mut _1287: bool;
    let mut _1288: bool;
    let mut _1289: bool;
    let mut _1290: usize;
    let mut _1291: bool;
    let mut _1292: usize;
    let mut _1293: &u8;
    scope 1 {
        debug cursor => _2;
        scope 2 {
            debug marker => _3;
            let _4: usize;
            scope 3 {
                debug len => _4;
                scope 4 {
                    debug yych => _5;
                    scope 6 {
                        debug yystate => _6;
                    }
                }
                scope 5 {
                }
            }
        }
    }

    bb0: {
        _2 = const 0_usize;
        _3 = const 0_usize;
        _4 = PtrMetadata(copy _1);
        _5 = const 0_u8;
        _6 = const State::S0;
        goto -> bb1;
    }

    bb1: {
        _7 = discriminant(_6);
        switchInt(move _7) -> [0: bb2, 1: bb19, 2: bb20, 3: bb21, 4: bb38, 5: bb43, 6: bb57, 7: bb58, 8: bb70, 9: bb86, 10: bb99, 11: bb115, 12: bb117, 13: bb130, 14: bb146, 15: bb160, 16: bb176, 17: bb190, 18: bb206, 19: bb220, 20: bb236, 21: bb250, 22: bb266, 23: bb280, 24: bb296, 25: bb310, 26: bb326, 27: bb340, 28: bb356, 29: bb370, 30: bb386, 31: bb400, 32: bb416, 33: bb430, 34: bb446, 35: bb460, 36: bb476, 37: bb490, 38: bb506, 39: bb520, 40: bb536, 41: bb550, 42: bb566, 43: bb580, 44: bb596, 45: bb610, 46: bb626, 47: bb640, 48: bb656, 49: bb670, 50: bb686, 51: bb700, 52: bb716, 53: bb730, 54: bb746, 55: bb760, 56: bb776, 57: bb790, 58: bb806, 59: bb820, 60: bb836, 61: bb850, 62: bb866, 63: bb880, 64: bb896, 65: bb910, 66: bb926, 67: bb940, 68: bb956, 69: bb970, 70: bb986, 71: bb1000, 72: bb1016, 73: bb1030, 74: bb1046, 75: bb1060, 76: bb1076, 77: bb1090, 78: bb1106, 79: bb1120, 80: bb1136, 81: bb1150, 82: bb1166, 83: bb1180, 84: bb1196, 85: bb1210, 86: bb1226, 87: bb1240, 88: bb1256, 89: bb1270, 90: bb1286, 91: bb1300, 92: bb1316, 93: bb1330, 94: bb1346, 95: bb1360, 96: bb1376, 97: bb1390, 98: bb1406, 99: bb1420, 100: bb1436, 101: bb1450, 102: bb1466, 103: bb1480, 104: bb1496, 105: bb1510, 106: bb1526, 107: bb1540, 108: bb1556, 109: bb1570, 110: bb1586, 111: bb1600, 112: bb1616, 113: bb1630, 114: bb1646, 115: bb1660, 116: bb1676, 117: bb1690, 118: bb1706, 119: bb1720, 120: bb1736, 121: bb1750, 122: bb1766, 123: bb1780, 124: bb1796, 125: bb1810, 126: bb1826, 127: bb1840, 128: bb1856, 129: bb1870, 130: bb1886, 131: bb1898, 132: bb1913, otherwise: bb1922];
    }

    bb2: {
        StorageLive(_9);
        StorageLive(_8);
        _8 = copy _2;
        _9 = Lt(move _8, copy _4);
        switchInt(move _9) -> [0: bb3, otherwise: bb4];
    }

    bb3: {
        StorageDead(_8);
        _5 = const 0_u8;
        goto -> bb6;
    }

    bb4: {
        StorageDead(_8);
        StorageLive(_11);
        StorageLive(_10);
        _10 = copy _2;
        _11 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _10) -> [return: bb5, unwind unreachable];
    }

    bb5: {
        StorageDead(_10);
        _5 = copy (*_11);
        StorageDead(_11);
        goto -> bb6;
    }

    bb6: {
        StorageDead(_9);
        _2 = Add(copy _2, const 1_usize);
        switchInt(copy _5) -> [33: bb18, 61: bb18, 63: bb18, otherwise: bb7];
    }

    bb7: {
        _12 = Le(const 35_u8, copy _5);
        switchInt(move _12) -> [0: bb9, otherwise: bb8];
    }

    bb8: {
        _13 = Le(copy _5, const 39_u8);
        switchInt(move _13) -> [0: bb9, otherwise: bb18];
    }

    bb9: {
        _14 = Le(const 42_u8, copy _5);
        switchInt(move _14) -> [0: bb11, otherwise: bb10];
    }

    bb10: {
        _15 = Le(copy _5, const 43_u8);
        switchInt(move _15) -> [0: bb11, otherwise: bb18];
    }

    bb11: {
        _16 = Le(const 45_u8, copy _5);
        switchInt(move _16) -> [0: bb13, otherwise: bb12];
    }

    bb12: {
        _17 = Le(copy _5, const 57_u8);
        switchInt(move _17) -> [0: bb13, otherwise: bb18];
    }

    bb13: {
        _18 = Le(const 65_u8, copy _5);
        switchInt(move _18) -> [0: bb15, otherwise: bb14];
    }

    bb14: {
        _19 = Le(copy _5, const 90_u8);
        switchInt(move _19) -> [0: bb15, otherwise: bb18];
    }

    bb15: {
        _20 = Le(const 94_u8, copy _5);
        switchInt(move _20) -> [0: bb17, otherwise: bb16];
    }

    bb16: {
        _21 = Le(copy _5, const 126_u8);
        switchInt(move _21) -> [0: bb17, otherwise: bb18];
    }

    bb17: {
        _6 = const State::S1;
        goto -> bb1921;
    }

    bb18: {
        _6 = const State::S3;
        goto -> bb1921;
    }

    bb19: {
        _6 = const State::S2;
        goto -> bb1921;
    }

    bb20: {
        _0 = const Option::<usize>::Some(0_usize);
        goto -> bb116;
    }

    bb21: {
        _3 = copy _2;
        StorageLive(_23);
        StorageLive(_22);
        _22 = copy _2;
        _23 = Lt(move _22, copy _4);
        switchInt(move _23) -> [0: bb22, otherwise: bb23];
    }

    bb22: {
        StorageDead(_22);
        _5 = const 0_u8;
        goto -> bb25;
    }

    bb23: {
        StorageDead(_22);
        StorageLive(_25);
        StorageLive(_24);
        _24 = copy _2;
        _25 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _24) -> [return: bb24, unwind unreachable];
    }

    bb24: {
        StorageDead(_24);
        _5 = copy (*_25);
        StorageDead(_25);
        goto -> bb25;
    }

    bb25: {
        StorageDead(_23);
        switchInt(copy _5) -> [33: bb37, 61: bb37, otherwise: bb26];
    }

    bb26: {
        _26 = Le(const 35_u8, copy _5);
        switchInt(move _26) -> [0: bb28, otherwise: bb27];
    }

    bb27: {
        _27 = Le(copy _5, const 39_u8);
        switchInt(move _27) -> [0: bb28, otherwise: bb37];
    }

    bb28: {
        _28 = Le(const 42_u8, copy _5);
        switchInt(move _28) -> [0: bb30, otherwise: bb29];
    }

    bb29: {
        _29 = Le(copy _5, const 43_u8);
        switchInt(move _29) -> [0: bb30, otherwise: bb37];
    }

    bb30: {
        _30 = Le(const 45_u8, copy _5);
        switchInt(move _30) -> [0: bb32, otherwise: bb31];
    }

    bb31: {
        _31 = Le(copy _5, const 57_u8);
        switchInt(move _31) -> [0: bb32, otherwise: bb37];
    }

    bb32: {
        _32 = Le(const 63_u8, copy _5);
        switchInt(move _32) -> [0: bb34, otherwise: bb33];
    }

    bb33: {
        _33 = Le(copy _5, const 90_u8);
        switchInt(move _33) -> [0: bb34, otherwise: bb37];
    }

    bb34: {
        _34 = Le(const 94_u8, copy _5);
        switchInt(move _34) -> [0: bb36, otherwise: bb35];
    }

    bb35: {
        _35 = Le(copy _5, const 126_u8);
        switchInt(move _35) -> [0: bb36, otherwise: bb37];
    }

    bb36: {
        _6 = const State::S2;
        goto -> bb1921;
    }

    bb37: {
        _6 = const State::S5;
        goto -> bb1921;
    }

    bb38: {
        StorageLive(_37);
        StorageLive(_36);
        _36 = copy _2;
        _37 = Lt(move _36, copy _4);
        switchInt(move _37) -> [0: bb39, otherwise: bb40];
    }

    bb39: {
        StorageDead(_36);
        _5 = const 0_u8;
        goto -> bb42;
    }

    bb40: {
        StorageDead(_36);
        StorageLive(_39);
        StorageLive(_38);
        _38 = copy _2;
        _39 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _38) -> [return: bb41, unwind unreachable];
    }

    bb41: {
        StorageDead(_38);
        _5 = copy (*_39);
        StorageDead(_39);
        goto -> bb42;
    }

    bb42: {
        StorageDead(_37);
        _6 = const State::S5;
        goto -> bb1921;
    }

    bb43: {
        switchInt(copy _5) -> [33: bb56, 61: bb56, 63: bb56, 64: bb44, otherwise: bb45];
    }

    bb44: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb45: {
        _40 = Le(const 35_u8, copy _5);
        switchInt(move _40) -> [0: bb47, otherwise: bb46];
    }

    bb46: {
        _41 = Le(copy _5, const 39_u8);
        switchInt(move _41) -> [0: bb47, otherwise: bb56];
    }

    bb47: {
        _42 = Le(const 42_u8, copy _5);
        switchInt(move _42) -> [0: bb49, otherwise: bb48];
    }

    bb48: {
        _43 = Le(copy _5, const 43_u8);
        switchInt(move _43) -> [0: bb49, otherwise: bb56];
    }

    bb49: {
        _44 = Le(const 45_u8, copy _5);
        switchInt(move _44) -> [0: bb51, otherwise: bb50];
    }

    bb50: {
        _45 = Le(copy _5, const 57_u8);
        switchInt(move _45) -> [0: bb51, otherwise: bb56];
    }

    bb51: {
        _46 = Le(const 65_u8, copy _5);
        switchInt(move _46) -> [0: bb53, otherwise: bb52];
    }

    bb52: {
        _47 = Le(copy _5, const 90_u8);
        switchInt(move _47) -> [0: bb53, otherwise: bb56];
    }

    bb53: {
        _48 = Le(const 94_u8, copy _5);
        switchInt(move _48) -> [0: bb55, otherwise: bb54];
    }

    bb54: {
        _49 = Le(copy _5, const 126_u8);
        switchInt(move _49) -> [0: bb55, otherwise: bb56];
    }

    bb55: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb56: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S4;
        goto -> bb1921;
    }

    bb57: {
        _2 = copy _3;
        _6 = const State::S2;
        goto -> bb1921;
    }

    bb58: {
        StorageLive(_51);
        StorageLive(_50);
        _50 = copy _2;
        _51 = Lt(move _50, copy _4);
        switchInt(move _51) -> [0: bb59, otherwise: bb60];
    }

    bb59: {
        StorageDead(_50);
        _5 = const 0_u8;
        goto -> bb62;
    }

    bb60: {
        StorageDead(_50);
        StorageLive(_53);
        StorageLive(_52);
        _52 = copy _2;
        _53 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _52) -> [return: bb61, unwind unreachable];
    }

    bb61: {
        StorageDead(_52);
        _5 = copy (*_53);
        StorageDead(_53);
        goto -> bb62;
    }

    bb62: {
        StorageDead(_51);
        _54 = Le(const 48_u8, copy _5);
        switchInt(move _54) -> [0: bb64, otherwise: bb63];
    }

    bb63: {
        _55 = Le(copy _5, const 57_u8);
        switchInt(move _55) -> [0: bb64, otherwise: bb69];
    }

    bb64: {
        _56 = Le(const 65_u8, copy _5);
        switchInt(move _56) -> [0: bb66, otherwise: bb65];
    }

    bb65: {
        _57 = Le(copy _5, const 90_u8);
        switchInt(move _57) -> [0: bb66, otherwise: bb69];
    }

    bb66: {
        _58 = Le(const 97_u8, copy _5);
        switchInt(move _58) -> [0: bb68, otherwise: bb67];
    }

    bb67: {
        _59 = Le(copy _5, const 122_u8);
        switchInt(move _59) -> [0: bb68, otherwise: bb69];
    }

    bb68: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb69: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S8;
        goto -> bb1921;
    }

    bb70: {
        StorageLive(_61);
        StorageLive(_60);
        _60 = copy _2;
        _61 = Lt(move _60, copy _4);
        switchInt(move _61) -> [0: bb71, otherwise: bb72];
    }

    bb71: {
        StorageDead(_60);
        _5 = const 0_u8;
        goto -> bb74;
    }

    bb72: {
        StorageDead(_60);
        StorageLive(_63);
        StorageLive(_62);
        _62 = copy _2;
        _63 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _62) -> [return: bb73, unwind unreachable];
    }

    bb73: {
        StorageDead(_62);
        _5 = copy (*_63);
        StorageDead(_63);
        goto -> bb74;
    }

    bb74: {
        StorageDead(_61);
        switchInt(copy _5) -> [45: bb75, 46: bb76, 62: bb77, otherwise: bb78];
    }

    bb75: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S9;
        goto -> bb1921;
    }

    bb76: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb77: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb78: {
        _64 = Le(const 48_u8, copy _5);
        switchInt(move _64) -> [0: bb80, otherwise: bb79];
    }

    bb79: {
        _65 = Le(copy _5, const 57_u8);
        switchInt(move _65) -> [0: bb80, otherwise: bb85];
    }

    bb80: {
        _66 = Le(const 65_u8, copy _5);
        switchInt(move _66) -> [0: bb82, otherwise: bb81];
    }

    bb81: {
        _67 = Le(copy _5, const 90_u8);
        switchInt(move _67) -> [0: bb82, otherwise: bb85];
    }

    bb82: {
        _68 = Le(const 97_u8, copy _5);
        switchInt(move _68) -> [0: bb84, otherwise: bb83];
    }

    bb83: {
        _69 = Le(copy _5, const 122_u8);
        switchInt(move _69) -> [0: bb84, otherwise: bb85];
    }

    bb84: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb85: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S10;
        goto -> bb1921;
    }

    bb86: {
        StorageLive(_71);
        StorageLive(_70);
        _70 = copy _2;
        _71 = Lt(move _70, copy _4);
        switchInt(move _71) -> [0: bb87, otherwise: bb88];
    }

    bb87: {
        StorageDead(_70);
        _5 = const 0_u8;
        StorageDead(_71);
        goto -> bb91;
    }

    bb88: {
        StorageDead(_70);
        StorageLive(_73);
        StorageLive(_72);
        _72 = copy _2;
        _73 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _72) -> [return: bb89, unwind unreachable];
    }

    bb89: {
        StorageDead(_72);
        _5 = copy (*_73);
        StorageDead(_73);
        StorageDead(_71);
        switchInt(copy _5) -> [45: bb90, otherwise: bb91];
    }

    bb90: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S12;
        goto -> bb1921;
    }

    bb91: {
        _74 = Le(const 48_u8, copy _5);
        switchInt(move _74) -> [0: bb93, otherwise: bb92];
    }

    bb92: {
        _75 = Le(copy _5, const 57_u8);
        switchInt(move _75) -> [0: bb93, otherwise: bb98];
    }

    bb93: {
        _76 = Le(const 65_u8, copy _5);
        switchInt(move _76) -> [0: bb95, otherwise: bb94];
    }

    bb94: {
        _77 = Le(copy _5, const 90_u8);
        switchInt(move _77) -> [0: bb95, otherwise: bb98];
    }

    bb95: {
        _78 = Le(const 97_u8, copy _5);
        switchInt(move _78) -> [0: bb97, otherwise: bb96];
    }

    bb96: {
        _79 = Le(copy _5, const 122_u8);
        switchInt(move _79) -> [0: bb97, otherwise: bb98];
    }

    bb97: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb98: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S13;
        goto -> bb1921;
    }

    bb99: {
        StorageLive(_81);
        StorageLive(_80);
        _80 = copy _2;
        _81 = Lt(move _80, copy _4);
        switchInt(move _81) -> [0: bb100, otherwise: bb101];
    }

    bb100: {
        StorageDead(_80);
        _5 = const 0_u8;
        goto -> bb103;
    }

    bb101: {
        StorageDead(_80);
        StorageLive(_83);
        StorageLive(_82);
        _82 = copy _2;
        _83 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _82) -> [return: bb102, unwind unreachable];
    }

    bb102: {
        StorageDead(_82);
        _5 = copy (*_83);
        StorageDead(_83);
        goto -> bb103;
    }

    bb103: {
        StorageDead(_81);
        switchInt(copy _5) -> [45: bb104, 46: bb105, 62: bb106, otherwise: bb107];
    }

    bb104: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S12;
        goto -> bb1921;
    }

    bb105: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb106: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb107: {
        _84 = Le(const 48_u8, copy _5);
        switchInt(move _84) -> [0: bb109, otherwise: bb108];
    }

    bb108: {
        _85 = Le(copy _5, const 57_u8);
        switchInt(move _85) -> [0: bb109, otherwise: bb114];
    }

    bb109: {
        _86 = Le(const 65_u8, copy _5);
        switchInt(move _86) -> [0: bb111, otherwise: bb110];
    }

    bb110: {
        _87 = Le(copy _5, const 90_u8);
        switchInt(move _87) -> [0: bb111, otherwise: bb114];
    }

    bb111: {
        _88 = Le(const 97_u8, copy _5);
        switchInt(move _88) -> [0: bb113, otherwise: bb112];
    }

    bb112: {
        _89 = Le(copy _5, const 122_u8);
        switchInt(move _89) -> [0: bb113, otherwise: bb114];
    }

    bb113: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb114: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S13;
        goto -> bb1921;
    }

    bb115: {
        _0 = Option::<usize>::Some(move _2);
        goto -> bb116;
    }

    bb116: {
        return;
    }

    bb117: {
        StorageLive(_91);
        StorageLive(_90);
        _90 = copy _2;
        _91 = Lt(move _90, copy _4);
        switchInt(move _91) -> [0: bb118, otherwise: bb119];
    }

    bb118: {
        StorageDead(_90);
        _5 = const 0_u8;
        StorageDead(_91);
        goto -> bb122;
    }

    bb119: {
        StorageDead(_90);
        StorageLive(_93);
        StorageLive(_92);
        _92 = copy _2;
        _93 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _92) -> [return: bb120, unwind unreachable];
    }

    bb120: {
        StorageDead(_92);
        _5 = copy (*_93);
        StorageDead(_93);
        StorageDead(_91);
        switchInt(copy _5) -> [45: bb121, otherwise: bb122];
    }

    bb121: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S14;
        goto -> bb1921;
    }

    bb122: {
        _94 = Le(const 48_u8, copy _5);
        switchInt(move _94) -> [0: bb124, otherwise: bb123];
    }

    bb123: {
        _95 = Le(copy _5, const 57_u8);
        switchInt(move _95) -> [0: bb124, otherwise: bb129];
    }

    bb124: {
        _96 = Le(const 65_u8, copy _5);
        switchInt(move _96) -> [0: bb126, otherwise: bb125];
    }

    bb125: {
        _97 = Le(copy _5, const 90_u8);
        switchInt(move _97) -> [0: bb126, otherwise: bb129];
    }

    bb126: {
        _98 = Le(const 97_u8, copy _5);
        switchInt(move _98) -> [0: bb128, otherwise: bb127];
    }

    bb127: {
        _99 = Le(copy _5, const 122_u8);
        switchInt(move _99) -> [0: bb128, otherwise: bb129];
    }

    bb128: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb129: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S15;
        goto -> bb1921;
    }

    bb130: {
        StorageLive(_101);
        StorageLive(_100);
        _100 = copy _2;
        _101 = Lt(move _100, copy _4);
        switchInt(move _101) -> [0: bb131, otherwise: bb132];
    }

    bb131: {
        StorageDead(_100);
        _5 = const 0_u8;
        goto -> bb134;
    }

    bb132: {
        StorageDead(_100);
        StorageLive(_103);
        StorageLive(_102);
        _102 = copy _2;
        _103 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _102) -> [return: bb133, unwind unreachable];
    }

    bb133: {
        StorageDead(_102);
        _5 = copy (*_103);
        StorageDead(_103);
        goto -> bb134;
    }

    bb134: {
        StorageDead(_101);
        switchInt(copy _5) -> [45: bb135, 46: bb136, 62: bb137, otherwise: bb138];
    }

    bb135: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S14;
        goto -> bb1921;
    }

    bb136: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb137: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb138: {
        _104 = Le(const 48_u8, copy _5);
        switchInt(move _104) -> [0: bb140, otherwise: bb139];
    }

    bb139: {
        _105 = Le(copy _5, const 57_u8);
        switchInt(move _105) -> [0: bb140, otherwise: bb145];
    }

    bb140: {
        _106 = Le(const 65_u8, copy _5);
        switchInt(move _106) -> [0: bb142, otherwise: bb141];
    }

    bb141: {
        _107 = Le(copy _5, const 90_u8);
        switchInt(move _107) -> [0: bb142, otherwise: bb145];
    }

    bb142: {
        _108 = Le(const 97_u8, copy _5);
        switchInt(move _108) -> [0: bb144, otherwise: bb143];
    }

    bb143: {
        _109 = Le(copy _5, const 122_u8);
        switchInt(move _109) -> [0: bb144, otherwise: bb145];
    }

    bb144: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb145: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S15;
        goto -> bb1921;
    }

    bb146: {
        StorageLive(_111);
        StorageLive(_110);
        _110 = copy _2;
        _111 = Lt(move _110, copy _4);
        switchInt(move _111) -> [0: bb147, otherwise: bb148];
    }

    bb147: {
        StorageDead(_110);
        _5 = const 0_u8;
        goto -> bb150;
    }

    bb148: {
        StorageDead(_110);
        StorageLive(_113);
        StorageLive(_112);
        _112 = copy _2;
        _113 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _112) -> [return: bb149, unwind unreachable];
    }

    bb149: {
        StorageDead(_112);
        _5 = copy (*_113);
        StorageDead(_113);
        goto -> bb150;
    }

    bb150: {
        StorageDead(_111);
        switchInt(copy _5) -> [45: bb151, otherwise: bb152];
    }

    bb151: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S16;
        goto -> bb1921;
    }

    bb152: {
        _114 = Le(const 48_u8, copy _5);
        switchInt(move _114) -> [0: bb154, otherwise: bb153];
    }

    bb153: {
        _115 = Le(copy _5, const 57_u8);
        switchInt(move _115) -> [0: bb154, otherwise: bb159];
    }

    bb154: {
        _116 = Le(const 65_u8, copy _5);
        switchInt(move _116) -> [0: bb156, otherwise: bb155];
    }

    bb155: {
        _117 = Le(copy _5, const 90_u8);
        switchInt(move _117) -> [0: bb156, otherwise: bb159];
    }

    bb156: {
        _118 = Le(const 97_u8, copy _5);
        switchInt(move _118) -> [0: bb158, otherwise: bb157];
    }

    bb157: {
        _119 = Le(copy _5, const 122_u8);
        switchInt(move _119) -> [0: bb158, otherwise: bb159];
    }

    bb158: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb159: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S17;
        goto -> bb1921;
    }

    bb160: {
        StorageLive(_121);
        StorageLive(_120);
        _120 = copy _2;
        _121 = Lt(move _120, copy _4);
        switchInt(move _121) -> [0: bb161, otherwise: bb162];
    }

    bb161: {
        StorageDead(_120);
        _5 = const 0_u8;
        goto -> bb164;
    }

    bb162: {
        StorageDead(_120);
        StorageLive(_123);
        StorageLive(_122);
        _122 = copy _2;
        _123 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _122) -> [return: bb163, unwind unreachable];
    }

    bb163: {
        StorageDead(_122);
        _5 = copy (*_123);
        StorageDead(_123);
        goto -> bb164;
    }

    bb164: {
        StorageDead(_121);
        switchInt(copy _5) -> [45: bb165, 46: bb166, 62: bb167, otherwise: bb168];
    }

    bb165: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S16;
        goto -> bb1921;
    }

    bb166: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb167: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb168: {
        _124 = Le(const 48_u8, copy _5);
        switchInt(move _124) -> [0: bb170, otherwise: bb169];
    }

    bb169: {
        _125 = Le(copy _5, const 57_u8);
        switchInt(move _125) -> [0: bb170, otherwise: bb175];
    }

    bb170: {
        _126 = Le(const 65_u8, copy _5);
        switchInt(move _126) -> [0: bb172, otherwise: bb171];
    }

    bb171: {
        _127 = Le(copy _5, const 90_u8);
        switchInt(move _127) -> [0: bb172, otherwise: bb175];
    }

    bb172: {
        _128 = Le(const 97_u8, copy _5);
        switchInt(move _128) -> [0: bb174, otherwise: bb173];
    }

    bb173: {
        _129 = Le(copy _5, const 122_u8);
        switchInt(move _129) -> [0: bb174, otherwise: bb175];
    }

    bb174: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb175: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S17;
        goto -> bb1921;
    }

    bb176: {
        StorageLive(_131);
        StorageLive(_130);
        _130 = copy _2;
        _131 = Lt(move _130, copy _4);
        switchInt(move _131) -> [0: bb177, otherwise: bb178];
    }

    bb177: {
        StorageDead(_130);
        _5 = const 0_u8;
        goto -> bb180;
    }

    bb178: {
        StorageDead(_130);
        StorageLive(_133);
        StorageLive(_132);
        _132 = copy _2;
        _133 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _132) -> [return: bb179, unwind unreachable];
    }

    bb179: {
        StorageDead(_132);
        _5 = copy (*_133);
        StorageDead(_133);
        goto -> bb180;
    }

    bb180: {
        StorageDead(_131);
        switchInt(copy _5) -> [45: bb181, otherwise: bb182];
    }

    bb181: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S18;
        goto -> bb1921;
    }

    bb182: {
        _134 = Le(const 48_u8, copy _5);
        switchInt(move _134) -> [0: bb184, otherwise: bb183];
    }

    bb183: {
        _135 = Le(copy _5, const 57_u8);
        switchInt(move _135) -> [0: bb184, otherwise: bb189];
    }

    bb184: {
        _136 = Le(const 65_u8, copy _5);
        switchInt(move _136) -> [0: bb186, otherwise: bb185];
    }

    bb185: {
        _137 = Le(copy _5, const 90_u8);
        switchInt(move _137) -> [0: bb186, otherwise: bb189];
    }

    bb186: {
        _138 = Le(const 97_u8, copy _5);
        switchInt(move _138) -> [0: bb188, otherwise: bb187];
    }

    bb187: {
        _139 = Le(copy _5, const 122_u8);
        switchInt(move _139) -> [0: bb188, otherwise: bb189];
    }

    bb188: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb189: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S19;
        goto -> bb1921;
    }

    bb190: {
        StorageLive(_141);
        StorageLive(_140);
        _140 = copy _2;
        _141 = Lt(move _140, copy _4);
        switchInt(move _141) -> [0: bb191, otherwise: bb192];
    }

    bb191: {
        StorageDead(_140);
        _5 = const 0_u8;
        goto -> bb194;
    }

    bb192: {
        StorageDead(_140);
        StorageLive(_143);
        StorageLive(_142);
        _142 = copy _2;
        _143 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _142) -> [return: bb193, unwind unreachable];
    }

    bb193: {
        StorageDead(_142);
        _5 = copy (*_143);
        StorageDead(_143);
        goto -> bb194;
    }

    bb194: {
        StorageDead(_141);
        switchInt(copy _5) -> [45: bb195, 46: bb196, 62: bb197, otherwise: bb198];
    }

    bb195: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S18;
        goto -> bb1921;
    }

    bb196: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb197: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb198: {
        _144 = Le(const 48_u8, copy _5);
        switchInt(move _144) -> [0: bb200, otherwise: bb199];
    }

    bb199: {
        _145 = Le(copy _5, const 57_u8);
        switchInt(move _145) -> [0: bb200, otherwise: bb205];
    }

    bb200: {
        _146 = Le(const 65_u8, copy _5);
        switchInt(move _146) -> [0: bb202, otherwise: bb201];
    }

    bb201: {
        _147 = Le(copy _5, const 90_u8);
        switchInt(move _147) -> [0: bb202, otherwise: bb205];
    }

    bb202: {
        _148 = Le(const 97_u8, copy _5);
        switchInt(move _148) -> [0: bb204, otherwise: bb203];
    }

    bb203: {
        _149 = Le(copy _5, const 122_u8);
        switchInt(move _149) -> [0: bb204, otherwise: bb205];
    }

    bb204: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb205: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S19;
        goto -> bb1921;
    }

    bb206: {
        StorageLive(_151);
        StorageLive(_150);
        _150 = copy _2;
        _151 = Lt(move _150, copy _4);
        switchInt(move _151) -> [0: bb207, otherwise: bb208];
    }

    bb207: {
        StorageDead(_150);
        _5 = const 0_u8;
        goto -> bb210;
    }

    bb208: {
        StorageDead(_150);
        StorageLive(_153);
        StorageLive(_152);
        _152 = copy _2;
        _153 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _152) -> [return: bb209, unwind unreachable];
    }

    bb209: {
        StorageDead(_152);
        _5 = copy (*_153);
        StorageDead(_153);
        goto -> bb210;
    }

    bb210: {
        StorageDead(_151);
        switchInt(copy _5) -> [45: bb211, otherwise: bb212];
    }

    bb211: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S20;
        goto -> bb1921;
    }

    bb212: {
        _154 = Le(const 48_u8, copy _5);
        switchInt(move _154) -> [0: bb214, otherwise: bb213];
    }

    bb213: {
        _155 = Le(copy _5, const 57_u8);
        switchInt(move _155) -> [0: bb214, otherwise: bb219];
    }

    bb214: {
        _156 = Le(const 65_u8, copy _5);
        switchInt(move _156) -> [0: bb216, otherwise: bb215];
    }

    bb215: {
        _157 = Le(copy _5, const 90_u8);
        switchInt(move _157) -> [0: bb216, otherwise: bb219];
    }

    bb216: {
        _158 = Le(const 97_u8, copy _5);
        switchInt(move _158) -> [0: bb218, otherwise: bb217];
    }

    bb217: {
        _159 = Le(copy _5, const 122_u8);
        switchInt(move _159) -> [0: bb218, otherwise: bb219];
    }

    bb218: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb219: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S21;
        goto -> bb1921;
    }

    bb220: {
        StorageLive(_161);
        StorageLive(_160);
        _160 = copy _2;
        _161 = Lt(move _160, copy _4);
        switchInt(move _161) -> [0: bb221, otherwise: bb222];
    }

    bb221: {
        StorageDead(_160);
        _5 = const 0_u8;
        goto -> bb224;
    }

    bb222: {
        StorageDead(_160);
        StorageLive(_163);
        StorageLive(_162);
        _162 = copy _2;
        _163 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _162) -> [return: bb223, unwind unreachable];
    }

    bb223: {
        StorageDead(_162);
        _5 = copy (*_163);
        StorageDead(_163);
        goto -> bb224;
    }

    bb224: {
        StorageDead(_161);
        switchInt(copy _5) -> [45: bb225, 46: bb226, 62: bb227, otherwise: bb228];
    }

    bb225: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S20;
        goto -> bb1921;
    }

    bb226: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb227: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb228: {
        _164 = Le(const 48_u8, copy _5);
        switchInt(move _164) -> [0: bb230, otherwise: bb229];
    }

    bb229: {
        _165 = Le(copy _5, const 57_u8);
        switchInt(move _165) -> [0: bb230, otherwise: bb235];
    }

    bb230: {
        _166 = Le(const 65_u8, copy _5);
        switchInt(move _166) -> [0: bb232, otherwise: bb231];
    }

    bb231: {
        _167 = Le(copy _5, const 90_u8);
        switchInt(move _167) -> [0: bb232, otherwise: bb235];
    }

    bb232: {
        _168 = Le(const 97_u8, copy _5);
        switchInt(move _168) -> [0: bb234, otherwise: bb233];
    }

    bb233: {
        _169 = Le(copy _5, const 122_u8);
        switchInt(move _169) -> [0: bb234, otherwise: bb235];
    }

    bb234: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb235: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S21;
        goto -> bb1921;
    }

    bb236: {
        StorageLive(_171);
        StorageLive(_170);
        _170 = copy _2;
        _171 = Lt(move _170, copy _4);
        switchInt(move _171) -> [0: bb237, otherwise: bb238];
    }

    bb237: {
        StorageDead(_170);
        _5 = const 0_u8;
        goto -> bb240;
    }

    bb238: {
        StorageDead(_170);
        StorageLive(_173);
        StorageLive(_172);
        _172 = copy _2;
        _173 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _172) -> [return: bb239, unwind unreachable];
    }

    bb239: {
        StorageDead(_172);
        _5 = copy (*_173);
        StorageDead(_173);
        goto -> bb240;
    }

    bb240: {
        StorageDead(_171);
        switchInt(copy _5) -> [45: bb241, otherwise: bb242];
    }

    bb241: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S22;
        goto -> bb1921;
    }

    bb242: {
        _174 = Le(const 48_u8, copy _5);
        switchInt(move _174) -> [0: bb244, otherwise: bb243];
    }

    bb243: {
        _175 = Le(copy _5, const 57_u8);
        switchInt(move _175) -> [0: bb244, otherwise: bb249];
    }

    bb244: {
        _176 = Le(const 65_u8, copy _5);
        switchInt(move _176) -> [0: bb246, otherwise: bb245];
    }

    bb245: {
        _177 = Le(copy _5, const 90_u8);
        switchInt(move _177) -> [0: bb246, otherwise: bb249];
    }

    bb246: {
        _178 = Le(const 97_u8, copy _5);
        switchInt(move _178) -> [0: bb248, otherwise: bb247];
    }

    bb247: {
        _179 = Le(copy _5, const 122_u8);
        switchInt(move _179) -> [0: bb248, otherwise: bb249];
    }

    bb248: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb249: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S23;
        goto -> bb1921;
    }

    bb250: {
        StorageLive(_181);
        StorageLive(_180);
        _180 = copy _2;
        _181 = Lt(move _180, copy _4);
        switchInt(move _181) -> [0: bb251, otherwise: bb252];
    }

    bb251: {
        StorageDead(_180);
        _5 = const 0_u8;
        goto -> bb254;
    }

    bb252: {
        StorageDead(_180);
        StorageLive(_183);
        StorageLive(_182);
        _182 = copy _2;
        _183 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _182) -> [return: bb253, unwind unreachable];
    }

    bb253: {
        StorageDead(_182);
        _5 = copy (*_183);
        StorageDead(_183);
        goto -> bb254;
    }

    bb254: {
        StorageDead(_181);
        switchInt(copy _5) -> [45: bb255, 46: bb256, 62: bb257, otherwise: bb258];
    }

    bb255: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S22;
        goto -> bb1921;
    }

    bb256: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb257: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb258: {
        _184 = Le(const 48_u8, copy _5);
        switchInt(move _184) -> [0: bb260, otherwise: bb259];
    }

    bb259: {
        _185 = Le(copy _5, const 57_u8);
        switchInt(move _185) -> [0: bb260, otherwise: bb265];
    }

    bb260: {
        _186 = Le(const 65_u8, copy _5);
        switchInt(move _186) -> [0: bb262, otherwise: bb261];
    }

    bb261: {
        _187 = Le(copy _5, const 90_u8);
        switchInt(move _187) -> [0: bb262, otherwise: bb265];
    }

    bb262: {
        _188 = Le(const 97_u8, copy _5);
        switchInt(move _188) -> [0: bb264, otherwise: bb263];
    }

    bb263: {
        _189 = Le(copy _5, const 122_u8);
        switchInt(move _189) -> [0: bb264, otherwise: bb265];
    }

    bb264: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb265: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S23;
        goto -> bb1921;
    }

    bb266: {
        StorageLive(_191);
        StorageLive(_190);
        _190 = copy _2;
        _191 = Lt(move _190, copy _4);
        switchInt(move _191) -> [0: bb267, otherwise: bb268];
    }

    bb267: {
        StorageDead(_190);
        _5 = const 0_u8;
        goto -> bb270;
    }

    bb268: {
        StorageDead(_190);
        StorageLive(_193);
        StorageLive(_192);
        _192 = copy _2;
        _193 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _192) -> [return: bb269, unwind unreachable];
    }

    bb269: {
        StorageDead(_192);
        _5 = copy (*_193);
        StorageDead(_193);
        goto -> bb270;
    }

    bb270: {
        StorageDead(_191);
        switchInt(copy _5) -> [45: bb271, otherwise: bb272];
    }

    bb271: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S24;
        goto -> bb1921;
    }

    bb272: {
        _194 = Le(const 48_u8, copy _5);
        switchInt(move _194) -> [0: bb274, otherwise: bb273];
    }

    bb273: {
        _195 = Le(copy _5, const 57_u8);
        switchInt(move _195) -> [0: bb274, otherwise: bb279];
    }

    bb274: {
        _196 = Le(const 65_u8, copy _5);
        switchInt(move _196) -> [0: bb276, otherwise: bb275];
    }

    bb275: {
        _197 = Le(copy _5, const 90_u8);
        switchInt(move _197) -> [0: bb276, otherwise: bb279];
    }

    bb276: {
        _198 = Le(const 97_u8, copy _5);
        switchInt(move _198) -> [0: bb278, otherwise: bb277];
    }

    bb277: {
        _199 = Le(copy _5, const 122_u8);
        switchInt(move _199) -> [0: bb278, otherwise: bb279];
    }

    bb278: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb279: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S25;
        goto -> bb1921;
    }

    bb280: {
        StorageLive(_201);
        StorageLive(_200);
        _200 = copy _2;
        _201 = Lt(move _200, copy _4);
        switchInt(move _201) -> [0: bb281, otherwise: bb282];
    }

    bb281: {
        StorageDead(_200);
        _5 = const 0_u8;
        goto -> bb284;
    }

    bb282: {
        StorageDead(_200);
        StorageLive(_203);
        StorageLive(_202);
        _202 = copy _2;
        _203 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _202) -> [return: bb283, unwind unreachable];
    }

    bb283: {
        StorageDead(_202);
        _5 = copy (*_203);
        StorageDead(_203);
        goto -> bb284;
    }

    bb284: {
        StorageDead(_201);
        switchInt(copy _5) -> [45: bb285, 46: bb286, 62: bb287, otherwise: bb288];
    }

    bb285: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S24;
        goto -> bb1921;
    }

    bb286: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb287: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb288: {
        _204 = Le(const 48_u8, copy _5);
        switchInt(move _204) -> [0: bb290, otherwise: bb289];
    }

    bb289: {
        _205 = Le(copy _5, const 57_u8);
        switchInt(move _205) -> [0: bb290, otherwise: bb295];
    }

    bb290: {
        _206 = Le(const 65_u8, copy _5);
        switchInt(move _206) -> [0: bb292, otherwise: bb291];
    }

    bb291: {
        _207 = Le(copy _5, const 90_u8);
        switchInt(move _207) -> [0: bb292, otherwise: bb295];
    }

    bb292: {
        _208 = Le(const 97_u8, copy _5);
        switchInt(move _208) -> [0: bb294, otherwise: bb293];
    }

    bb293: {
        _209 = Le(copy _5, const 122_u8);
        switchInt(move _209) -> [0: bb294, otherwise: bb295];
    }

    bb294: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb295: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S25;
        goto -> bb1921;
    }

    bb296: {
        StorageLive(_211);
        StorageLive(_210);
        _210 = copy _2;
        _211 = Lt(move _210, copy _4);
        switchInt(move _211) -> [0: bb297, otherwise: bb298];
    }

    bb297: {
        StorageDead(_210);
        _5 = const 0_u8;
        goto -> bb300;
    }

    bb298: {
        StorageDead(_210);
        StorageLive(_213);
        StorageLive(_212);
        _212 = copy _2;
        _213 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _212) -> [return: bb299, unwind unreachable];
    }

    bb299: {
        StorageDead(_212);
        _5 = copy (*_213);
        StorageDead(_213);
        goto -> bb300;
    }

    bb300: {
        StorageDead(_211);
        switchInt(copy _5) -> [45: bb301, otherwise: bb302];
    }

    bb301: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S26;
        goto -> bb1921;
    }

    bb302: {
        _214 = Le(const 48_u8, copy _5);
        switchInt(move _214) -> [0: bb304, otherwise: bb303];
    }

    bb303: {
        _215 = Le(copy _5, const 57_u8);
        switchInt(move _215) -> [0: bb304, otherwise: bb309];
    }

    bb304: {
        _216 = Le(const 65_u8, copy _5);
        switchInt(move _216) -> [0: bb306, otherwise: bb305];
    }

    bb305: {
        _217 = Le(copy _5, const 90_u8);
        switchInt(move _217) -> [0: bb306, otherwise: bb309];
    }

    bb306: {
        _218 = Le(const 97_u8, copy _5);
        switchInt(move _218) -> [0: bb308, otherwise: bb307];
    }

    bb307: {
        _219 = Le(copy _5, const 122_u8);
        switchInt(move _219) -> [0: bb308, otherwise: bb309];
    }

    bb308: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb309: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S27;
        goto -> bb1921;
    }

    bb310: {
        StorageLive(_221);
        StorageLive(_220);
        _220 = copy _2;
        _221 = Lt(move _220, copy _4);
        switchInt(move _221) -> [0: bb311, otherwise: bb312];
    }

    bb311: {
        StorageDead(_220);
        _5 = const 0_u8;
        goto -> bb314;
    }

    bb312: {
        StorageDead(_220);
        StorageLive(_223);
        StorageLive(_222);
        _222 = copy _2;
        _223 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _222) -> [return: bb313, unwind unreachable];
    }

    bb313: {
        StorageDead(_222);
        _5 = copy (*_223);
        StorageDead(_223);
        goto -> bb314;
    }

    bb314: {
        StorageDead(_221);
        switchInt(copy _5) -> [45: bb315, 46: bb316, 62: bb317, otherwise: bb318];
    }

    bb315: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S26;
        goto -> bb1921;
    }

    bb316: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb317: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb318: {
        _224 = Le(const 48_u8, copy _5);
        switchInt(move _224) -> [0: bb320, otherwise: bb319];
    }

    bb319: {
        _225 = Le(copy _5, const 57_u8);
        switchInt(move _225) -> [0: bb320, otherwise: bb325];
    }

    bb320: {
        _226 = Le(const 65_u8, copy _5);
        switchInt(move _226) -> [0: bb322, otherwise: bb321];
    }

    bb321: {
        _227 = Le(copy _5, const 90_u8);
        switchInt(move _227) -> [0: bb322, otherwise: bb325];
    }

    bb322: {
        _228 = Le(const 97_u8, copy _5);
        switchInt(move _228) -> [0: bb324, otherwise: bb323];
    }

    bb323: {
        _229 = Le(copy _5, const 122_u8);
        switchInt(move _229) -> [0: bb324, otherwise: bb325];
    }

    bb324: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb325: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S27;
        goto -> bb1921;
    }

    bb326: {
        StorageLive(_231);
        StorageLive(_230);
        _230 = copy _2;
        _231 = Lt(move _230, copy _4);
        switchInt(move _231) -> [0: bb327, otherwise: bb328];
    }

    bb327: {
        StorageDead(_230);
        _5 = const 0_u8;
        goto -> bb330;
    }

    bb328: {
        StorageDead(_230);
        StorageLive(_233);
        StorageLive(_232);
        _232 = copy _2;
        _233 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _232) -> [return: bb329, unwind unreachable];
    }

    bb329: {
        StorageDead(_232);
        _5 = copy (*_233);
        StorageDead(_233);
        goto -> bb330;
    }

    bb330: {
        StorageDead(_231);
        switchInt(copy _5) -> [45: bb331, otherwise: bb332];
    }

    bb331: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S28;
        goto -> bb1921;
    }

    bb332: {
        _234 = Le(const 48_u8, copy _5);
        switchInt(move _234) -> [0: bb334, otherwise: bb333];
    }

    bb333: {
        _235 = Le(copy _5, const 57_u8);
        switchInt(move _235) -> [0: bb334, otherwise: bb339];
    }

    bb334: {
        _236 = Le(const 65_u8, copy _5);
        switchInt(move _236) -> [0: bb336, otherwise: bb335];
    }

    bb335: {
        _237 = Le(copy _5, const 90_u8);
        switchInt(move _237) -> [0: bb336, otherwise: bb339];
    }

    bb336: {
        _238 = Le(const 97_u8, copy _5);
        switchInt(move _238) -> [0: bb338, otherwise: bb337];
    }

    bb337: {
        _239 = Le(copy _5, const 122_u8);
        switchInt(move _239) -> [0: bb338, otherwise: bb339];
    }

    bb338: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb339: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S29;
        goto -> bb1921;
    }

    bb340: {
        StorageLive(_241);
        StorageLive(_240);
        _240 = copy _2;
        _241 = Lt(move _240, copy _4);
        switchInt(move _241) -> [0: bb341, otherwise: bb342];
    }

    bb341: {
        StorageDead(_240);
        _5 = const 0_u8;
        goto -> bb344;
    }

    bb342: {
        StorageDead(_240);
        StorageLive(_243);
        StorageLive(_242);
        _242 = copy _2;
        _243 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _242) -> [return: bb343, unwind unreachable];
    }

    bb343: {
        StorageDead(_242);
        _5 = copy (*_243);
        StorageDead(_243);
        goto -> bb344;
    }

    bb344: {
        StorageDead(_241);
        switchInt(copy _5) -> [45: bb345, 46: bb346, 62: bb347, otherwise: bb348];
    }

    bb345: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S28;
        goto -> bb1921;
    }

    bb346: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb347: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb348: {
        _244 = Le(const 48_u8, copy _5);
        switchInt(move _244) -> [0: bb350, otherwise: bb349];
    }

    bb349: {
        _245 = Le(copy _5, const 57_u8);
        switchInt(move _245) -> [0: bb350, otherwise: bb355];
    }

    bb350: {
        _246 = Le(const 65_u8, copy _5);
        switchInt(move _246) -> [0: bb352, otherwise: bb351];
    }

    bb351: {
        _247 = Le(copy _5, const 90_u8);
        switchInt(move _247) -> [0: bb352, otherwise: bb355];
    }

    bb352: {
        _248 = Le(const 97_u8, copy _5);
        switchInt(move _248) -> [0: bb354, otherwise: bb353];
    }

    bb353: {
        _249 = Le(copy _5, const 122_u8);
        switchInt(move _249) -> [0: bb354, otherwise: bb355];
    }

    bb354: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb355: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S29;
        goto -> bb1921;
    }

    bb356: {
        StorageLive(_251);
        StorageLive(_250);
        _250 = copy _2;
        _251 = Lt(move _250, copy _4);
        switchInt(move _251) -> [0: bb357, otherwise: bb358];
    }

    bb357: {
        StorageDead(_250);
        _5 = const 0_u8;
        goto -> bb360;
    }

    bb358: {
        StorageDead(_250);
        StorageLive(_253);
        StorageLive(_252);
        _252 = copy _2;
        _253 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _252) -> [return: bb359, unwind unreachable];
    }

    bb359: {
        StorageDead(_252);
        _5 = copy (*_253);
        StorageDead(_253);
        goto -> bb360;
    }

    bb360: {
        StorageDead(_251);
        switchInt(copy _5) -> [45: bb361, otherwise: bb362];
    }

    bb361: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S30;
        goto -> bb1921;
    }

    bb362: {
        _254 = Le(const 48_u8, copy _5);
        switchInt(move _254) -> [0: bb364, otherwise: bb363];
    }

    bb363: {
        _255 = Le(copy _5, const 57_u8);
        switchInt(move _255) -> [0: bb364, otherwise: bb369];
    }

    bb364: {
        _256 = Le(const 65_u8, copy _5);
        switchInt(move _256) -> [0: bb366, otherwise: bb365];
    }

    bb365: {
        _257 = Le(copy _5, const 90_u8);
        switchInt(move _257) -> [0: bb366, otherwise: bb369];
    }

    bb366: {
        _258 = Le(const 97_u8, copy _5);
        switchInt(move _258) -> [0: bb368, otherwise: bb367];
    }

    bb367: {
        _259 = Le(copy _5, const 122_u8);
        switchInt(move _259) -> [0: bb368, otherwise: bb369];
    }

    bb368: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb369: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S31;
        goto -> bb1921;
    }

    bb370: {
        StorageLive(_261);
        StorageLive(_260);
        _260 = copy _2;
        _261 = Lt(move _260, copy _4);
        switchInt(move _261) -> [0: bb371, otherwise: bb372];
    }

    bb371: {
        StorageDead(_260);
        _5 = const 0_u8;
        goto -> bb374;
    }

    bb372: {
        StorageDead(_260);
        StorageLive(_263);
        StorageLive(_262);
        _262 = copy _2;
        _263 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _262) -> [return: bb373, unwind unreachable];
    }

    bb373: {
        StorageDead(_262);
        _5 = copy (*_263);
        StorageDead(_263);
        goto -> bb374;
    }

    bb374: {
        StorageDead(_261);
        switchInt(copy _5) -> [45: bb375, 46: bb376, 62: bb377, otherwise: bb378];
    }

    bb375: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S30;
        goto -> bb1921;
    }

    bb376: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb377: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb378: {
        _264 = Le(const 48_u8, copy _5);
        switchInt(move _264) -> [0: bb380, otherwise: bb379];
    }

    bb379: {
        _265 = Le(copy _5, const 57_u8);
        switchInt(move _265) -> [0: bb380, otherwise: bb385];
    }

    bb380: {
        _266 = Le(const 65_u8, copy _5);
        switchInt(move _266) -> [0: bb382, otherwise: bb381];
    }

    bb381: {
        _267 = Le(copy _5, const 90_u8);
        switchInt(move _267) -> [0: bb382, otherwise: bb385];
    }

    bb382: {
        _268 = Le(const 97_u8, copy _5);
        switchInt(move _268) -> [0: bb384, otherwise: bb383];
    }

    bb383: {
        _269 = Le(copy _5, const 122_u8);
        switchInt(move _269) -> [0: bb384, otherwise: bb385];
    }

    bb384: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb385: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S31;
        goto -> bb1921;
    }

    bb386: {
        StorageLive(_271);
        StorageLive(_270);
        _270 = copy _2;
        _271 = Lt(move _270, copy _4);
        switchInt(move _271) -> [0: bb387, otherwise: bb388];
    }

    bb387: {
        StorageDead(_270);
        _5 = const 0_u8;
        goto -> bb390;
    }

    bb388: {
        StorageDead(_270);
        StorageLive(_273);
        StorageLive(_272);
        _272 = copy _2;
        _273 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _272) -> [return: bb389, unwind unreachable];
    }

    bb389: {
        StorageDead(_272);
        _5 = copy (*_273);
        StorageDead(_273);
        goto -> bb390;
    }

    bb390: {
        StorageDead(_271);
        switchInt(copy _5) -> [45: bb391, otherwise: bb392];
    }

    bb391: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S32;
        goto -> bb1921;
    }

    bb392: {
        _274 = Le(const 48_u8, copy _5);
        switchInt(move _274) -> [0: bb394, otherwise: bb393];
    }

    bb393: {
        _275 = Le(copy _5, const 57_u8);
        switchInt(move _275) -> [0: bb394, otherwise: bb399];
    }

    bb394: {
        _276 = Le(const 65_u8, copy _5);
        switchInt(move _276) -> [0: bb396, otherwise: bb395];
    }

    bb395: {
        _277 = Le(copy _5, const 90_u8);
        switchInt(move _277) -> [0: bb396, otherwise: bb399];
    }

    bb396: {
        _278 = Le(const 97_u8, copy _5);
        switchInt(move _278) -> [0: bb398, otherwise: bb397];
    }

    bb397: {
        _279 = Le(copy _5, const 122_u8);
        switchInt(move _279) -> [0: bb398, otherwise: bb399];
    }

    bb398: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb399: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S33;
        goto -> bb1921;
    }

    bb400: {
        StorageLive(_281);
        StorageLive(_280);
        _280 = copy _2;
        _281 = Lt(move _280, copy _4);
        switchInt(move _281) -> [0: bb401, otherwise: bb402];
    }

    bb401: {
        StorageDead(_280);
        _5 = const 0_u8;
        goto -> bb404;
    }

    bb402: {
        StorageDead(_280);
        StorageLive(_283);
        StorageLive(_282);
        _282 = copy _2;
        _283 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _282) -> [return: bb403, unwind unreachable];
    }

    bb403: {
        StorageDead(_282);
        _5 = copy (*_283);
        StorageDead(_283);
        goto -> bb404;
    }

    bb404: {
        StorageDead(_281);
        switchInt(copy _5) -> [45: bb405, 46: bb406, 62: bb407, otherwise: bb408];
    }

    bb405: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S32;
        goto -> bb1921;
    }

    bb406: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb407: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb408: {
        _284 = Le(const 48_u8, copy _5);
        switchInt(move _284) -> [0: bb410, otherwise: bb409];
    }

    bb409: {
        _285 = Le(copy _5, const 57_u8);
        switchInt(move _285) -> [0: bb410, otherwise: bb415];
    }

    bb410: {
        _286 = Le(const 65_u8, copy _5);
        switchInt(move _286) -> [0: bb412, otherwise: bb411];
    }

    bb411: {
        _287 = Le(copy _5, const 90_u8);
        switchInt(move _287) -> [0: bb412, otherwise: bb415];
    }

    bb412: {
        _288 = Le(const 97_u8, copy _5);
        switchInt(move _288) -> [0: bb414, otherwise: bb413];
    }

    bb413: {
        _289 = Le(copy _5, const 122_u8);
        switchInt(move _289) -> [0: bb414, otherwise: bb415];
    }

    bb414: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb415: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S33;
        goto -> bb1921;
    }

    bb416: {
        StorageLive(_291);
        StorageLive(_290);
        _290 = copy _2;
        _291 = Lt(move _290, copy _4);
        switchInt(move _291) -> [0: bb417, otherwise: bb418];
    }

    bb417: {
        StorageDead(_290);
        _5 = const 0_u8;
        goto -> bb420;
    }

    bb418: {
        StorageDead(_290);
        StorageLive(_293);
        StorageLive(_292);
        _292 = copy _2;
        _293 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _292) -> [return: bb419, unwind unreachable];
    }

    bb419: {
        StorageDead(_292);
        _5 = copy (*_293);
        StorageDead(_293);
        goto -> bb420;
    }

    bb420: {
        StorageDead(_291);
        switchInt(copy _5) -> [45: bb421, otherwise: bb422];
    }

    bb421: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S34;
        goto -> bb1921;
    }

    bb422: {
        _294 = Le(const 48_u8, copy _5);
        switchInt(move _294) -> [0: bb424, otherwise: bb423];
    }

    bb423: {
        _295 = Le(copy _5, const 57_u8);
        switchInt(move _295) -> [0: bb424, otherwise: bb429];
    }

    bb424: {
        _296 = Le(const 65_u8, copy _5);
        switchInt(move _296) -> [0: bb426, otherwise: bb425];
    }

    bb425: {
        _297 = Le(copy _5, const 90_u8);
        switchInt(move _297) -> [0: bb426, otherwise: bb429];
    }

    bb426: {
        _298 = Le(const 97_u8, copy _5);
        switchInt(move _298) -> [0: bb428, otherwise: bb427];
    }

    bb427: {
        _299 = Le(copy _5, const 122_u8);
        switchInt(move _299) -> [0: bb428, otherwise: bb429];
    }

    bb428: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb429: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S35;
        goto -> bb1921;
    }

    bb430: {
        StorageLive(_301);
        StorageLive(_300);
        _300 = copy _2;
        _301 = Lt(move _300, copy _4);
        switchInt(move _301) -> [0: bb431, otherwise: bb432];
    }

    bb431: {
        StorageDead(_300);
        _5 = const 0_u8;
        goto -> bb434;
    }

    bb432: {
        StorageDead(_300);
        StorageLive(_303);
        StorageLive(_302);
        _302 = copy _2;
        _303 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _302) -> [return: bb433, unwind unreachable];
    }

    bb433: {
        StorageDead(_302);
        _5 = copy (*_303);
        StorageDead(_303);
        goto -> bb434;
    }

    bb434: {
        StorageDead(_301);
        switchInt(copy _5) -> [45: bb435, 46: bb436, 62: bb437, otherwise: bb438];
    }

    bb435: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S34;
        goto -> bb1921;
    }

    bb436: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb437: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb438: {
        _304 = Le(const 48_u8, copy _5);
        switchInt(move _304) -> [0: bb440, otherwise: bb439];
    }

    bb439: {
        _305 = Le(copy _5, const 57_u8);
        switchInt(move _305) -> [0: bb440, otherwise: bb445];
    }

    bb440: {
        _306 = Le(const 65_u8, copy _5);
        switchInt(move _306) -> [0: bb442, otherwise: bb441];
    }

    bb441: {
        _307 = Le(copy _5, const 90_u8);
        switchInt(move _307) -> [0: bb442, otherwise: bb445];
    }

    bb442: {
        _308 = Le(const 97_u8, copy _5);
        switchInt(move _308) -> [0: bb444, otherwise: bb443];
    }

    bb443: {
        _309 = Le(copy _5, const 122_u8);
        switchInt(move _309) -> [0: bb444, otherwise: bb445];
    }

    bb444: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb445: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S35;
        goto -> bb1921;
    }

    bb446: {
        StorageLive(_311);
        StorageLive(_310);
        _310 = copy _2;
        _311 = Lt(move _310, copy _4);
        switchInt(move _311) -> [0: bb447, otherwise: bb448];
    }

    bb447: {
        StorageDead(_310);
        _5 = const 0_u8;
        goto -> bb450;
    }

    bb448: {
        StorageDead(_310);
        StorageLive(_313);
        StorageLive(_312);
        _312 = copy _2;
        _313 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _312) -> [return: bb449, unwind unreachable];
    }

    bb449: {
        StorageDead(_312);
        _5 = copy (*_313);
        StorageDead(_313);
        goto -> bb450;
    }

    bb450: {
        StorageDead(_311);
        switchInt(copy _5) -> [45: bb451, otherwise: bb452];
    }

    bb451: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S36;
        goto -> bb1921;
    }

    bb452: {
        _314 = Le(const 48_u8, copy _5);
        switchInt(move _314) -> [0: bb454, otherwise: bb453];
    }

    bb453: {
        _315 = Le(copy _5, const 57_u8);
        switchInt(move _315) -> [0: bb454, otherwise: bb459];
    }

    bb454: {
        _316 = Le(const 65_u8, copy _5);
        switchInt(move _316) -> [0: bb456, otherwise: bb455];
    }

    bb455: {
        _317 = Le(copy _5, const 90_u8);
        switchInt(move _317) -> [0: bb456, otherwise: bb459];
    }

    bb456: {
        _318 = Le(const 97_u8, copy _5);
        switchInt(move _318) -> [0: bb458, otherwise: bb457];
    }

    bb457: {
        _319 = Le(copy _5, const 122_u8);
        switchInt(move _319) -> [0: bb458, otherwise: bb459];
    }

    bb458: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb459: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S37;
        goto -> bb1921;
    }

    bb460: {
        StorageLive(_321);
        StorageLive(_320);
        _320 = copy _2;
        _321 = Lt(move _320, copy _4);
        switchInt(move _321) -> [0: bb461, otherwise: bb462];
    }

    bb461: {
        StorageDead(_320);
        _5 = const 0_u8;
        goto -> bb464;
    }

    bb462: {
        StorageDead(_320);
        StorageLive(_323);
        StorageLive(_322);
        _322 = copy _2;
        _323 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _322) -> [return: bb463, unwind unreachable];
    }

    bb463: {
        StorageDead(_322);
        _5 = copy (*_323);
        StorageDead(_323);
        goto -> bb464;
    }

    bb464: {
        StorageDead(_321);
        switchInt(copy _5) -> [45: bb465, 46: bb466, 62: bb467, otherwise: bb468];
    }

    bb465: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S36;
        goto -> bb1921;
    }

    bb466: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb467: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb468: {
        _324 = Le(const 48_u8, copy _5);
        switchInt(move _324) -> [0: bb470, otherwise: bb469];
    }

    bb469: {
        _325 = Le(copy _5, const 57_u8);
        switchInt(move _325) -> [0: bb470, otherwise: bb475];
    }

    bb470: {
        _326 = Le(const 65_u8, copy _5);
        switchInt(move _326) -> [0: bb472, otherwise: bb471];
    }

    bb471: {
        _327 = Le(copy _5, const 90_u8);
        switchInt(move _327) -> [0: bb472, otherwise: bb475];
    }

    bb472: {
        _328 = Le(const 97_u8, copy _5);
        switchInt(move _328) -> [0: bb474, otherwise: bb473];
    }

    bb473: {
        _329 = Le(copy _5, const 122_u8);
        switchInt(move _329) -> [0: bb474, otherwise: bb475];
    }

    bb474: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb475: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S37;
        goto -> bb1921;
    }

    bb476: {
        StorageLive(_331);
        StorageLive(_330);
        _330 = copy _2;
        _331 = Lt(move _330, copy _4);
        switchInt(move _331) -> [0: bb477, otherwise: bb478];
    }

    bb477: {
        StorageDead(_330);
        _5 = const 0_u8;
        goto -> bb480;
    }

    bb478: {
        StorageDead(_330);
        StorageLive(_333);
        StorageLive(_332);
        _332 = copy _2;
        _333 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _332) -> [return: bb479, unwind unreachable];
    }

    bb479: {
        StorageDead(_332);
        _5 = copy (*_333);
        StorageDead(_333);
        goto -> bb480;
    }

    bb480: {
        StorageDead(_331);
        switchInt(copy _5) -> [45: bb481, otherwise: bb482];
    }

    bb481: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S38;
        goto -> bb1921;
    }

    bb482: {
        _334 = Le(const 48_u8, copy _5);
        switchInt(move _334) -> [0: bb484, otherwise: bb483];
    }

    bb483: {
        _335 = Le(copy _5, const 57_u8);
        switchInt(move _335) -> [0: bb484, otherwise: bb489];
    }

    bb484: {
        _336 = Le(const 65_u8, copy _5);
        switchInt(move _336) -> [0: bb486, otherwise: bb485];
    }

    bb485: {
        _337 = Le(copy _5, const 90_u8);
        switchInt(move _337) -> [0: bb486, otherwise: bb489];
    }

    bb486: {
        _338 = Le(const 97_u8, copy _5);
        switchInt(move _338) -> [0: bb488, otherwise: bb487];
    }

    bb487: {
        _339 = Le(copy _5, const 122_u8);
        switchInt(move _339) -> [0: bb488, otherwise: bb489];
    }

    bb488: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb489: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S39;
        goto -> bb1921;
    }

    bb490: {
        StorageLive(_341);
        StorageLive(_340);
        _340 = copy _2;
        _341 = Lt(move _340, copy _4);
        switchInt(move _341) -> [0: bb491, otherwise: bb492];
    }

    bb491: {
        StorageDead(_340);
        _5 = const 0_u8;
        goto -> bb494;
    }

    bb492: {
        StorageDead(_340);
        StorageLive(_343);
        StorageLive(_342);
        _342 = copy _2;
        _343 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _342) -> [return: bb493, unwind unreachable];
    }

    bb493: {
        StorageDead(_342);
        _5 = copy (*_343);
        StorageDead(_343);
        goto -> bb494;
    }

    bb494: {
        StorageDead(_341);
        switchInt(copy _5) -> [45: bb495, 46: bb496, 62: bb497, otherwise: bb498];
    }

    bb495: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S38;
        goto -> bb1921;
    }

    bb496: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb497: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb498: {
        _344 = Le(const 48_u8, copy _5);
        switchInt(move _344) -> [0: bb500, otherwise: bb499];
    }

    bb499: {
        _345 = Le(copy _5, const 57_u8);
        switchInt(move _345) -> [0: bb500, otherwise: bb505];
    }

    bb500: {
        _346 = Le(const 65_u8, copy _5);
        switchInt(move _346) -> [0: bb502, otherwise: bb501];
    }

    bb501: {
        _347 = Le(copy _5, const 90_u8);
        switchInt(move _347) -> [0: bb502, otherwise: bb505];
    }

    bb502: {
        _348 = Le(const 97_u8, copy _5);
        switchInt(move _348) -> [0: bb504, otherwise: bb503];
    }

    bb503: {
        _349 = Le(copy _5, const 122_u8);
        switchInt(move _349) -> [0: bb504, otherwise: bb505];
    }

    bb504: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb505: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S39;
        goto -> bb1921;
    }

    bb506: {
        StorageLive(_351);
        StorageLive(_350);
        _350 = copy _2;
        _351 = Lt(move _350, copy _4);
        switchInt(move _351) -> [0: bb507, otherwise: bb508];
    }

    bb507: {
        StorageDead(_350);
        _5 = const 0_u8;
        goto -> bb510;
    }

    bb508: {
        StorageDead(_350);
        StorageLive(_353);
        StorageLive(_352);
        _352 = copy _2;
        _353 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _352) -> [return: bb509, unwind unreachable];
    }

    bb509: {
        StorageDead(_352);
        _5 = copy (*_353);
        StorageDead(_353);
        goto -> bb510;
    }

    bb510: {
        StorageDead(_351);
        switchInt(copy _5) -> [45: bb511, otherwise: bb512];
    }

    bb511: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S40;
        goto -> bb1921;
    }

    bb512: {
        _354 = Le(const 48_u8, copy _5);
        switchInt(move _354) -> [0: bb514, otherwise: bb513];
    }

    bb513: {
        _355 = Le(copy _5, const 57_u8);
        switchInt(move _355) -> [0: bb514, otherwise: bb519];
    }

    bb514: {
        _356 = Le(const 65_u8, copy _5);
        switchInt(move _356) -> [0: bb516, otherwise: bb515];
    }

    bb515: {
        _357 = Le(copy _5, const 90_u8);
        switchInt(move _357) -> [0: bb516, otherwise: bb519];
    }

    bb516: {
        _358 = Le(const 97_u8, copy _5);
        switchInt(move _358) -> [0: bb518, otherwise: bb517];
    }

    bb517: {
        _359 = Le(copy _5, const 122_u8);
        switchInt(move _359) -> [0: bb518, otherwise: bb519];
    }

    bb518: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb519: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S41;
        goto -> bb1921;
    }

    bb520: {
        StorageLive(_361);
        StorageLive(_360);
        _360 = copy _2;
        _361 = Lt(move _360, copy _4);
        switchInt(move _361) -> [0: bb521, otherwise: bb522];
    }

    bb521: {
        StorageDead(_360);
        _5 = const 0_u8;
        goto -> bb524;
    }

    bb522: {
        StorageDead(_360);
        StorageLive(_363);
        StorageLive(_362);
        _362 = copy _2;
        _363 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _362) -> [return: bb523, unwind unreachable];
    }

    bb523: {
        StorageDead(_362);
        _5 = copy (*_363);
        StorageDead(_363);
        goto -> bb524;
    }

    bb524: {
        StorageDead(_361);
        switchInt(copy _5) -> [45: bb525, 46: bb526, 62: bb527, otherwise: bb528];
    }

    bb525: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S40;
        goto -> bb1921;
    }

    bb526: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb527: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb528: {
        _364 = Le(const 48_u8, copy _5);
        switchInt(move _364) -> [0: bb530, otherwise: bb529];
    }

    bb529: {
        _365 = Le(copy _5, const 57_u8);
        switchInt(move _365) -> [0: bb530, otherwise: bb535];
    }

    bb530: {
        _366 = Le(const 65_u8, copy _5);
        switchInt(move _366) -> [0: bb532, otherwise: bb531];
    }

    bb531: {
        _367 = Le(copy _5, const 90_u8);
        switchInt(move _367) -> [0: bb532, otherwise: bb535];
    }

    bb532: {
        _368 = Le(const 97_u8, copy _5);
        switchInt(move _368) -> [0: bb534, otherwise: bb533];
    }

    bb533: {
        _369 = Le(copy _5, const 122_u8);
        switchInt(move _369) -> [0: bb534, otherwise: bb535];
    }

    bb534: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb535: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S41;
        goto -> bb1921;
    }

    bb536: {
        StorageLive(_371);
        StorageLive(_370);
        _370 = copy _2;
        _371 = Lt(move _370, copy _4);
        switchInt(move _371) -> [0: bb537, otherwise: bb538];
    }

    bb537: {
        StorageDead(_370);
        _5 = const 0_u8;
        goto -> bb540;
    }

    bb538: {
        StorageDead(_370);
        StorageLive(_373);
        StorageLive(_372);
        _372 = copy _2;
        _373 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _372) -> [return: bb539, unwind unreachable];
    }

    bb539: {
        StorageDead(_372);
        _5 = copy (*_373);
        StorageDead(_373);
        goto -> bb540;
    }

    bb540: {
        StorageDead(_371);
        switchInt(copy _5) -> [45: bb541, otherwise: bb542];
    }

    bb541: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S42;
        goto -> bb1921;
    }

    bb542: {
        _374 = Le(const 48_u8, copy _5);
        switchInt(move _374) -> [0: bb544, otherwise: bb543];
    }

    bb543: {
        _375 = Le(copy _5, const 57_u8);
        switchInt(move _375) -> [0: bb544, otherwise: bb549];
    }

    bb544: {
        _376 = Le(const 65_u8, copy _5);
        switchInt(move _376) -> [0: bb546, otherwise: bb545];
    }

    bb545: {
        _377 = Le(copy _5, const 90_u8);
        switchInt(move _377) -> [0: bb546, otherwise: bb549];
    }

    bb546: {
        _378 = Le(const 97_u8, copy _5);
        switchInt(move _378) -> [0: bb548, otherwise: bb547];
    }

    bb547: {
        _379 = Le(copy _5, const 122_u8);
        switchInt(move _379) -> [0: bb548, otherwise: bb549];
    }

    bb548: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb549: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S43;
        goto -> bb1921;
    }

    bb550: {
        StorageLive(_381);
        StorageLive(_380);
        _380 = copy _2;
        _381 = Lt(move _380, copy _4);
        switchInt(move _381) -> [0: bb551, otherwise: bb552];
    }

    bb551: {
        StorageDead(_380);
        _5 = const 0_u8;
        goto -> bb554;
    }

    bb552: {
        StorageDead(_380);
        StorageLive(_383);
        StorageLive(_382);
        _382 = copy _2;
        _383 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _382) -> [return: bb553, unwind unreachable];
    }

    bb553: {
        StorageDead(_382);
        _5 = copy (*_383);
        StorageDead(_383);
        goto -> bb554;
    }

    bb554: {
        StorageDead(_381);
        switchInt(copy _5) -> [45: bb555, 46: bb556, 62: bb557, otherwise: bb558];
    }

    bb555: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S42;
        goto -> bb1921;
    }

    bb556: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb557: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb558: {
        _384 = Le(const 48_u8, copy _5);
        switchInt(move _384) -> [0: bb560, otherwise: bb559];
    }

    bb559: {
        _385 = Le(copy _5, const 57_u8);
        switchInt(move _385) -> [0: bb560, otherwise: bb565];
    }

    bb560: {
        _386 = Le(const 65_u8, copy _5);
        switchInt(move _386) -> [0: bb562, otherwise: bb561];
    }

    bb561: {
        _387 = Le(copy _5, const 90_u8);
        switchInt(move _387) -> [0: bb562, otherwise: bb565];
    }

    bb562: {
        _388 = Le(const 97_u8, copy _5);
        switchInt(move _388) -> [0: bb564, otherwise: bb563];
    }

    bb563: {
        _389 = Le(copy _5, const 122_u8);
        switchInt(move _389) -> [0: bb564, otherwise: bb565];
    }

    bb564: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb565: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S43;
        goto -> bb1921;
    }

    bb566: {
        StorageLive(_391);
        StorageLive(_390);
        _390 = copy _2;
        _391 = Lt(move _390, copy _4);
        switchInt(move _391) -> [0: bb567, otherwise: bb568];
    }

    bb567: {
        StorageDead(_390);
        _5 = const 0_u8;
        goto -> bb570;
    }

    bb568: {
        StorageDead(_390);
        StorageLive(_393);
        StorageLive(_392);
        _392 = copy _2;
        _393 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _392) -> [return: bb569, unwind unreachable];
    }

    bb569: {
        StorageDead(_392);
        _5 = copy (*_393);
        StorageDead(_393);
        goto -> bb570;
    }

    bb570: {
        StorageDead(_391);
        switchInt(copy _5) -> [45: bb571, otherwise: bb572];
    }

    bb571: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S44;
        goto -> bb1921;
    }

    bb572: {
        _394 = Le(const 48_u8, copy _5);
        switchInt(move _394) -> [0: bb574, otherwise: bb573];
    }

    bb573: {
        _395 = Le(copy _5, const 57_u8);
        switchInt(move _395) -> [0: bb574, otherwise: bb579];
    }

    bb574: {
        _396 = Le(const 65_u8, copy _5);
        switchInt(move _396) -> [0: bb576, otherwise: bb575];
    }

    bb575: {
        _397 = Le(copy _5, const 90_u8);
        switchInt(move _397) -> [0: bb576, otherwise: bb579];
    }

    bb576: {
        _398 = Le(const 97_u8, copy _5);
        switchInt(move _398) -> [0: bb578, otherwise: bb577];
    }

    bb577: {
        _399 = Le(copy _5, const 122_u8);
        switchInt(move _399) -> [0: bb578, otherwise: bb579];
    }

    bb578: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb579: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S45;
        goto -> bb1921;
    }

    bb580: {
        StorageLive(_401);
        StorageLive(_400);
        _400 = copy _2;
        _401 = Lt(move _400, copy _4);
        switchInt(move _401) -> [0: bb581, otherwise: bb582];
    }

    bb581: {
        StorageDead(_400);
        _5 = const 0_u8;
        goto -> bb584;
    }

    bb582: {
        StorageDead(_400);
        StorageLive(_403);
        StorageLive(_402);
        _402 = copy _2;
        _403 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _402) -> [return: bb583, unwind unreachable];
    }

    bb583: {
        StorageDead(_402);
        _5 = copy (*_403);
        StorageDead(_403);
        goto -> bb584;
    }

    bb584: {
        StorageDead(_401);
        switchInt(copy _5) -> [45: bb585, 46: bb586, 62: bb587, otherwise: bb588];
    }

    bb585: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S44;
        goto -> bb1921;
    }

    bb586: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb587: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb588: {
        _404 = Le(const 48_u8, copy _5);
        switchInt(move _404) -> [0: bb590, otherwise: bb589];
    }

    bb589: {
        _405 = Le(copy _5, const 57_u8);
        switchInt(move _405) -> [0: bb590, otherwise: bb595];
    }

    bb590: {
        _406 = Le(const 65_u8, copy _5);
        switchInt(move _406) -> [0: bb592, otherwise: bb591];
    }

    bb591: {
        _407 = Le(copy _5, const 90_u8);
        switchInt(move _407) -> [0: bb592, otherwise: bb595];
    }

    bb592: {
        _408 = Le(const 97_u8, copy _5);
        switchInt(move _408) -> [0: bb594, otherwise: bb593];
    }

    bb593: {
        _409 = Le(copy _5, const 122_u8);
        switchInt(move _409) -> [0: bb594, otherwise: bb595];
    }

    bb594: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb595: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S45;
        goto -> bb1921;
    }

    bb596: {
        StorageLive(_411);
        StorageLive(_410);
        _410 = copy _2;
        _411 = Lt(move _410, copy _4);
        switchInt(move _411) -> [0: bb597, otherwise: bb598];
    }

    bb597: {
        StorageDead(_410);
        _5 = const 0_u8;
        goto -> bb600;
    }

    bb598: {
        StorageDead(_410);
        StorageLive(_413);
        StorageLive(_412);
        _412 = copy _2;
        _413 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _412) -> [return: bb599, unwind unreachable];
    }

    bb599: {
        StorageDead(_412);
        _5 = copy (*_413);
        StorageDead(_413);
        goto -> bb600;
    }

    bb600: {
        StorageDead(_411);
        switchInt(copy _5) -> [45: bb601, otherwise: bb602];
    }

    bb601: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S46;
        goto -> bb1921;
    }

    bb602: {
        _414 = Le(const 48_u8, copy _5);
        switchInt(move _414) -> [0: bb604, otherwise: bb603];
    }

    bb603: {
        _415 = Le(copy _5, const 57_u8);
        switchInt(move _415) -> [0: bb604, otherwise: bb609];
    }

    bb604: {
        _416 = Le(const 65_u8, copy _5);
        switchInt(move _416) -> [0: bb606, otherwise: bb605];
    }

    bb605: {
        _417 = Le(copy _5, const 90_u8);
        switchInt(move _417) -> [0: bb606, otherwise: bb609];
    }

    bb606: {
        _418 = Le(const 97_u8, copy _5);
        switchInt(move _418) -> [0: bb608, otherwise: bb607];
    }

    bb607: {
        _419 = Le(copy _5, const 122_u8);
        switchInt(move _419) -> [0: bb608, otherwise: bb609];
    }

    bb608: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb609: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S47;
        goto -> bb1921;
    }

    bb610: {
        StorageLive(_421);
        StorageLive(_420);
        _420 = copy _2;
        _421 = Lt(move _420, copy _4);
        switchInt(move _421) -> [0: bb611, otherwise: bb612];
    }

    bb611: {
        StorageDead(_420);
        _5 = const 0_u8;
        goto -> bb614;
    }

    bb612: {
        StorageDead(_420);
        StorageLive(_423);
        StorageLive(_422);
        _422 = copy _2;
        _423 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _422) -> [return: bb613, unwind unreachable];
    }

    bb613: {
        StorageDead(_422);
        _5 = copy (*_423);
        StorageDead(_423);
        goto -> bb614;
    }

    bb614: {
        StorageDead(_421);
        switchInt(copy _5) -> [45: bb615, 46: bb616, 62: bb617, otherwise: bb618];
    }

    bb615: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S46;
        goto -> bb1921;
    }

    bb616: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb617: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb618: {
        _424 = Le(const 48_u8, copy _5);
        switchInt(move _424) -> [0: bb620, otherwise: bb619];
    }

    bb619: {
        _425 = Le(copy _5, const 57_u8);
        switchInt(move _425) -> [0: bb620, otherwise: bb625];
    }

    bb620: {
        _426 = Le(const 65_u8, copy _5);
        switchInt(move _426) -> [0: bb622, otherwise: bb621];
    }

    bb621: {
        _427 = Le(copy _5, const 90_u8);
        switchInt(move _427) -> [0: bb622, otherwise: bb625];
    }

    bb622: {
        _428 = Le(const 97_u8, copy _5);
        switchInt(move _428) -> [0: bb624, otherwise: bb623];
    }

    bb623: {
        _429 = Le(copy _5, const 122_u8);
        switchInt(move _429) -> [0: bb624, otherwise: bb625];
    }

    bb624: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb625: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S47;
        goto -> bb1921;
    }

    bb626: {
        StorageLive(_431);
        StorageLive(_430);
        _430 = copy _2;
        _431 = Lt(move _430, copy _4);
        switchInt(move _431) -> [0: bb627, otherwise: bb628];
    }

    bb627: {
        StorageDead(_430);
        _5 = const 0_u8;
        goto -> bb630;
    }

    bb628: {
        StorageDead(_430);
        StorageLive(_433);
        StorageLive(_432);
        _432 = copy _2;
        _433 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _432) -> [return: bb629, unwind unreachable];
    }

    bb629: {
        StorageDead(_432);
        _5 = copy (*_433);
        StorageDead(_433);
        goto -> bb630;
    }

    bb630: {
        StorageDead(_431);
        switchInt(copy _5) -> [45: bb631, otherwise: bb632];
    }

    bb631: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S48;
        goto -> bb1921;
    }

    bb632: {
        _434 = Le(const 48_u8, copy _5);
        switchInt(move _434) -> [0: bb634, otherwise: bb633];
    }

    bb633: {
        _435 = Le(copy _5, const 57_u8);
        switchInt(move _435) -> [0: bb634, otherwise: bb639];
    }

    bb634: {
        _436 = Le(const 65_u8, copy _5);
        switchInt(move _436) -> [0: bb636, otherwise: bb635];
    }

    bb635: {
        _437 = Le(copy _5, const 90_u8);
        switchInt(move _437) -> [0: bb636, otherwise: bb639];
    }

    bb636: {
        _438 = Le(const 97_u8, copy _5);
        switchInt(move _438) -> [0: bb638, otherwise: bb637];
    }

    bb637: {
        _439 = Le(copy _5, const 122_u8);
        switchInt(move _439) -> [0: bb638, otherwise: bb639];
    }

    bb638: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb639: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S49;
        goto -> bb1921;
    }

    bb640: {
        StorageLive(_441);
        StorageLive(_440);
        _440 = copy _2;
        _441 = Lt(move _440, copy _4);
        switchInt(move _441) -> [0: bb641, otherwise: bb642];
    }

    bb641: {
        StorageDead(_440);
        _5 = const 0_u8;
        goto -> bb644;
    }

    bb642: {
        StorageDead(_440);
        StorageLive(_443);
        StorageLive(_442);
        _442 = copy _2;
        _443 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _442) -> [return: bb643, unwind unreachable];
    }

    bb643: {
        StorageDead(_442);
        _5 = copy (*_443);
        StorageDead(_443);
        goto -> bb644;
    }

    bb644: {
        StorageDead(_441);
        switchInt(copy _5) -> [45: bb645, 46: bb646, 62: bb647, otherwise: bb648];
    }

    bb645: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S48;
        goto -> bb1921;
    }

    bb646: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb647: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb648: {
        _444 = Le(const 48_u8, copy _5);
        switchInt(move _444) -> [0: bb650, otherwise: bb649];
    }

    bb649: {
        _445 = Le(copy _5, const 57_u8);
        switchInt(move _445) -> [0: bb650, otherwise: bb655];
    }

    bb650: {
        _446 = Le(const 65_u8, copy _5);
        switchInt(move _446) -> [0: bb652, otherwise: bb651];
    }

    bb651: {
        _447 = Le(copy _5, const 90_u8);
        switchInt(move _447) -> [0: bb652, otherwise: bb655];
    }

    bb652: {
        _448 = Le(const 97_u8, copy _5);
        switchInt(move _448) -> [0: bb654, otherwise: bb653];
    }

    bb653: {
        _449 = Le(copy _5, const 122_u8);
        switchInt(move _449) -> [0: bb654, otherwise: bb655];
    }

    bb654: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb655: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S49;
        goto -> bb1921;
    }

    bb656: {
        StorageLive(_451);
        StorageLive(_450);
        _450 = copy _2;
        _451 = Lt(move _450, copy _4);
        switchInt(move _451) -> [0: bb657, otherwise: bb658];
    }

    bb657: {
        StorageDead(_450);
        _5 = const 0_u8;
        goto -> bb660;
    }

    bb658: {
        StorageDead(_450);
        StorageLive(_453);
        StorageLive(_452);
        _452 = copy _2;
        _453 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _452) -> [return: bb659, unwind unreachable];
    }

    bb659: {
        StorageDead(_452);
        _5 = copy (*_453);
        StorageDead(_453);
        goto -> bb660;
    }

    bb660: {
        StorageDead(_451);
        switchInt(copy _5) -> [45: bb661, otherwise: bb662];
    }

    bb661: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S50;
        goto -> bb1921;
    }

    bb662: {
        _454 = Le(const 48_u8, copy _5);
        switchInt(move _454) -> [0: bb664, otherwise: bb663];
    }

    bb663: {
        _455 = Le(copy _5, const 57_u8);
        switchInt(move _455) -> [0: bb664, otherwise: bb669];
    }

    bb664: {
        _456 = Le(const 65_u8, copy _5);
        switchInt(move _456) -> [0: bb666, otherwise: bb665];
    }

    bb665: {
        _457 = Le(copy _5, const 90_u8);
        switchInt(move _457) -> [0: bb666, otherwise: bb669];
    }

    bb666: {
        _458 = Le(const 97_u8, copy _5);
        switchInt(move _458) -> [0: bb668, otherwise: bb667];
    }

    bb667: {
        _459 = Le(copy _5, const 122_u8);
        switchInt(move _459) -> [0: bb668, otherwise: bb669];
    }

    bb668: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb669: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S51;
        goto -> bb1921;
    }

    bb670: {
        StorageLive(_461);
        StorageLive(_460);
        _460 = copy _2;
        _461 = Lt(move _460, copy _4);
        switchInt(move _461) -> [0: bb671, otherwise: bb672];
    }

    bb671: {
        StorageDead(_460);
        _5 = const 0_u8;
        goto -> bb674;
    }

    bb672: {
        StorageDead(_460);
        StorageLive(_463);
        StorageLive(_462);
        _462 = copy _2;
        _463 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _462) -> [return: bb673, unwind unreachable];
    }

    bb673: {
        StorageDead(_462);
        _5 = copy (*_463);
        StorageDead(_463);
        goto -> bb674;
    }

    bb674: {
        StorageDead(_461);
        switchInt(copy _5) -> [45: bb675, 46: bb676, 62: bb677, otherwise: bb678];
    }

    bb675: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S50;
        goto -> bb1921;
    }

    bb676: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb677: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb678: {
        _464 = Le(const 48_u8, copy _5);
        switchInt(move _464) -> [0: bb680, otherwise: bb679];
    }

    bb679: {
        _465 = Le(copy _5, const 57_u8);
        switchInt(move _465) -> [0: bb680, otherwise: bb685];
    }

    bb680: {
        _466 = Le(const 65_u8, copy _5);
        switchInt(move _466) -> [0: bb682, otherwise: bb681];
    }

    bb681: {
        _467 = Le(copy _5, const 90_u8);
        switchInt(move _467) -> [0: bb682, otherwise: bb685];
    }

    bb682: {
        _468 = Le(const 97_u8, copy _5);
        switchInt(move _468) -> [0: bb684, otherwise: bb683];
    }

    bb683: {
        _469 = Le(copy _5, const 122_u8);
        switchInt(move _469) -> [0: bb684, otherwise: bb685];
    }

    bb684: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb685: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S51;
        goto -> bb1921;
    }

    bb686: {
        StorageLive(_471);
        StorageLive(_470);
        _470 = copy _2;
        _471 = Lt(move _470, copy _4);
        switchInt(move _471) -> [0: bb687, otherwise: bb688];
    }

    bb687: {
        StorageDead(_470);
        _5 = const 0_u8;
        goto -> bb690;
    }

    bb688: {
        StorageDead(_470);
        StorageLive(_473);
        StorageLive(_472);
        _472 = copy _2;
        _473 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _472) -> [return: bb689, unwind unreachable];
    }

    bb689: {
        StorageDead(_472);
        _5 = copy (*_473);
        StorageDead(_473);
        goto -> bb690;
    }

    bb690: {
        StorageDead(_471);
        switchInt(copy _5) -> [45: bb691, otherwise: bb692];
    }

    bb691: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S52;
        goto -> bb1921;
    }

    bb692: {
        _474 = Le(const 48_u8, copy _5);
        switchInt(move _474) -> [0: bb694, otherwise: bb693];
    }

    bb693: {
        _475 = Le(copy _5, const 57_u8);
        switchInt(move _475) -> [0: bb694, otherwise: bb699];
    }

    bb694: {
        _476 = Le(const 65_u8, copy _5);
        switchInt(move _476) -> [0: bb696, otherwise: bb695];
    }

    bb695: {
        _477 = Le(copy _5, const 90_u8);
        switchInt(move _477) -> [0: bb696, otherwise: bb699];
    }

    bb696: {
        _478 = Le(const 97_u8, copy _5);
        switchInt(move _478) -> [0: bb698, otherwise: bb697];
    }

    bb697: {
        _479 = Le(copy _5, const 122_u8);
        switchInt(move _479) -> [0: bb698, otherwise: bb699];
    }

    bb698: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb699: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S53;
        goto -> bb1921;
    }

    bb700: {
        StorageLive(_481);
        StorageLive(_480);
        _480 = copy _2;
        _481 = Lt(move _480, copy _4);
        switchInt(move _481) -> [0: bb701, otherwise: bb702];
    }

    bb701: {
        StorageDead(_480);
        _5 = const 0_u8;
        goto -> bb704;
    }

    bb702: {
        StorageDead(_480);
        StorageLive(_483);
        StorageLive(_482);
        _482 = copy _2;
        _483 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _482) -> [return: bb703, unwind unreachable];
    }

    bb703: {
        StorageDead(_482);
        _5 = copy (*_483);
        StorageDead(_483);
        goto -> bb704;
    }

    bb704: {
        StorageDead(_481);
        switchInt(copy _5) -> [45: bb705, 46: bb706, 62: bb707, otherwise: bb708];
    }

    bb705: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S52;
        goto -> bb1921;
    }

    bb706: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb707: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb708: {
        _484 = Le(const 48_u8, copy _5);
        switchInt(move _484) -> [0: bb710, otherwise: bb709];
    }

    bb709: {
        _485 = Le(copy _5, const 57_u8);
        switchInt(move _485) -> [0: bb710, otherwise: bb715];
    }

    bb710: {
        _486 = Le(const 65_u8, copy _5);
        switchInt(move _486) -> [0: bb712, otherwise: bb711];
    }

    bb711: {
        _487 = Le(copy _5, const 90_u8);
        switchInt(move _487) -> [0: bb712, otherwise: bb715];
    }

    bb712: {
        _488 = Le(const 97_u8, copy _5);
        switchInt(move _488) -> [0: bb714, otherwise: bb713];
    }

    bb713: {
        _489 = Le(copy _5, const 122_u8);
        switchInt(move _489) -> [0: bb714, otherwise: bb715];
    }

    bb714: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb715: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S53;
        goto -> bb1921;
    }

    bb716: {
        StorageLive(_491);
        StorageLive(_490);
        _490 = copy _2;
        _491 = Lt(move _490, copy _4);
        switchInt(move _491) -> [0: bb717, otherwise: bb718];
    }

    bb717: {
        StorageDead(_490);
        _5 = const 0_u8;
        goto -> bb720;
    }

    bb718: {
        StorageDead(_490);
        StorageLive(_493);
        StorageLive(_492);
        _492 = copy _2;
        _493 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _492) -> [return: bb719, unwind unreachable];
    }

    bb719: {
        StorageDead(_492);
        _5 = copy (*_493);
        StorageDead(_493);
        goto -> bb720;
    }

    bb720: {
        StorageDead(_491);
        switchInt(copy _5) -> [45: bb721, otherwise: bb722];
    }

    bb721: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S54;
        goto -> bb1921;
    }

    bb722: {
        _494 = Le(const 48_u8, copy _5);
        switchInt(move _494) -> [0: bb724, otherwise: bb723];
    }

    bb723: {
        _495 = Le(copy _5, const 57_u8);
        switchInt(move _495) -> [0: bb724, otherwise: bb729];
    }

    bb724: {
        _496 = Le(const 65_u8, copy _5);
        switchInt(move _496) -> [0: bb726, otherwise: bb725];
    }

    bb725: {
        _497 = Le(copy _5, const 90_u8);
        switchInt(move _497) -> [0: bb726, otherwise: bb729];
    }

    bb726: {
        _498 = Le(const 97_u8, copy _5);
        switchInt(move _498) -> [0: bb728, otherwise: bb727];
    }

    bb727: {
        _499 = Le(copy _5, const 122_u8);
        switchInt(move _499) -> [0: bb728, otherwise: bb729];
    }

    bb728: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb729: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S55;
        goto -> bb1921;
    }

    bb730: {
        StorageLive(_501);
        StorageLive(_500);
        _500 = copy _2;
        _501 = Lt(move _500, copy _4);
        switchInt(move _501) -> [0: bb731, otherwise: bb732];
    }

    bb731: {
        StorageDead(_500);
        _5 = const 0_u8;
        goto -> bb734;
    }

    bb732: {
        StorageDead(_500);
        StorageLive(_503);
        StorageLive(_502);
        _502 = copy _2;
        _503 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _502) -> [return: bb733, unwind unreachable];
    }

    bb733: {
        StorageDead(_502);
        _5 = copy (*_503);
        StorageDead(_503);
        goto -> bb734;
    }

    bb734: {
        StorageDead(_501);
        switchInt(copy _5) -> [45: bb735, 46: bb736, 62: bb737, otherwise: bb738];
    }

    bb735: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S54;
        goto -> bb1921;
    }

    bb736: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb737: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb738: {
        _504 = Le(const 48_u8, copy _5);
        switchInt(move _504) -> [0: bb740, otherwise: bb739];
    }

    bb739: {
        _505 = Le(copy _5, const 57_u8);
        switchInt(move _505) -> [0: bb740, otherwise: bb745];
    }

    bb740: {
        _506 = Le(const 65_u8, copy _5);
        switchInt(move _506) -> [0: bb742, otherwise: bb741];
    }

    bb741: {
        _507 = Le(copy _5, const 90_u8);
        switchInt(move _507) -> [0: bb742, otherwise: bb745];
    }

    bb742: {
        _508 = Le(const 97_u8, copy _5);
        switchInt(move _508) -> [0: bb744, otherwise: bb743];
    }

    bb743: {
        _509 = Le(copy _5, const 122_u8);
        switchInt(move _509) -> [0: bb744, otherwise: bb745];
    }

    bb744: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb745: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S55;
        goto -> bb1921;
    }

    bb746: {
        StorageLive(_511);
        StorageLive(_510);
        _510 = copy _2;
        _511 = Lt(move _510, copy _4);
        switchInt(move _511) -> [0: bb747, otherwise: bb748];
    }

    bb747: {
        StorageDead(_510);
        _5 = const 0_u8;
        goto -> bb750;
    }

    bb748: {
        StorageDead(_510);
        StorageLive(_513);
        StorageLive(_512);
        _512 = copy _2;
        _513 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _512) -> [return: bb749, unwind unreachable];
    }

    bb749: {
        StorageDead(_512);
        _5 = copy (*_513);
        StorageDead(_513);
        goto -> bb750;
    }

    bb750: {
        StorageDead(_511);
        switchInt(copy _5) -> [45: bb751, otherwise: bb752];
    }

    bb751: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S56;
        goto -> bb1921;
    }

    bb752: {
        _514 = Le(const 48_u8, copy _5);
        switchInt(move _514) -> [0: bb754, otherwise: bb753];
    }

    bb753: {
        _515 = Le(copy _5, const 57_u8);
        switchInt(move _515) -> [0: bb754, otherwise: bb759];
    }

    bb754: {
        _516 = Le(const 65_u8, copy _5);
        switchInt(move _516) -> [0: bb756, otherwise: bb755];
    }

    bb755: {
        _517 = Le(copy _5, const 90_u8);
        switchInt(move _517) -> [0: bb756, otherwise: bb759];
    }

    bb756: {
        _518 = Le(const 97_u8, copy _5);
        switchInt(move _518) -> [0: bb758, otherwise: bb757];
    }

    bb757: {
        _519 = Le(copy _5, const 122_u8);
        switchInt(move _519) -> [0: bb758, otherwise: bb759];
    }

    bb758: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb759: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S57;
        goto -> bb1921;
    }

    bb760: {
        StorageLive(_521);
        StorageLive(_520);
        _520 = copy _2;
        _521 = Lt(move _520, copy _4);
        switchInt(move _521) -> [0: bb761, otherwise: bb762];
    }

    bb761: {
        StorageDead(_520);
        _5 = const 0_u8;
        goto -> bb764;
    }

    bb762: {
        StorageDead(_520);
        StorageLive(_523);
        StorageLive(_522);
        _522 = copy _2;
        _523 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _522) -> [return: bb763, unwind unreachable];
    }

    bb763: {
        StorageDead(_522);
        _5 = copy (*_523);
        StorageDead(_523);
        goto -> bb764;
    }

    bb764: {
        StorageDead(_521);
        switchInt(copy _5) -> [45: bb765, 46: bb766, 62: bb767, otherwise: bb768];
    }

    bb765: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S56;
        goto -> bb1921;
    }

    bb766: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb767: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb768: {
        _524 = Le(const 48_u8, copy _5);
        switchInt(move _524) -> [0: bb770, otherwise: bb769];
    }

    bb769: {
        _525 = Le(copy _5, const 57_u8);
        switchInt(move _525) -> [0: bb770, otherwise: bb775];
    }

    bb770: {
        _526 = Le(const 65_u8, copy _5);
        switchInt(move _526) -> [0: bb772, otherwise: bb771];
    }

    bb771: {
        _527 = Le(copy _5, const 90_u8);
        switchInt(move _527) -> [0: bb772, otherwise: bb775];
    }

    bb772: {
        _528 = Le(const 97_u8, copy _5);
        switchInt(move _528) -> [0: bb774, otherwise: bb773];
    }

    bb773: {
        _529 = Le(copy _5, const 122_u8);
        switchInt(move _529) -> [0: bb774, otherwise: bb775];
    }

    bb774: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb775: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S57;
        goto -> bb1921;
    }

    bb776: {
        StorageLive(_531);
        StorageLive(_530);
        _530 = copy _2;
        _531 = Lt(move _530, copy _4);
        switchInt(move _531) -> [0: bb777, otherwise: bb778];
    }

    bb777: {
        StorageDead(_530);
        _5 = const 0_u8;
        goto -> bb780;
    }

    bb778: {
        StorageDead(_530);
        StorageLive(_533);
        StorageLive(_532);
        _532 = copy _2;
        _533 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _532) -> [return: bb779, unwind unreachable];
    }

    bb779: {
        StorageDead(_532);
        _5 = copy (*_533);
        StorageDead(_533);
        goto -> bb780;
    }

    bb780: {
        StorageDead(_531);
        switchInt(copy _5) -> [45: bb781, otherwise: bb782];
    }

    bb781: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S58;
        goto -> bb1921;
    }

    bb782: {
        _534 = Le(const 48_u8, copy _5);
        switchInt(move _534) -> [0: bb784, otherwise: bb783];
    }

    bb783: {
        _535 = Le(copy _5, const 57_u8);
        switchInt(move _535) -> [0: bb784, otherwise: bb789];
    }

    bb784: {
        _536 = Le(const 65_u8, copy _5);
        switchInt(move _536) -> [0: bb786, otherwise: bb785];
    }

    bb785: {
        _537 = Le(copy _5, const 90_u8);
        switchInt(move _537) -> [0: bb786, otherwise: bb789];
    }

    bb786: {
        _538 = Le(const 97_u8, copy _5);
        switchInt(move _538) -> [0: bb788, otherwise: bb787];
    }

    bb787: {
        _539 = Le(copy _5, const 122_u8);
        switchInt(move _539) -> [0: bb788, otherwise: bb789];
    }

    bb788: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb789: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S59;
        goto -> bb1921;
    }

    bb790: {
        StorageLive(_541);
        StorageLive(_540);
        _540 = copy _2;
        _541 = Lt(move _540, copy _4);
        switchInt(move _541) -> [0: bb791, otherwise: bb792];
    }

    bb791: {
        StorageDead(_540);
        _5 = const 0_u8;
        goto -> bb794;
    }

    bb792: {
        StorageDead(_540);
        StorageLive(_543);
        StorageLive(_542);
        _542 = copy _2;
        _543 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _542) -> [return: bb793, unwind unreachable];
    }

    bb793: {
        StorageDead(_542);
        _5 = copy (*_543);
        StorageDead(_543);
        goto -> bb794;
    }

    bb794: {
        StorageDead(_541);
        switchInt(copy _5) -> [45: bb795, 46: bb796, 62: bb797, otherwise: bb798];
    }

    bb795: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S58;
        goto -> bb1921;
    }

    bb796: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb797: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb798: {
        _544 = Le(const 48_u8, copy _5);
        switchInt(move _544) -> [0: bb800, otherwise: bb799];
    }

    bb799: {
        _545 = Le(copy _5, const 57_u8);
        switchInt(move _545) -> [0: bb800, otherwise: bb805];
    }

    bb800: {
        _546 = Le(const 65_u8, copy _5);
        switchInt(move _546) -> [0: bb802, otherwise: bb801];
    }

    bb801: {
        _547 = Le(copy _5, const 90_u8);
        switchInt(move _547) -> [0: bb802, otherwise: bb805];
    }

    bb802: {
        _548 = Le(const 97_u8, copy _5);
        switchInt(move _548) -> [0: bb804, otherwise: bb803];
    }

    bb803: {
        _549 = Le(copy _5, const 122_u8);
        switchInt(move _549) -> [0: bb804, otherwise: bb805];
    }

    bb804: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb805: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S59;
        goto -> bb1921;
    }

    bb806: {
        StorageLive(_551);
        StorageLive(_550);
        _550 = copy _2;
        _551 = Lt(move _550, copy _4);
        switchInt(move _551) -> [0: bb807, otherwise: bb808];
    }

    bb807: {
        StorageDead(_550);
        _5 = const 0_u8;
        goto -> bb810;
    }

    bb808: {
        StorageDead(_550);
        StorageLive(_553);
        StorageLive(_552);
        _552 = copy _2;
        _553 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _552) -> [return: bb809, unwind unreachable];
    }

    bb809: {
        StorageDead(_552);
        _5 = copy (*_553);
        StorageDead(_553);
        goto -> bb810;
    }

    bb810: {
        StorageDead(_551);
        switchInt(copy _5) -> [45: bb811, otherwise: bb812];
    }

    bb811: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S60;
        goto -> bb1921;
    }

    bb812: {
        _554 = Le(const 48_u8, copy _5);
        switchInt(move _554) -> [0: bb814, otherwise: bb813];
    }

    bb813: {
        _555 = Le(copy _5, const 57_u8);
        switchInt(move _555) -> [0: bb814, otherwise: bb819];
    }

    bb814: {
        _556 = Le(const 65_u8, copy _5);
        switchInt(move _556) -> [0: bb816, otherwise: bb815];
    }

    bb815: {
        _557 = Le(copy _5, const 90_u8);
        switchInt(move _557) -> [0: bb816, otherwise: bb819];
    }

    bb816: {
        _558 = Le(const 97_u8, copy _5);
        switchInt(move _558) -> [0: bb818, otherwise: bb817];
    }

    bb817: {
        _559 = Le(copy _5, const 122_u8);
        switchInt(move _559) -> [0: bb818, otherwise: bb819];
    }

    bb818: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb819: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S61;
        goto -> bb1921;
    }

    bb820: {
        StorageLive(_561);
        StorageLive(_560);
        _560 = copy _2;
        _561 = Lt(move _560, copy _4);
        switchInt(move _561) -> [0: bb821, otherwise: bb822];
    }

    bb821: {
        StorageDead(_560);
        _5 = const 0_u8;
        goto -> bb824;
    }

    bb822: {
        StorageDead(_560);
        StorageLive(_563);
        StorageLive(_562);
        _562 = copy _2;
        _563 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _562) -> [return: bb823, unwind unreachable];
    }

    bb823: {
        StorageDead(_562);
        _5 = copy (*_563);
        StorageDead(_563);
        goto -> bb824;
    }

    bb824: {
        StorageDead(_561);
        switchInt(copy _5) -> [45: bb825, 46: bb826, 62: bb827, otherwise: bb828];
    }

    bb825: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S60;
        goto -> bb1921;
    }

    bb826: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb827: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb828: {
        _564 = Le(const 48_u8, copy _5);
        switchInt(move _564) -> [0: bb830, otherwise: bb829];
    }

    bb829: {
        _565 = Le(copy _5, const 57_u8);
        switchInt(move _565) -> [0: bb830, otherwise: bb835];
    }

    bb830: {
        _566 = Le(const 65_u8, copy _5);
        switchInt(move _566) -> [0: bb832, otherwise: bb831];
    }

    bb831: {
        _567 = Le(copy _5, const 90_u8);
        switchInt(move _567) -> [0: bb832, otherwise: bb835];
    }

    bb832: {
        _568 = Le(const 97_u8, copy _5);
        switchInt(move _568) -> [0: bb834, otherwise: bb833];
    }

    bb833: {
        _569 = Le(copy _5, const 122_u8);
        switchInt(move _569) -> [0: bb834, otherwise: bb835];
    }

    bb834: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb835: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S61;
        goto -> bb1921;
    }

    bb836: {
        StorageLive(_571);
        StorageLive(_570);
        _570 = copy _2;
        _571 = Lt(move _570, copy _4);
        switchInt(move _571) -> [0: bb837, otherwise: bb838];
    }

    bb837: {
        StorageDead(_570);
        _5 = const 0_u8;
        goto -> bb840;
    }

    bb838: {
        StorageDead(_570);
        StorageLive(_573);
        StorageLive(_572);
        _572 = copy _2;
        _573 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _572) -> [return: bb839, unwind unreachable];
    }

    bb839: {
        StorageDead(_572);
        _5 = copy (*_573);
        StorageDead(_573);
        goto -> bb840;
    }

    bb840: {
        StorageDead(_571);
        switchInt(copy _5) -> [45: bb841, otherwise: bb842];
    }

    bb841: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S62;
        goto -> bb1921;
    }

    bb842: {
        _574 = Le(const 48_u8, copy _5);
        switchInt(move _574) -> [0: bb844, otherwise: bb843];
    }

    bb843: {
        _575 = Le(copy _5, const 57_u8);
        switchInt(move _575) -> [0: bb844, otherwise: bb849];
    }

    bb844: {
        _576 = Le(const 65_u8, copy _5);
        switchInt(move _576) -> [0: bb846, otherwise: bb845];
    }

    bb845: {
        _577 = Le(copy _5, const 90_u8);
        switchInt(move _577) -> [0: bb846, otherwise: bb849];
    }

    bb846: {
        _578 = Le(const 97_u8, copy _5);
        switchInt(move _578) -> [0: bb848, otherwise: bb847];
    }

    bb847: {
        _579 = Le(copy _5, const 122_u8);
        switchInt(move _579) -> [0: bb848, otherwise: bb849];
    }

    bb848: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb849: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S63;
        goto -> bb1921;
    }

    bb850: {
        StorageLive(_581);
        StorageLive(_580);
        _580 = copy _2;
        _581 = Lt(move _580, copy _4);
        switchInt(move _581) -> [0: bb851, otherwise: bb852];
    }

    bb851: {
        StorageDead(_580);
        _5 = const 0_u8;
        goto -> bb854;
    }

    bb852: {
        StorageDead(_580);
        StorageLive(_583);
        StorageLive(_582);
        _582 = copy _2;
        _583 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _582) -> [return: bb853, unwind unreachable];
    }

    bb853: {
        StorageDead(_582);
        _5 = copy (*_583);
        StorageDead(_583);
        goto -> bb854;
    }

    bb854: {
        StorageDead(_581);
        switchInt(copy _5) -> [45: bb855, 46: bb856, 62: bb857, otherwise: bb858];
    }

    bb855: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S62;
        goto -> bb1921;
    }

    bb856: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb857: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb858: {
        _584 = Le(const 48_u8, copy _5);
        switchInt(move _584) -> [0: bb860, otherwise: bb859];
    }

    bb859: {
        _585 = Le(copy _5, const 57_u8);
        switchInt(move _585) -> [0: bb860, otherwise: bb865];
    }

    bb860: {
        _586 = Le(const 65_u8, copy _5);
        switchInt(move _586) -> [0: bb862, otherwise: bb861];
    }

    bb861: {
        _587 = Le(copy _5, const 90_u8);
        switchInt(move _587) -> [0: bb862, otherwise: bb865];
    }

    bb862: {
        _588 = Le(const 97_u8, copy _5);
        switchInt(move _588) -> [0: bb864, otherwise: bb863];
    }

    bb863: {
        _589 = Le(copy _5, const 122_u8);
        switchInt(move _589) -> [0: bb864, otherwise: bb865];
    }

    bb864: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb865: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S63;
        goto -> bb1921;
    }

    bb866: {
        StorageLive(_591);
        StorageLive(_590);
        _590 = copy _2;
        _591 = Lt(move _590, copy _4);
        switchInt(move _591) -> [0: bb867, otherwise: bb868];
    }

    bb867: {
        StorageDead(_590);
        _5 = const 0_u8;
        goto -> bb870;
    }

    bb868: {
        StorageDead(_590);
        StorageLive(_593);
        StorageLive(_592);
        _592 = copy _2;
        _593 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _592) -> [return: bb869, unwind unreachable];
    }

    bb869: {
        StorageDead(_592);
        _5 = copy (*_593);
        StorageDead(_593);
        goto -> bb870;
    }

    bb870: {
        StorageDead(_591);
        switchInt(copy _5) -> [45: bb871, otherwise: bb872];
    }

    bb871: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S64;
        goto -> bb1921;
    }

    bb872: {
        _594 = Le(const 48_u8, copy _5);
        switchInt(move _594) -> [0: bb874, otherwise: bb873];
    }

    bb873: {
        _595 = Le(copy _5, const 57_u8);
        switchInt(move _595) -> [0: bb874, otherwise: bb879];
    }

    bb874: {
        _596 = Le(const 65_u8, copy _5);
        switchInt(move _596) -> [0: bb876, otherwise: bb875];
    }

    bb875: {
        _597 = Le(copy _5, const 90_u8);
        switchInt(move _597) -> [0: bb876, otherwise: bb879];
    }

    bb876: {
        _598 = Le(const 97_u8, copy _5);
        switchInt(move _598) -> [0: bb878, otherwise: bb877];
    }

    bb877: {
        _599 = Le(copy _5, const 122_u8);
        switchInt(move _599) -> [0: bb878, otherwise: bb879];
    }

    bb878: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb879: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S65;
        goto -> bb1921;
    }

    bb880: {
        StorageLive(_601);
        StorageLive(_600);
        _600 = copy _2;
        _601 = Lt(move _600, copy _4);
        switchInt(move _601) -> [0: bb881, otherwise: bb882];
    }

    bb881: {
        StorageDead(_600);
        _5 = const 0_u8;
        goto -> bb884;
    }

    bb882: {
        StorageDead(_600);
        StorageLive(_603);
        StorageLive(_602);
        _602 = copy _2;
        _603 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _602) -> [return: bb883, unwind unreachable];
    }

    bb883: {
        StorageDead(_602);
        _5 = copy (*_603);
        StorageDead(_603);
        goto -> bb884;
    }

    bb884: {
        StorageDead(_601);
        switchInt(copy _5) -> [45: bb885, 46: bb886, 62: bb887, otherwise: bb888];
    }

    bb885: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S64;
        goto -> bb1921;
    }

    bb886: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb887: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb888: {
        _604 = Le(const 48_u8, copy _5);
        switchInt(move _604) -> [0: bb890, otherwise: bb889];
    }

    bb889: {
        _605 = Le(copy _5, const 57_u8);
        switchInt(move _605) -> [0: bb890, otherwise: bb895];
    }

    bb890: {
        _606 = Le(const 65_u8, copy _5);
        switchInt(move _606) -> [0: bb892, otherwise: bb891];
    }

    bb891: {
        _607 = Le(copy _5, const 90_u8);
        switchInt(move _607) -> [0: bb892, otherwise: bb895];
    }

    bb892: {
        _608 = Le(const 97_u8, copy _5);
        switchInt(move _608) -> [0: bb894, otherwise: bb893];
    }

    bb893: {
        _609 = Le(copy _5, const 122_u8);
        switchInt(move _609) -> [0: bb894, otherwise: bb895];
    }

    bb894: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb895: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S65;
        goto -> bb1921;
    }

    bb896: {
        StorageLive(_611);
        StorageLive(_610);
        _610 = copy _2;
        _611 = Lt(move _610, copy _4);
        switchInt(move _611) -> [0: bb897, otherwise: bb898];
    }

    bb897: {
        StorageDead(_610);
        _5 = const 0_u8;
        goto -> bb900;
    }

    bb898: {
        StorageDead(_610);
        StorageLive(_613);
        StorageLive(_612);
        _612 = copy _2;
        _613 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _612) -> [return: bb899, unwind unreachable];
    }

    bb899: {
        StorageDead(_612);
        _5 = copy (*_613);
        StorageDead(_613);
        goto -> bb900;
    }

    bb900: {
        StorageDead(_611);
        switchInt(copy _5) -> [45: bb901, otherwise: bb902];
    }

    bb901: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S66;
        goto -> bb1921;
    }

    bb902: {
        _614 = Le(const 48_u8, copy _5);
        switchInt(move _614) -> [0: bb904, otherwise: bb903];
    }

    bb903: {
        _615 = Le(copy _5, const 57_u8);
        switchInt(move _615) -> [0: bb904, otherwise: bb909];
    }

    bb904: {
        _616 = Le(const 65_u8, copy _5);
        switchInt(move _616) -> [0: bb906, otherwise: bb905];
    }

    bb905: {
        _617 = Le(copy _5, const 90_u8);
        switchInt(move _617) -> [0: bb906, otherwise: bb909];
    }

    bb906: {
        _618 = Le(const 97_u8, copy _5);
        switchInt(move _618) -> [0: bb908, otherwise: bb907];
    }

    bb907: {
        _619 = Le(copy _5, const 122_u8);
        switchInt(move _619) -> [0: bb908, otherwise: bb909];
    }

    bb908: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb909: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S67;
        goto -> bb1921;
    }

    bb910: {
        StorageLive(_621);
        StorageLive(_620);
        _620 = copy _2;
        _621 = Lt(move _620, copy _4);
        switchInt(move _621) -> [0: bb911, otherwise: bb912];
    }

    bb911: {
        StorageDead(_620);
        _5 = const 0_u8;
        goto -> bb914;
    }

    bb912: {
        StorageDead(_620);
        StorageLive(_623);
        StorageLive(_622);
        _622 = copy _2;
        _623 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _622) -> [return: bb913, unwind unreachable];
    }

    bb913: {
        StorageDead(_622);
        _5 = copy (*_623);
        StorageDead(_623);
        goto -> bb914;
    }

    bb914: {
        StorageDead(_621);
        switchInt(copy _5) -> [45: bb915, 46: bb916, 62: bb917, otherwise: bb918];
    }

    bb915: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S66;
        goto -> bb1921;
    }

    bb916: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb917: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb918: {
        _624 = Le(const 48_u8, copy _5);
        switchInt(move _624) -> [0: bb920, otherwise: bb919];
    }

    bb919: {
        _625 = Le(copy _5, const 57_u8);
        switchInt(move _625) -> [0: bb920, otherwise: bb925];
    }

    bb920: {
        _626 = Le(const 65_u8, copy _5);
        switchInt(move _626) -> [0: bb922, otherwise: bb921];
    }

    bb921: {
        _627 = Le(copy _5, const 90_u8);
        switchInt(move _627) -> [0: bb922, otherwise: bb925];
    }

    bb922: {
        _628 = Le(const 97_u8, copy _5);
        switchInt(move _628) -> [0: bb924, otherwise: bb923];
    }

    bb923: {
        _629 = Le(copy _5, const 122_u8);
        switchInt(move _629) -> [0: bb924, otherwise: bb925];
    }

    bb924: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb925: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S67;
        goto -> bb1921;
    }

    bb926: {
        StorageLive(_631);
        StorageLive(_630);
        _630 = copy _2;
        _631 = Lt(move _630, copy _4);
        switchInt(move _631) -> [0: bb927, otherwise: bb928];
    }

    bb927: {
        StorageDead(_630);
        _5 = const 0_u8;
        goto -> bb930;
    }

    bb928: {
        StorageDead(_630);
        StorageLive(_633);
        StorageLive(_632);
        _632 = copy _2;
        _633 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _632) -> [return: bb929, unwind unreachable];
    }

    bb929: {
        StorageDead(_632);
        _5 = copy (*_633);
        StorageDead(_633);
        goto -> bb930;
    }

    bb930: {
        StorageDead(_631);
        switchInt(copy _5) -> [45: bb931, otherwise: bb932];
    }

    bb931: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S68;
        goto -> bb1921;
    }

    bb932: {
        _634 = Le(const 48_u8, copy _5);
        switchInt(move _634) -> [0: bb934, otherwise: bb933];
    }

    bb933: {
        _635 = Le(copy _5, const 57_u8);
        switchInt(move _635) -> [0: bb934, otherwise: bb939];
    }

    bb934: {
        _636 = Le(const 65_u8, copy _5);
        switchInt(move _636) -> [0: bb936, otherwise: bb935];
    }

    bb935: {
        _637 = Le(copy _5, const 90_u8);
        switchInt(move _637) -> [0: bb936, otherwise: bb939];
    }

    bb936: {
        _638 = Le(const 97_u8, copy _5);
        switchInt(move _638) -> [0: bb938, otherwise: bb937];
    }

    bb937: {
        _639 = Le(copy _5, const 122_u8);
        switchInt(move _639) -> [0: bb938, otherwise: bb939];
    }

    bb938: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb939: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S69;
        goto -> bb1921;
    }

    bb940: {
        StorageLive(_641);
        StorageLive(_640);
        _640 = copy _2;
        _641 = Lt(move _640, copy _4);
        switchInt(move _641) -> [0: bb941, otherwise: bb942];
    }

    bb941: {
        StorageDead(_640);
        _5 = const 0_u8;
        goto -> bb944;
    }

    bb942: {
        StorageDead(_640);
        StorageLive(_643);
        StorageLive(_642);
        _642 = copy _2;
        _643 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _642) -> [return: bb943, unwind unreachable];
    }

    bb943: {
        StorageDead(_642);
        _5 = copy (*_643);
        StorageDead(_643);
        goto -> bb944;
    }

    bb944: {
        StorageDead(_641);
        switchInt(copy _5) -> [45: bb945, 46: bb946, 62: bb947, otherwise: bb948];
    }

    bb945: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S68;
        goto -> bb1921;
    }

    bb946: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb947: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb948: {
        _644 = Le(const 48_u8, copy _5);
        switchInt(move _644) -> [0: bb950, otherwise: bb949];
    }

    bb949: {
        _645 = Le(copy _5, const 57_u8);
        switchInt(move _645) -> [0: bb950, otherwise: bb955];
    }

    bb950: {
        _646 = Le(const 65_u8, copy _5);
        switchInt(move _646) -> [0: bb952, otherwise: bb951];
    }

    bb951: {
        _647 = Le(copy _5, const 90_u8);
        switchInt(move _647) -> [0: bb952, otherwise: bb955];
    }

    bb952: {
        _648 = Le(const 97_u8, copy _5);
        switchInt(move _648) -> [0: bb954, otherwise: bb953];
    }

    bb953: {
        _649 = Le(copy _5, const 122_u8);
        switchInt(move _649) -> [0: bb954, otherwise: bb955];
    }

    bb954: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb955: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S69;
        goto -> bb1921;
    }

    bb956: {
        StorageLive(_651);
        StorageLive(_650);
        _650 = copy _2;
        _651 = Lt(move _650, copy _4);
        switchInt(move _651) -> [0: bb957, otherwise: bb958];
    }

    bb957: {
        StorageDead(_650);
        _5 = const 0_u8;
        goto -> bb960;
    }

    bb958: {
        StorageDead(_650);
        StorageLive(_653);
        StorageLive(_652);
        _652 = copy _2;
        _653 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _652) -> [return: bb959, unwind unreachable];
    }

    bb959: {
        StorageDead(_652);
        _5 = copy (*_653);
        StorageDead(_653);
        goto -> bb960;
    }

    bb960: {
        StorageDead(_651);
        switchInt(copy _5) -> [45: bb961, otherwise: bb962];
    }

    bb961: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S70;
        goto -> bb1921;
    }

    bb962: {
        _654 = Le(const 48_u8, copy _5);
        switchInt(move _654) -> [0: bb964, otherwise: bb963];
    }

    bb963: {
        _655 = Le(copy _5, const 57_u8);
        switchInt(move _655) -> [0: bb964, otherwise: bb969];
    }

    bb964: {
        _656 = Le(const 65_u8, copy _5);
        switchInt(move _656) -> [0: bb966, otherwise: bb965];
    }

    bb965: {
        _657 = Le(copy _5, const 90_u8);
        switchInt(move _657) -> [0: bb966, otherwise: bb969];
    }

    bb966: {
        _658 = Le(const 97_u8, copy _5);
        switchInt(move _658) -> [0: bb968, otherwise: bb967];
    }

    bb967: {
        _659 = Le(copy _5, const 122_u8);
        switchInt(move _659) -> [0: bb968, otherwise: bb969];
    }

    bb968: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb969: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S71;
        goto -> bb1921;
    }

    bb970: {
        StorageLive(_661);
        StorageLive(_660);
        _660 = copy _2;
        _661 = Lt(move _660, copy _4);
        switchInt(move _661) -> [0: bb971, otherwise: bb972];
    }

    bb971: {
        StorageDead(_660);
        _5 = const 0_u8;
        goto -> bb974;
    }

    bb972: {
        StorageDead(_660);
        StorageLive(_663);
        StorageLive(_662);
        _662 = copy _2;
        _663 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _662) -> [return: bb973, unwind unreachable];
    }

    bb973: {
        StorageDead(_662);
        _5 = copy (*_663);
        StorageDead(_663);
        goto -> bb974;
    }

    bb974: {
        StorageDead(_661);
        switchInt(copy _5) -> [45: bb975, 46: bb976, 62: bb977, otherwise: bb978];
    }

    bb975: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S70;
        goto -> bb1921;
    }

    bb976: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb977: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb978: {
        _664 = Le(const 48_u8, copy _5);
        switchInt(move _664) -> [0: bb980, otherwise: bb979];
    }

    bb979: {
        _665 = Le(copy _5, const 57_u8);
        switchInt(move _665) -> [0: bb980, otherwise: bb985];
    }

    bb980: {
        _666 = Le(const 65_u8, copy _5);
        switchInt(move _666) -> [0: bb982, otherwise: bb981];
    }

    bb981: {
        _667 = Le(copy _5, const 90_u8);
        switchInt(move _667) -> [0: bb982, otherwise: bb985];
    }

    bb982: {
        _668 = Le(const 97_u8, copy _5);
        switchInt(move _668) -> [0: bb984, otherwise: bb983];
    }

    bb983: {
        _669 = Le(copy _5, const 122_u8);
        switchInt(move _669) -> [0: bb984, otherwise: bb985];
    }

    bb984: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb985: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S71;
        goto -> bb1921;
    }

    bb986: {
        StorageLive(_671);
        StorageLive(_670);
        _670 = copy _2;
        _671 = Lt(move _670, copy _4);
        switchInt(move _671) -> [0: bb987, otherwise: bb988];
    }

    bb987: {
        StorageDead(_670);
        _5 = const 0_u8;
        goto -> bb990;
    }

    bb988: {
        StorageDead(_670);
        StorageLive(_673);
        StorageLive(_672);
        _672 = copy _2;
        _673 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _672) -> [return: bb989, unwind unreachable];
    }

    bb989: {
        StorageDead(_672);
        _5 = copy (*_673);
        StorageDead(_673);
        goto -> bb990;
    }

    bb990: {
        StorageDead(_671);
        switchInt(copy _5) -> [45: bb991, otherwise: bb992];
    }

    bb991: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S72;
        goto -> bb1921;
    }

    bb992: {
        _674 = Le(const 48_u8, copy _5);
        switchInt(move _674) -> [0: bb994, otherwise: bb993];
    }

    bb993: {
        _675 = Le(copy _5, const 57_u8);
        switchInt(move _675) -> [0: bb994, otherwise: bb999];
    }

    bb994: {
        _676 = Le(const 65_u8, copy _5);
        switchInt(move _676) -> [0: bb996, otherwise: bb995];
    }

    bb995: {
        _677 = Le(copy _5, const 90_u8);
        switchInt(move _677) -> [0: bb996, otherwise: bb999];
    }

    bb996: {
        _678 = Le(const 97_u8, copy _5);
        switchInt(move _678) -> [0: bb998, otherwise: bb997];
    }

    bb997: {
        _679 = Le(copy _5, const 122_u8);
        switchInt(move _679) -> [0: bb998, otherwise: bb999];
    }

    bb998: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb999: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S73;
        goto -> bb1921;
    }

    bb1000: {
        StorageLive(_681);
        StorageLive(_680);
        _680 = copy _2;
        _681 = Lt(move _680, copy _4);
        switchInt(move _681) -> [0: bb1001, otherwise: bb1002];
    }

    bb1001: {
        StorageDead(_680);
        _5 = const 0_u8;
        goto -> bb1004;
    }

    bb1002: {
        StorageDead(_680);
        StorageLive(_683);
        StorageLive(_682);
        _682 = copy _2;
        _683 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _682) -> [return: bb1003, unwind unreachable];
    }

    bb1003: {
        StorageDead(_682);
        _5 = copy (*_683);
        StorageDead(_683);
        goto -> bb1004;
    }

    bb1004: {
        StorageDead(_681);
        switchInt(copy _5) -> [45: bb1005, 46: bb1006, 62: bb1007, otherwise: bb1008];
    }

    bb1005: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S72;
        goto -> bb1921;
    }

    bb1006: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1007: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1008: {
        _684 = Le(const 48_u8, copy _5);
        switchInt(move _684) -> [0: bb1010, otherwise: bb1009];
    }

    bb1009: {
        _685 = Le(copy _5, const 57_u8);
        switchInt(move _685) -> [0: bb1010, otherwise: bb1015];
    }

    bb1010: {
        _686 = Le(const 65_u8, copy _5);
        switchInt(move _686) -> [0: bb1012, otherwise: bb1011];
    }

    bb1011: {
        _687 = Le(copy _5, const 90_u8);
        switchInt(move _687) -> [0: bb1012, otherwise: bb1015];
    }

    bb1012: {
        _688 = Le(const 97_u8, copy _5);
        switchInt(move _688) -> [0: bb1014, otherwise: bb1013];
    }

    bb1013: {
        _689 = Le(copy _5, const 122_u8);
        switchInt(move _689) -> [0: bb1014, otherwise: bb1015];
    }

    bb1014: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1015: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S73;
        goto -> bb1921;
    }

    bb1016: {
        StorageLive(_691);
        StorageLive(_690);
        _690 = copy _2;
        _691 = Lt(move _690, copy _4);
        switchInt(move _691) -> [0: bb1017, otherwise: bb1018];
    }

    bb1017: {
        StorageDead(_690);
        _5 = const 0_u8;
        goto -> bb1020;
    }

    bb1018: {
        StorageDead(_690);
        StorageLive(_693);
        StorageLive(_692);
        _692 = copy _2;
        _693 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _692) -> [return: bb1019, unwind unreachable];
    }

    bb1019: {
        StorageDead(_692);
        _5 = copy (*_693);
        StorageDead(_693);
        goto -> bb1020;
    }

    bb1020: {
        StorageDead(_691);
        switchInt(copy _5) -> [45: bb1021, otherwise: bb1022];
    }

    bb1021: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S74;
        goto -> bb1921;
    }

    bb1022: {
        _694 = Le(const 48_u8, copy _5);
        switchInt(move _694) -> [0: bb1024, otherwise: bb1023];
    }

    bb1023: {
        _695 = Le(copy _5, const 57_u8);
        switchInt(move _695) -> [0: bb1024, otherwise: bb1029];
    }

    bb1024: {
        _696 = Le(const 65_u8, copy _5);
        switchInt(move _696) -> [0: bb1026, otherwise: bb1025];
    }

    bb1025: {
        _697 = Le(copy _5, const 90_u8);
        switchInt(move _697) -> [0: bb1026, otherwise: bb1029];
    }

    bb1026: {
        _698 = Le(const 97_u8, copy _5);
        switchInt(move _698) -> [0: bb1028, otherwise: bb1027];
    }

    bb1027: {
        _699 = Le(copy _5, const 122_u8);
        switchInt(move _699) -> [0: bb1028, otherwise: bb1029];
    }

    bb1028: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1029: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S75;
        goto -> bb1921;
    }

    bb1030: {
        StorageLive(_701);
        StorageLive(_700);
        _700 = copy _2;
        _701 = Lt(move _700, copy _4);
        switchInt(move _701) -> [0: bb1031, otherwise: bb1032];
    }

    bb1031: {
        StorageDead(_700);
        _5 = const 0_u8;
        goto -> bb1034;
    }

    bb1032: {
        StorageDead(_700);
        StorageLive(_703);
        StorageLive(_702);
        _702 = copy _2;
        _703 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _702) -> [return: bb1033, unwind unreachable];
    }

    bb1033: {
        StorageDead(_702);
        _5 = copy (*_703);
        StorageDead(_703);
        goto -> bb1034;
    }

    bb1034: {
        StorageDead(_701);
        switchInt(copy _5) -> [45: bb1035, 46: bb1036, 62: bb1037, otherwise: bb1038];
    }

    bb1035: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S74;
        goto -> bb1921;
    }

    bb1036: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1037: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1038: {
        _704 = Le(const 48_u8, copy _5);
        switchInt(move _704) -> [0: bb1040, otherwise: bb1039];
    }

    bb1039: {
        _705 = Le(copy _5, const 57_u8);
        switchInt(move _705) -> [0: bb1040, otherwise: bb1045];
    }

    bb1040: {
        _706 = Le(const 65_u8, copy _5);
        switchInt(move _706) -> [0: bb1042, otherwise: bb1041];
    }

    bb1041: {
        _707 = Le(copy _5, const 90_u8);
        switchInt(move _707) -> [0: bb1042, otherwise: bb1045];
    }

    bb1042: {
        _708 = Le(const 97_u8, copy _5);
        switchInt(move _708) -> [0: bb1044, otherwise: bb1043];
    }

    bb1043: {
        _709 = Le(copy _5, const 122_u8);
        switchInt(move _709) -> [0: bb1044, otherwise: bb1045];
    }

    bb1044: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1045: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S75;
        goto -> bb1921;
    }

    bb1046: {
        StorageLive(_711);
        StorageLive(_710);
        _710 = copy _2;
        _711 = Lt(move _710, copy _4);
        switchInt(move _711) -> [0: bb1047, otherwise: bb1048];
    }

    bb1047: {
        StorageDead(_710);
        _5 = const 0_u8;
        goto -> bb1050;
    }

    bb1048: {
        StorageDead(_710);
        StorageLive(_713);
        StorageLive(_712);
        _712 = copy _2;
        _713 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _712) -> [return: bb1049, unwind unreachable];
    }

    bb1049: {
        StorageDead(_712);
        _5 = copy (*_713);
        StorageDead(_713);
        goto -> bb1050;
    }

    bb1050: {
        StorageDead(_711);
        switchInt(copy _5) -> [45: bb1051, otherwise: bb1052];
    }

    bb1051: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S76;
        goto -> bb1921;
    }

    bb1052: {
        _714 = Le(const 48_u8, copy _5);
        switchInt(move _714) -> [0: bb1054, otherwise: bb1053];
    }

    bb1053: {
        _715 = Le(copy _5, const 57_u8);
        switchInt(move _715) -> [0: bb1054, otherwise: bb1059];
    }

    bb1054: {
        _716 = Le(const 65_u8, copy _5);
        switchInt(move _716) -> [0: bb1056, otherwise: bb1055];
    }

    bb1055: {
        _717 = Le(copy _5, const 90_u8);
        switchInt(move _717) -> [0: bb1056, otherwise: bb1059];
    }

    bb1056: {
        _718 = Le(const 97_u8, copy _5);
        switchInt(move _718) -> [0: bb1058, otherwise: bb1057];
    }

    bb1057: {
        _719 = Le(copy _5, const 122_u8);
        switchInt(move _719) -> [0: bb1058, otherwise: bb1059];
    }

    bb1058: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1059: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S77;
        goto -> bb1921;
    }

    bb1060: {
        StorageLive(_721);
        StorageLive(_720);
        _720 = copy _2;
        _721 = Lt(move _720, copy _4);
        switchInt(move _721) -> [0: bb1061, otherwise: bb1062];
    }

    bb1061: {
        StorageDead(_720);
        _5 = const 0_u8;
        goto -> bb1064;
    }

    bb1062: {
        StorageDead(_720);
        StorageLive(_723);
        StorageLive(_722);
        _722 = copy _2;
        _723 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _722) -> [return: bb1063, unwind unreachable];
    }

    bb1063: {
        StorageDead(_722);
        _5 = copy (*_723);
        StorageDead(_723);
        goto -> bb1064;
    }

    bb1064: {
        StorageDead(_721);
        switchInt(copy _5) -> [45: bb1065, 46: bb1066, 62: bb1067, otherwise: bb1068];
    }

    bb1065: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S76;
        goto -> bb1921;
    }

    bb1066: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1067: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1068: {
        _724 = Le(const 48_u8, copy _5);
        switchInt(move _724) -> [0: bb1070, otherwise: bb1069];
    }

    bb1069: {
        _725 = Le(copy _5, const 57_u8);
        switchInt(move _725) -> [0: bb1070, otherwise: bb1075];
    }

    bb1070: {
        _726 = Le(const 65_u8, copy _5);
        switchInt(move _726) -> [0: bb1072, otherwise: bb1071];
    }

    bb1071: {
        _727 = Le(copy _5, const 90_u8);
        switchInt(move _727) -> [0: bb1072, otherwise: bb1075];
    }

    bb1072: {
        _728 = Le(const 97_u8, copy _5);
        switchInt(move _728) -> [0: bb1074, otherwise: bb1073];
    }

    bb1073: {
        _729 = Le(copy _5, const 122_u8);
        switchInt(move _729) -> [0: bb1074, otherwise: bb1075];
    }

    bb1074: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1075: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S77;
        goto -> bb1921;
    }

    bb1076: {
        StorageLive(_731);
        StorageLive(_730);
        _730 = copy _2;
        _731 = Lt(move _730, copy _4);
        switchInt(move _731) -> [0: bb1077, otherwise: bb1078];
    }

    bb1077: {
        StorageDead(_730);
        _5 = const 0_u8;
        goto -> bb1080;
    }

    bb1078: {
        StorageDead(_730);
        StorageLive(_733);
        StorageLive(_732);
        _732 = copy _2;
        _733 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _732) -> [return: bb1079, unwind unreachable];
    }

    bb1079: {
        StorageDead(_732);
        _5 = copy (*_733);
        StorageDead(_733);
        goto -> bb1080;
    }

    bb1080: {
        StorageDead(_731);
        switchInt(copy _5) -> [45: bb1081, otherwise: bb1082];
    }

    bb1081: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S78;
        goto -> bb1921;
    }

    bb1082: {
        _734 = Le(const 48_u8, copy _5);
        switchInt(move _734) -> [0: bb1084, otherwise: bb1083];
    }

    bb1083: {
        _735 = Le(copy _5, const 57_u8);
        switchInt(move _735) -> [0: bb1084, otherwise: bb1089];
    }

    bb1084: {
        _736 = Le(const 65_u8, copy _5);
        switchInt(move _736) -> [0: bb1086, otherwise: bb1085];
    }

    bb1085: {
        _737 = Le(copy _5, const 90_u8);
        switchInt(move _737) -> [0: bb1086, otherwise: bb1089];
    }

    bb1086: {
        _738 = Le(const 97_u8, copy _5);
        switchInt(move _738) -> [0: bb1088, otherwise: bb1087];
    }

    bb1087: {
        _739 = Le(copy _5, const 122_u8);
        switchInt(move _739) -> [0: bb1088, otherwise: bb1089];
    }

    bb1088: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1089: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S79;
        goto -> bb1921;
    }

    bb1090: {
        StorageLive(_741);
        StorageLive(_740);
        _740 = copy _2;
        _741 = Lt(move _740, copy _4);
        switchInt(move _741) -> [0: bb1091, otherwise: bb1092];
    }

    bb1091: {
        StorageDead(_740);
        _5 = const 0_u8;
        goto -> bb1094;
    }

    bb1092: {
        StorageDead(_740);
        StorageLive(_743);
        StorageLive(_742);
        _742 = copy _2;
        _743 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _742) -> [return: bb1093, unwind unreachable];
    }

    bb1093: {
        StorageDead(_742);
        _5 = copy (*_743);
        StorageDead(_743);
        goto -> bb1094;
    }

    bb1094: {
        StorageDead(_741);
        switchInt(copy _5) -> [45: bb1095, 46: bb1096, 62: bb1097, otherwise: bb1098];
    }

    bb1095: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S78;
        goto -> bb1921;
    }

    bb1096: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1097: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1098: {
        _744 = Le(const 48_u8, copy _5);
        switchInt(move _744) -> [0: bb1100, otherwise: bb1099];
    }

    bb1099: {
        _745 = Le(copy _5, const 57_u8);
        switchInt(move _745) -> [0: bb1100, otherwise: bb1105];
    }

    bb1100: {
        _746 = Le(const 65_u8, copy _5);
        switchInt(move _746) -> [0: bb1102, otherwise: bb1101];
    }

    bb1101: {
        _747 = Le(copy _5, const 90_u8);
        switchInt(move _747) -> [0: bb1102, otherwise: bb1105];
    }

    bb1102: {
        _748 = Le(const 97_u8, copy _5);
        switchInt(move _748) -> [0: bb1104, otherwise: bb1103];
    }

    bb1103: {
        _749 = Le(copy _5, const 122_u8);
        switchInt(move _749) -> [0: bb1104, otherwise: bb1105];
    }

    bb1104: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1105: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S79;
        goto -> bb1921;
    }

    bb1106: {
        StorageLive(_751);
        StorageLive(_750);
        _750 = copy _2;
        _751 = Lt(move _750, copy _4);
        switchInt(move _751) -> [0: bb1107, otherwise: bb1108];
    }

    bb1107: {
        StorageDead(_750);
        _5 = const 0_u8;
        goto -> bb1110;
    }

    bb1108: {
        StorageDead(_750);
        StorageLive(_753);
        StorageLive(_752);
        _752 = copy _2;
        _753 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _752) -> [return: bb1109, unwind unreachable];
    }

    bb1109: {
        StorageDead(_752);
        _5 = copy (*_753);
        StorageDead(_753);
        goto -> bb1110;
    }

    bb1110: {
        StorageDead(_751);
        switchInt(copy _5) -> [45: bb1111, otherwise: bb1112];
    }

    bb1111: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S80;
        goto -> bb1921;
    }

    bb1112: {
        _754 = Le(const 48_u8, copy _5);
        switchInt(move _754) -> [0: bb1114, otherwise: bb1113];
    }

    bb1113: {
        _755 = Le(copy _5, const 57_u8);
        switchInt(move _755) -> [0: bb1114, otherwise: bb1119];
    }

    bb1114: {
        _756 = Le(const 65_u8, copy _5);
        switchInt(move _756) -> [0: bb1116, otherwise: bb1115];
    }

    bb1115: {
        _757 = Le(copy _5, const 90_u8);
        switchInt(move _757) -> [0: bb1116, otherwise: bb1119];
    }

    bb1116: {
        _758 = Le(const 97_u8, copy _5);
        switchInt(move _758) -> [0: bb1118, otherwise: bb1117];
    }

    bb1117: {
        _759 = Le(copy _5, const 122_u8);
        switchInt(move _759) -> [0: bb1118, otherwise: bb1119];
    }

    bb1118: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1119: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S81;
        goto -> bb1921;
    }

    bb1120: {
        StorageLive(_761);
        StorageLive(_760);
        _760 = copy _2;
        _761 = Lt(move _760, copy _4);
        switchInt(move _761) -> [0: bb1121, otherwise: bb1122];
    }

    bb1121: {
        StorageDead(_760);
        _5 = const 0_u8;
        goto -> bb1124;
    }

    bb1122: {
        StorageDead(_760);
        StorageLive(_763);
        StorageLive(_762);
        _762 = copy _2;
        _763 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _762) -> [return: bb1123, unwind unreachable];
    }

    bb1123: {
        StorageDead(_762);
        _5 = copy (*_763);
        StorageDead(_763);
        goto -> bb1124;
    }

    bb1124: {
        StorageDead(_761);
        switchInt(copy _5) -> [45: bb1125, 46: bb1126, 62: bb1127, otherwise: bb1128];
    }

    bb1125: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S80;
        goto -> bb1921;
    }

    bb1126: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1127: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1128: {
        _764 = Le(const 48_u8, copy _5);
        switchInt(move _764) -> [0: bb1130, otherwise: bb1129];
    }

    bb1129: {
        _765 = Le(copy _5, const 57_u8);
        switchInt(move _765) -> [0: bb1130, otherwise: bb1135];
    }

    bb1130: {
        _766 = Le(const 65_u8, copy _5);
        switchInt(move _766) -> [0: bb1132, otherwise: bb1131];
    }

    bb1131: {
        _767 = Le(copy _5, const 90_u8);
        switchInt(move _767) -> [0: bb1132, otherwise: bb1135];
    }

    bb1132: {
        _768 = Le(const 97_u8, copy _5);
        switchInt(move _768) -> [0: bb1134, otherwise: bb1133];
    }

    bb1133: {
        _769 = Le(copy _5, const 122_u8);
        switchInt(move _769) -> [0: bb1134, otherwise: bb1135];
    }

    bb1134: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1135: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S81;
        goto -> bb1921;
    }

    bb1136: {
        StorageLive(_771);
        StorageLive(_770);
        _770 = copy _2;
        _771 = Lt(move _770, copy _4);
        switchInt(move _771) -> [0: bb1137, otherwise: bb1138];
    }

    bb1137: {
        StorageDead(_770);
        _5 = const 0_u8;
        goto -> bb1140;
    }

    bb1138: {
        StorageDead(_770);
        StorageLive(_773);
        StorageLive(_772);
        _772 = copy _2;
        _773 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _772) -> [return: bb1139, unwind unreachable];
    }

    bb1139: {
        StorageDead(_772);
        _5 = copy (*_773);
        StorageDead(_773);
        goto -> bb1140;
    }

    bb1140: {
        StorageDead(_771);
        switchInt(copy _5) -> [45: bb1141, otherwise: bb1142];
    }

    bb1141: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S82;
        goto -> bb1921;
    }

    bb1142: {
        _774 = Le(const 48_u8, copy _5);
        switchInt(move _774) -> [0: bb1144, otherwise: bb1143];
    }

    bb1143: {
        _775 = Le(copy _5, const 57_u8);
        switchInt(move _775) -> [0: bb1144, otherwise: bb1149];
    }

    bb1144: {
        _776 = Le(const 65_u8, copy _5);
        switchInt(move _776) -> [0: bb1146, otherwise: bb1145];
    }

    bb1145: {
        _777 = Le(copy _5, const 90_u8);
        switchInt(move _777) -> [0: bb1146, otherwise: bb1149];
    }

    bb1146: {
        _778 = Le(const 97_u8, copy _5);
        switchInt(move _778) -> [0: bb1148, otherwise: bb1147];
    }

    bb1147: {
        _779 = Le(copy _5, const 122_u8);
        switchInt(move _779) -> [0: bb1148, otherwise: bb1149];
    }

    bb1148: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1149: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S83;
        goto -> bb1921;
    }

    bb1150: {
        StorageLive(_781);
        StorageLive(_780);
        _780 = copy _2;
        _781 = Lt(move _780, copy _4);
        switchInt(move _781) -> [0: bb1151, otherwise: bb1152];
    }

    bb1151: {
        StorageDead(_780);
        _5 = const 0_u8;
        goto -> bb1154;
    }

    bb1152: {
        StorageDead(_780);
        StorageLive(_783);
        StorageLive(_782);
        _782 = copy _2;
        _783 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _782) -> [return: bb1153, unwind unreachable];
    }

    bb1153: {
        StorageDead(_782);
        _5 = copy (*_783);
        StorageDead(_783);
        goto -> bb1154;
    }

    bb1154: {
        StorageDead(_781);
        switchInt(copy _5) -> [45: bb1155, 46: bb1156, 62: bb1157, otherwise: bb1158];
    }

    bb1155: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S82;
        goto -> bb1921;
    }

    bb1156: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1157: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1158: {
        _784 = Le(const 48_u8, copy _5);
        switchInt(move _784) -> [0: bb1160, otherwise: bb1159];
    }

    bb1159: {
        _785 = Le(copy _5, const 57_u8);
        switchInt(move _785) -> [0: bb1160, otherwise: bb1165];
    }

    bb1160: {
        _786 = Le(const 65_u8, copy _5);
        switchInt(move _786) -> [0: bb1162, otherwise: bb1161];
    }

    bb1161: {
        _787 = Le(copy _5, const 90_u8);
        switchInt(move _787) -> [0: bb1162, otherwise: bb1165];
    }

    bb1162: {
        _788 = Le(const 97_u8, copy _5);
        switchInt(move _788) -> [0: bb1164, otherwise: bb1163];
    }

    bb1163: {
        _789 = Le(copy _5, const 122_u8);
        switchInt(move _789) -> [0: bb1164, otherwise: bb1165];
    }

    bb1164: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1165: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S83;
        goto -> bb1921;
    }

    bb1166: {
        StorageLive(_791);
        StorageLive(_790);
        _790 = copy _2;
        _791 = Lt(move _790, copy _4);
        switchInt(move _791) -> [0: bb1167, otherwise: bb1168];
    }

    bb1167: {
        StorageDead(_790);
        _5 = const 0_u8;
        goto -> bb1170;
    }

    bb1168: {
        StorageDead(_790);
        StorageLive(_793);
        StorageLive(_792);
        _792 = copy _2;
        _793 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _792) -> [return: bb1169, unwind unreachable];
    }

    bb1169: {
        StorageDead(_792);
        _5 = copy (*_793);
        StorageDead(_793);
        goto -> bb1170;
    }

    bb1170: {
        StorageDead(_791);
        switchInt(copy _5) -> [45: bb1171, otherwise: bb1172];
    }

    bb1171: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S84;
        goto -> bb1921;
    }

    bb1172: {
        _794 = Le(const 48_u8, copy _5);
        switchInt(move _794) -> [0: bb1174, otherwise: bb1173];
    }

    bb1173: {
        _795 = Le(copy _5, const 57_u8);
        switchInt(move _795) -> [0: bb1174, otherwise: bb1179];
    }

    bb1174: {
        _796 = Le(const 65_u8, copy _5);
        switchInt(move _796) -> [0: bb1176, otherwise: bb1175];
    }

    bb1175: {
        _797 = Le(copy _5, const 90_u8);
        switchInt(move _797) -> [0: bb1176, otherwise: bb1179];
    }

    bb1176: {
        _798 = Le(const 97_u8, copy _5);
        switchInt(move _798) -> [0: bb1178, otherwise: bb1177];
    }

    bb1177: {
        _799 = Le(copy _5, const 122_u8);
        switchInt(move _799) -> [0: bb1178, otherwise: bb1179];
    }

    bb1178: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1179: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S85;
        goto -> bb1921;
    }

    bb1180: {
        StorageLive(_801);
        StorageLive(_800);
        _800 = copy _2;
        _801 = Lt(move _800, copy _4);
        switchInt(move _801) -> [0: bb1181, otherwise: bb1182];
    }

    bb1181: {
        StorageDead(_800);
        _5 = const 0_u8;
        goto -> bb1184;
    }

    bb1182: {
        StorageDead(_800);
        StorageLive(_803);
        StorageLive(_802);
        _802 = copy _2;
        _803 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _802) -> [return: bb1183, unwind unreachable];
    }

    bb1183: {
        StorageDead(_802);
        _5 = copy (*_803);
        StorageDead(_803);
        goto -> bb1184;
    }

    bb1184: {
        StorageDead(_801);
        switchInt(copy _5) -> [45: bb1185, 46: bb1186, 62: bb1187, otherwise: bb1188];
    }

    bb1185: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S84;
        goto -> bb1921;
    }

    bb1186: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1187: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1188: {
        _804 = Le(const 48_u8, copy _5);
        switchInt(move _804) -> [0: bb1190, otherwise: bb1189];
    }

    bb1189: {
        _805 = Le(copy _5, const 57_u8);
        switchInt(move _805) -> [0: bb1190, otherwise: bb1195];
    }

    bb1190: {
        _806 = Le(const 65_u8, copy _5);
        switchInt(move _806) -> [0: bb1192, otherwise: bb1191];
    }

    bb1191: {
        _807 = Le(copy _5, const 90_u8);
        switchInt(move _807) -> [0: bb1192, otherwise: bb1195];
    }

    bb1192: {
        _808 = Le(const 97_u8, copy _5);
        switchInt(move _808) -> [0: bb1194, otherwise: bb1193];
    }

    bb1193: {
        _809 = Le(copy _5, const 122_u8);
        switchInt(move _809) -> [0: bb1194, otherwise: bb1195];
    }

    bb1194: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1195: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S85;
        goto -> bb1921;
    }

    bb1196: {
        StorageLive(_811);
        StorageLive(_810);
        _810 = copy _2;
        _811 = Lt(move _810, copy _4);
        switchInt(move _811) -> [0: bb1197, otherwise: bb1198];
    }

    bb1197: {
        StorageDead(_810);
        _5 = const 0_u8;
        goto -> bb1200;
    }

    bb1198: {
        StorageDead(_810);
        StorageLive(_813);
        StorageLive(_812);
        _812 = copy _2;
        _813 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _812) -> [return: bb1199, unwind unreachable];
    }

    bb1199: {
        StorageDead(_812);
        _5 = copy (*_813);
        StorageDead(_813);
        goto -> bb1200;
    }

    bb1200: {
        StorageDead(_811);
        switchInt(copy _5) -> [45: bb1201, otherwise: bb1202];
    }

    bb1201: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S86;
        goto -> bb1921;
    }

    bb1202: {
        _814 = Le(const 48_u8, copy _5);
        switchInt(move _814) -> [0: bb1204, otherwise: bb1203];
    }

    bb1203: {
        _815 = Le(copy _5, const 57_u8);
        switchInt(move _815) -> [0: bb1204, otherwise: bb1209];
    }

    bb1204: {
        _816 = Le(const 65_u8, copy _5);
        switchInt(move _816) -> [0: bb1206, otherwise: bb1205];
    }

    bb1205: {
        _817 = Le(copy _5, const 90_u8);
        switchInt(move _817) -> [0: bb1206, otherwise: bb1209];
    }

    bb1206: {
        _818 = Le(const 97_u8, copy _5);
        switchInt(move _818) -> [0: bb1208, otherwise: bb1207];
    }

    bb1207: {
        _819 = Le(copy _5, const 122_u8);
        switchInt(move _819) -> [0: bb1208, otherwise: bb1209];
    }

    bb1208: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1209: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S87;
        goto -> bb1921;
    }

    bb1210: {
        StorageLive(_821);
        StorageLive(_820);
        _820 = copy _2;
        _821 = Lt(move _820, copy _4);
        switchInt(move _821) -> [0: bb1211, otherwise: bb1212];
    }

    bb1211: {
        StorageDead(_820);
        _5 = const 0_u8;
        goto -> bb1214;
    }

    bb1212: {
        StorageDead(_820);
        StorageLive(_823);
        StorageLive(_822);
        _822 = copy _2;
        _823 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _822) -> [return: bb1213, unwind unreachable];
    }

    bb1213: {
        StorageDead(_822);
        _5 = copy (*_823);
        StorageDead(_823);
        goto -> bb1214;
    }

    bb1214: {
        StorageDead(_821);
        switchInt(copy _5) -> [45: bb1215, 46: bb1216, 62: bb1217, otherwise: bb1218];
    }

    bb1215: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S86;
        goto -> bb1921;
    }

    bb1216: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1217: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1218: {
        _824 = Le(const 48_u8, copy _5);
        switchInt(move _824) -> [0: bb1220, otherwise: bb1219];
    }

    bb1219: {
        _825 = Le(copy _5, const 57_u8);
        switchInt(move _825) -> [0: bb1220, otherwise: bb1225];
    }

    bb1220: {
        _826 = Le(const 65_u8, copy _5);
        switchInt(move _826) -> [0: bb1222, otherwise: bb1221];
    }

    bb1221: {
        _827 = Le(copy _5, const 90_u8);
        switchInt(move _827) -> [0: bb1222, otherwise: bb1225];
    }

    bb1222: {
        _828 = Le(const 97_u8, copy _5);
        switchInt(move _828) -> [0: bb1224, otherwise: bb1223];
    }

    bb1223: {
        _829 = Le(copy _5, const 122_u8);
        switchInt(move _829) -> [0: bb1224, otherwise: bb1225];
    }

    bb1224: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1225: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S87;
        goto -> bb1921;
    }

    bb1226: {
        StorageLive(_831);
        StorageLive(_830);
        _830 = copy _2;
        _831 = Lt(move _830, copy _4);
        switchInt(move _831) -> [0: bb1227, otherwise: bb1228];
    }

    bb1227: {
        StorageDead(_830);
        _5 = const 0_u8;
        goto -> bb1230;
    }

    bb1228: {
        StorageDead(_830);
        StorageLive(_833);
        StorageLive(_832);
        _832 = copy _2;
        _833 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _832) -> [return: bb1229, unwind unreachable];
    }

    bb1229: {
        StorageDead(_832);
        _5 = copy (*_833);
        StorageDead(_833);
        goto -> bb1230;
    }

    bb1230: {
        StorageDead(_831);
        switchInt(copy _5) -> [45: bb1231, otherwise: bb1232];
    }

    bb1231: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S88;
        goto -> bb1921;
    }

    bb1232: {
        _834 = Le(const 48_u8, copy _5);
        switchInt(move _834) -> [0: bb1234, otherwise: bb1233];
    }

    bb1233: {
        _835 = Le(copy _5, const 57_u8);
        switchInt(move _835) -> [0: bb1234, otherwise: bb1239];
    }

    bb1234: {
        _836 = Le(const 65_u8, copy _5);
        switchInt(move _836) -> [0: bb1236, otherwise: bb1235];
    }

    bb1235: {
        _837 = Le(copy _5, const 90_u8);
        switchInt(move _837) -> [0: bb1236, otherwise: bb1239];
    }

    bb1236: {
        _838 = Le(const 97_u8, copy _5);
        switchInt(move _838) -> [0: bb1238, otherwise: bb1237];
    }

    bb1237: {
        _839 = Le(copy _5, const 122_u8);
        switchInt(move _839) -> [0: bb1238, otherwise: bb1239];
    }

    bb1238: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1239: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S89;
        goto -> bb1921;
    }

    bb1240: {
        StorageLive(_841);
        StorageLive(_840);
        _840 = copy _2;
        _841 = Lt(move _840, copy _4);
        switchInt(move _841) -> [0: bb1241, otherwise: bb1242];
    }

    bb1241: {
        StorageDead(_840);
        _5 = const 0_u8;
        goto -> bb1244;
    }

    bb1242: {
        StorageDead(_840);
        StorageLive(_843);
        StorageLive(_842);
        _842 = copy _2;
        _843 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _842) -> [return: bb1243, unwind unreachable];
    }

    bb1243: {
        StorageDead(_842);
        _5 = copy (*_843);
        StorageDead(_843);
        goto -> bb1244;
    }

    bb1244: {
        StorageDead(_841);
        switchInt(copy _5) -> [45: bb1245, 46: bb1246, 62: bb1247, otherwise: bb1248];
    }

    bb1245: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S88;
        goto -> bb1921;
    }

    bb1246: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1247: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1248: {
        _844 = Le(const 48_u8, copy _5);
        switchInt(move _844) -> [0: bb1250, otherwise: bb1249];
    }

    bb1249: {
        _845 = Le(copy _5, const 57_u8);
        switchInt(move _845) -> [0: bb1250, otherwise: bb1255];
    }

    bb1250: {
        _846 = Le(const 65_u8, copy _5);
        switchInt(move _846) -> [0: bb1252, otherwise: bb1251];
    }

    bb1251: {
        _847 = Le(copy _5, const 90_u8);
        switchInt(move _847) -> [0: bb1252, otherwise: bb1255];
    }

    bb1252: {
        _848 = Le(const 97_u8, copy _5);
        switchInt(move _848) -> [0: bb1254, otherwise: bb1253];
    }

    bb1253: {
        _849 = Le(copy _5, const 122_u8);
        switchInt(move _849) -> [0: bb1254, otherwise: bb1255];
    }

    bb1254: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1255: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S89;
        goto -> bb1921;
    }

    bb1256: {
        StorageLive(_851);
        StorageLive(_850);
        _850 = copy _2;
        _851 = Lt(move _850, copy _4);
        switchInt(move _851) -> [0: bb1257, otherwise: bb1258];
    }

    bb1257: {
        StorageDead(_850);
        _5 = const 0_u8;
        goto -> bb1260;
    }

    bb1258: {
        StorageDead(_850);
        StorageLive(_853);
        StorageLive(_852);
        _852 = copy _2;
        _853 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _852) -> [return: bb1259, unwind unreachable];
    }

    bb1259: {
        StorageDead(_852);
        _5 = copy (*_853);
        StorageDead(_853);
        goto -> bb1260;
    }

    bb1260: {
        StorageDead(_851);
        switchInt(copy _5) -> [45: bb1261, otherwise: bb1262];
    }

    bb1261: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S90;
        goto -> bb1921;
    }

    bb1262: {
        _854 = Le(const 48_u8, copy _5);
        switchInt(move _854) -> [0: bb1264, otherwise: bb1263];
    }

    bb1263: {
        _855 = Le(copy _5, const 57_u8);
        switchInt(move _855) -> [0: bb1264, otherwise: bb1269];
    }

    bb1264: {
        _856 = Le(const 65_u8, copy _5);
        switchInt(move _856) -> [0: bb1266, otherwise: bb1265];
    }

    bb1265: {
        _857 = Le(copy _5, const 90_u8);
        switchInt(move _857) -> [0: bb1266, otherwise: bb1269];
    }

    bb1266: {
        _858 = Le(const 97_u8, copy _5);
        switchInt(move _858) -> [0: bb1268, otherwise: bb1267];
    }

    bb1267: {
        _859 = Le(copy _5, const 122_u8);
        switchInt(move _859) -> [0: bb1268, otherwise: bb1269];
    }

    bb1268: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1269: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S91;
        goto -> bb1921;
    }

    bb1270: {
        StorageLive(_861);
        StorageLive(_860);
        _860 = copy _2;
        _861 = Lt(move _860, copy _4);
        switchInt(move _861) -> [0: bb1271, otherwise: bb1272];
    }

    bb1271: {
        StorageDead(_860);
        _5 = const 0_u8;
        goto -> bb1274;
    }

    bb1272: {
        StorageDead(_860);
        StorageLive(_863);
        StorageLive(_862);
        _862 = copy _2;
        _863 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _862) -> [return: bb1273, unwind unreachable];
    }

    bb1273: {
        StorageDead(_862);
        _5 = copy (*_863);
        StorageDead(_863);
        goto -> bb1274;
    }

    bb1274: {
        StorageDead(_861);
        switchInt(copy _5) -> [45: bb1275, 46: bb1276, 62: bb1277, otherwise: bb1278];
    }

    bb1275: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S90;
        goto -> bb1921;
    }

    bb1276: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1277: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1278: {
        _864 = Le(const 48_u8, copy _5);
        switchInt(move _864) -> [0: bb1280, otherwise: bb1279];
    }

    bb1279: {
        _865 = Le(copy _5, const 57_u8);
        switchInt(move _865) -> [0: bb1280, otherwise: bb1285];
    }

    bb1280: {
        _866 = Le(const 65_u8, copy _5);
        switchInt(move _866) -> [0: bb1282, otherwise: bb1281];
    }

    bb1281: {
        _867 = Le(copy _5, const 90_u8);
        switchInt(move _867) -> [0: bb1282, otherwise: bb1285];
    }

    bb1282: {
        _868 = Le(const 97_u8, copy _5);
        switchInt(move _868) -> [0: bb1284, otherwise: bb1283];
    }

    bb1283: {
        _869 = Le(copy _5, const 122_u8);
        switchInt(move _869) -> [0: bb1284, otherwise: bb1285];
    }

    bb1284: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1285: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S91;
        goto -> bb1921;
    }

    bb1286: {
        StorageLive(_871);
        StorageLive(_870);
        _870 = copy _2;
        _871 = Lt(move _870, copy _4);
        switchInt(move _871) -> [0: bb1287, otherwise: bb1288];
    }

    bb1287: {
        StorageDead(_870);
        _5 = const 0_u8;
        goto -> bb1290;
    }

    bb1288: {
        StorageDead(_870);
        StorageLive(_873);
        StorageLive(_872);
        _872 = copy _2;
        _873 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _872) -> [return: bb1289, unwind unreachable];
    }

    bb1289: {
        StorageDead(_872);
        _5 = copy (*_873);
        StorageDead(_873);
        goto -> bb1290;
    }

    bb1290: {
        StorageDead(_871);
        switchInt(copy _5) -> [45: bb1291, otherwise: bb1292];
    }

    bb1291: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S92;
        goto -> bb1921;
    }

    bb1292: {
        _874 = Le(const 48_u8, copy _5);
        switchInt(move _874) -> [0: bb1294, otherwise: bb1293];
    }

    bb1293: {
        _875 = Le(copy _5, const 57_u8);
        switchInt(move _875) -> [0: bb1294, otherwise: bb1299];
    }

    bb1294: {
        _876 = Le(const 65_u8, copy _5);
        switchInt(move _876) -> [0: bb1296, otherwise: bb1295];
    }

    bb1295: {
        _877 = Le(copy _5, const 90_u8);
        switchInt(move _877) -> [0: bb1296, otherwise: bb1299];
    }

    bb1296: {
        _878 = Le(const 97_u8, copy _5);
        switchInt(move _878) -> [0: bb1298, otherwise: bb1297];
    }

    bb1297: {
        _879 = Le(copy _5, const 122_u8);
        switchInt(move _879) -> [0: bb1298, otherwise: bb1299];
    }

    bb1298: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1299: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S93;
        goto -> bb1921;
    }

    bb1300: {
        StorageLive(_881);
        StorageLive(_880);
        _880 = copy _2;
        _881 = Lt(move _880, copy _4);
        switchInt(move _881) -> [0: bb1301, otherwise: bb1302];
    }

    bb1301: {
        StorageDead(_880);
        _5 = const 0_u8;
        goto -> bb1304;
    }

    bb1302: {
        StorageDead(_880);
        StorageLive(_883);
        StorageLive(_882);
        _882 = copy _2;
        _883 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _882) -> [return: bb1303, unwind unreachable];
    }

    bb1303: {
        StorageDead(_882);
        _5 = copy (*_883);
        StorageDead(_883);
        goto -> bb1304;
    }

    bb1304: {
        StorageDead(_881);
        switchInt(copy _5) -> [45: bb1305, 46: bb1306, 62: bb1307, otherwise: bb1308];
    }

    bb1305: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S92;
        goto -> bb1921;
    }

    bb1306: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1307: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1308: {
        _884 = Le(const 48_u8, copy _5);
        switchInt(move _884) -> [0: bb1310, otherwise: bb1309];
    }

    bb1309: {
        _885 = Le(copy _5, const 57_u8);
        switchInt(move _885) -> [0: bb1310, otherwise: bb1315];
    }

    bb1310: {
        _886 = Le(const 65_u8, copy _5);
        switchInt(move _886) -> [0: bb1312, otherwise: bb1311];
    }

    bb1311: {
        _887 = Le(copy _5, const 90_u8);
        switchInt(move _887) -> [0: bb1312, otherwise: bb1315];
    }

    bb1312: {
        _888 = Le(const 97_u8, copy _5);
        switchInt(move _888) -> [0: bb1314, otherwise: bb1313];
    }

    bb1313: {
        _889 = Le(copy _5, const 122_u8);
        switchInt(move _889) -> [0: bb1314, otherwise: bb1315];
    }

    bb1314: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1315: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S93;
        goto -> bb1921;
    }

    bb1316: {
        StorageLive(_891);
        StorageLive(_890);
        _890 = copy _2;
        _891 = Lt(move _890, copy _4);
        switchInt(move _891) -> [0: bb1317, otherwise: bb1318];
    }

    bb1317: {
        StorageDead(_890);
        _5 = const 0_u8;
        goto -> bb1320;
    }

    bb1318: {
        StorageDead(_890);
        StorageLive(_893);
        StorageLive(_892);
        _892 = copy _2;
        _893 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _892) -> [return: bb1319, unwind unreachable];
    }

    bb1319: {
        StorageDead(_892);
        _5 = copy (*_893);
        StorageDead(_893);
        goto -> bb1320;
    }

    bb1320: {
        StorageDead(_891);
        switchInt(copy _5) -> [45: bb1321, otherwise: bb1322];
    }

    bb1321: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S94;
        goto -> bb1921;
    }

    bb1322: {
        _894 = Le(const 48_u8, copy _5);
        switchInt(move _894) -> [0: bb1324, otherwise: bb1323];
    }

    bb1323: {
        _895 = Le(copy _5, const 57_u8);
        switchInt(move _895) -> [0: bb1324, otherwise: bb1329];
    }

    bb1324: {
        _896 = Le(const 65_u8, copy _5);
        switchInt(move _896) -> [0: bb1326, otherwise: bb1325];
    }

    bb1325: {
        _897 = Le(copy _5, const 90_u8);
        switchInt(move _897) -> [0: bb1326, otherwise: bb1329];
    }

    bb1326: {
        _898 = Le(const 97_u8, copy _5);
        switchInt(move _898) -> [0: bb1328, otherwise: bb1327];
    }

    bb1327: {
        _899 = Le(copy _5, const 122_u8);
        switchInt(move _899) -> [0: bb1328, otherwise: bb1329];
    }

    bb1328: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1329: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S95;
        goto -> bb1921;
    }

    bb1330: {
        StorageLive(_901);
        StorageLive(_900);
        _900 = copy _2;
        _901 = Lt(move _900, copy _4);
        switchInt(move _901) -> [0: bb1331, otherwise: bb1332];
    }

    bb1331: {
        StorageDead(_900);
        _5 = const 0_u8;
        goto -> bb1334;
    }

    bb1332: {
        StorageDead(_900);
        StorageLive(_903);
        StorageLive(_902);
        _902 = copy _2;
        _903 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _902) -> [return: bb1333, unwind unreachable];
    }

    bb1333: {
        StorageDead(_902);
        _5 = copy (*_903);
        StorageDead(_903);
        goto -> bb1334;
    }

    bb1334: {
        StorageDead(_901);
        switchInt(copy _5) -> [45: bb1335, 46: bb1336, 62: bb1337, otherwise: bb1338];
    }

    bb1335: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S94;
        goto -> bb1921;
    }

    bb1336: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1337: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1338: {
        _904 = Le(const 48_u8, copy _5);
        switchInt(move _904) -> [0: bb1340, otherwise: bb1339];
    }

    bb1339: {
        _905 = Le(copy _5, const 57_u8);
        switchInt(move _905) -> [0: bb1340, otherwise: bb1345];
    }

    bb1340: {
        _906 = Le(const 65_u8, copy _5);
        switchInt(move _906) -> [0: bb1342, otherwise: bb1341];
    }

    bb1341: {
        _907 = Le(copy _5, const 90_u8);
        switchInt(move _907) -> [0: bb1342, otherwise: bb1345];
    }

    bb1342: {
        _908 = Le(const 97_u8, copy _5);
        switchInt(move _908) -> [0: bb1344, otherwise: bb1343];
    }

    bb1343: {
        _909 = Le(copy _5, const 122_u8);
        switchInt(move _909) -> [0: bb1344, otherwise: bb1345];
    }

    bb1344: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1345: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S95;
        goto -> bb1921;
    }

    bb1346: {
        StorageLive(_911);
        StorageLive(_910);
        _910 = copy _2;
        _911 = Lt(move _910, copy _4);
        switchInt(move _911) -> [0: bb1347, otherwise: bb1348];
    }

    bb1347: {
        StorageDead(_910);
        _5 = const 0_u8;
        goto -> bb1350;
    }

    bb1348: {
        StorageDead(_910);
        StorageLive(_913);
        StorageLive(_912);
        _912 = copy _2;
        _913 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _912) -> [return: bb1349, unwind unreachable];
    }

    bb1349: {
        StorageDead(_912);
        _5 = copy (*_913);
        StorageDead(_913);
        goto -> bb1350;
    }

    bb1350: {
        StorageDead(_911);
        switchInt(copy _5) -> [45: bb1351, otherwise: bb1352];
    }

    bb1351: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S96;
        goto -> bb1921;
    }

    bb1352: {
        _914 = Le(const 48_u8, copy _5);
        switchInt(move _914) -> [0: bb1354, otherwise: bb1353];
    }

    bb1353: {
        _915 = Le(copy _5, const 57_u8);
        switchInt(move _915) -> [0: bb1354, otherwise: bb1359];
    }

    bb1354: {
        _916 = Le(const 65_u8, copy _5);
        switchInt(move _916) -> [0: bb1356, otherwise: bb1355];
    }

    bb1355: {
        _917 = Le(copy _5, const 90_u8);
        switchInt(move _917) -> [0: bb1356, otherwise: bb1359];
    }

    bb1356: {
        _918 = Le(const 97_u8, copy _5);
        switchInt(move _918) -> [0: bb1358, otherwise: bb1357];
    }

    bb1357: {
        _919 = Le(copy _5, const 122_u8);
        switchInt(move _919) -> [0: bb1358, otherwise: bb1359];
    }

    bb1358: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1359: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S97;
        goto -> bb1921;
    }

    bb1360: {
        StorageLive(_921);
        StorageLive(_920);
        _920 = copy _2;
        _921 = Lt(move _920, copy _4);
        switchInt(move _921) -> [0: bb1361, otherwise: bb1362];
    }

    bb1361: {
        StorageDead(_920);
        _5 = const 0_u8;
        goto -> bb1364;
    }

    bb1362: {
        StorageDead(_920);
        StorageLive(_923);
        StorageLive(_922);
        _922 = copy _2;
        _923 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _922) -> [return: bb1363, unwind unreachable];
    }

    bb1363: {
        StorageDead(_922);
        _5 = copy (*_923);
        StorageDead(_923);
        goto -> bb1364;
    }

    bb1364: {
        StorageDead(_921);
        switchInt(copy _5) -> [45: bb1365, 46: bb1366, 62: bb1367, otherwise: bb1368];
    }

    bb1365: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S96;
        goto -> bb1921;
    }

    bb1366: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1367: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1368: {
        _924 = Le(const 48_u8, copy _5);
        switchInt(move _924) -> [0: bb1370, otherwise: bb1369];
    }

    bb1369: {
        _925 = Le(copy _5, const 57_u8);
        switchInt(move _925) -> [0: bb1370, otherwise: bb1375];
    }

    bb1370: {
        _926 = Le(const 65_u8, copy _5);
        switchInt(move _926) -> [0: bb1372, otherwise: bb1371];
    }

    bb1371: {
        _927 = Le(copy _5, const 90_u8);
        switchInt(move _927) -> [0: bb1372, otherwise: bb1375];
    }

    bb1372: {
        _928 = Le(const 97_u8, copy _5);
        switchInt(move _928) -> [0: bb1374, otherwise: bb1373];
    }

    bb1373: {
        _929 = Le(copy _5, const 122_u8);
        switchInt(move _929) -> [0: bb1374, otherwise: bb1375];
    }

    bb1374: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1375: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S97;
        goto -> bb1921;
    }

    bb1376: {
        StorageLive(_931);
        StorageLive(_930);
        _930 = copy _2;
        _931 = Lt(move _930, copy _4);
        switchInt(move _931) -> [0: bb1377, otherwise: bb1378];
    }

    bb1377: {
        StorageDead(_930);
        _5 = const 0_u8;
        goto -> bb1380;
    }

    bb1378: {
        StorageDead(_930);
        StorageLive(_933);
        StorageLive(_932);
        _932 = copy _2;
        _933 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _932) -> [return: bb1379, unwind unreachable];
    }

    bb1379: {
        StorageDead(_932);
        _5 = copy (*_933);
        StorageDead(_933);
        goto -> bb1380;
    }

    bb1380: {
        StorageDead(_931);
        switchInt(copy _5) -> [45: bb1381, otherwise: bb1382];
    }

    bb1381: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S98;
        goto -> bb1921;
    }

    bb1382: {
        _934 = Le(const 48_u8, copy _5);
        switchInt(move _934) -> [0: bb1384, otherwise: bb1383];
    }

    bb1383: {
        _935 = Le(copy _5, const 57_u8);
        switchInt(move _935) -> [0: bb1384, otherwise: bb1389];
    }

    bb1384: {
        _936 = Le(const 65_u8, copy _5);
        switchInt(move _936) -> [0: bb1386, otherwise: bb1385];
    }

    bb1385: {
        _937 = Le(copy _5, const 90_u8);
        switchInt(move _937) -> [0: bb1386, otherwise: bb1389];
    }

    bb1386: {
        _938 = Le(const 97_u8, copy _5);
        switchInt(move _938) -> [0: bb1388, otherwise: bb1387];
    }

    bb1387: {
        _939 = Le(copy _5, const 122_u8);
        switchInt(move _939) -> [0: bb1388, otherwise: bb1389];
    }

    bb1388: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1389: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S99;
        goto -> bb1921;
    }

    bb1390: {
        StorageLive(_941);
        StorageLive(_940);
        _940 = copy _2;
        _941 = Lt(move _940, copy _4);
        switchInt(move _941) -> [0: bb1391, otherwise: bb1392];
    }

    bb1391: {
        StorageDead(_940);
        _5 = const 0_u8;
        goto -> bb1394;
    }

    bb1392: {
        StorageDead(_940);
        StorageLive(_943);
        StorageLive(_942);
        _942 = copy _2;
        _943 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _942) -> [return: bb1393, unwind unreachable];
    }

    bb1393: {
        StorageDead(_942);
        _5 = copy (*_943);
        StorageDead(_943);
        goto -> bb1394;
    }

    bb1394: {
        StorageDead(_941);
        switchInt(copy _5) -> [45: bb1395, 46: bb1396, 62: bb1397, otherwise: bb1398];
    }

    bb1395: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S98;
        goto -> bb1921;
    }

    bb1396: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1397: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1398: {
        _944 = Le(const 48_u8, copy _5);
        switchInt(move _944) -> [0: bb1400, otherwise: bb1399];
    }

    bb1399: {
        _945 = Le(copy _5, const 57_u8);
        switchInt(move _945) -> [0: bb1400, otherwise: bb1405];
    }

    bb1400: {
        _946 = Le(const 65_u8, copy _5);
        switchInt(move _946) -> [0: bb1402, otherwise: bb1401];
    }

    bb1401: {
        _947 = Le(copy _5, const 90_u8);
        switchInt(move _947) -> [0: bb1402, otherwise: bb1405];
    }

    bb1402: {
        _948 = Le(const 97_u8, copy _5);
        switchInt(move _948) -> [0: bb1404, otherwise: bb1403];
    }

    bb1403: {
        _949 = Le(copy _5, const 122_u8);
        switchInt(move _949) -> [0: bb1404, otherwise: bb1405];
    }

    bb1404: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1405: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S99;
        goto -> bb1921;
    }

    bb1406: {
        StorageLive(_951);
        StorageLive(_950);
        _950 = copy _2;
        _951 = Lt(move _950, copy _4);
        switchInt(move _951) -> [0: bb1407, otherwise: bb1408];
    }

    bb1407: {
        StorageDead(_950);
        _5 = const 0_u8;
        goto -> bb1410;
    }

    bb1408: {
        StorageDead(_950);
        StorageLive(_953);
        StorageLive(_952);
        _952 = copy _2;
        _953 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _952) -> [return: bb1409, unwind unreachable];
    }

    bb1409: {
        StorageDead(_952);
        _5 = copy (*_953);
        StorageDead(_953);
        goto -> bb1410;
    }

    bb1410: {
        StorageDead(_951);
        switchInt(copy _5) -> [45: bb1411, otherwise: bb1412];
    }

    bb1411: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S100;
        goto -> bb1921;
    }

    bb1412: {
        _954 = Le(const 48_u8, copy _5);
        switchInt(move _954) -> [0: bb1414, otherwise: bb1413];
    }

    bb1413: {
        _955 = Le(copy _5, const 57_u8);
        switchInt(move _955) -> [0: bb1414, otherwise: bb1419];
    }

    bb1414: {
        _956 = Le(const 65_u8, copy _5);
        switchInt(move _956) -> [0: bb1416, otherwise: bb1415];
    }

    bb1415: {
        _957 = Le(copy _5, const 90_u8);
        switchInt(move _957) -> [0: bb1416, otherwise: bb1419];
    }

    bb1416: {
        _958 = Le(const 97_u8, copy _5);
        switchInt(move _958) -> [0: bb1418, otherwise: bb1417];
    }

    bb1417: {
        _959 = Le(copy _5, const 122_u8);
        switchInt(move _959) -> [0: bb1418, otherwise: bb1419];
    }

    bb1418: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1419: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S101;
        goto -> bb1921;
    }

    bb1420: {
        StorageLive(_961);
        StorageLive(_960);
        _960 = copy _2;
        _961 = Lt(move _960, copy _4);
        switchInt(move _961) -> [0: bb1421, otherwise: bb1422];
    }

    bb1421: {
        StorageDead(_960);
        _5 = const 0_u8;
        goto -> bb1424;
    }

    bb1422: {
        StorageDead(_960);
        StorageLive(_963);
        StorageLive(_962);
        _962 = copy _2;
        _963 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _962) -> [return: bb1423, unwind unreachable];
    }

    bb1423: {
        StorageDead(_962);
        _5 = copy (*_963);
        StorageDead(_963);
        goto -> bb1424;
    }

    bb1424: {
        StorageDead(_961);
        switchInt(copy _5) -> [45: bb1425, 46: bb1426, 62: bb1427, otherwise: bb1428];
    }

    bb1425: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S100;
        goto -> bb1921;
    }

    bb1426: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1427: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1428: {
        _964 = Le(const 48_u8, copy _5);
        switchInt(move _964) -> [0: bb1430, otherwise: bb1429];
    }

    bb1429: {
        _965 = Le(copy _5, const 57_u8);
        switchInt(move _965) -> [0: bb1430, otherwise: bb1435];
    }

    bb1430: {
        _966 = Le(const 65_u8, copy _5);
        switchInt(move _966) -> [0: bb1432, otherwise: bb1431];
    }

    bb1431: {
        _967 = Le(copy _5, const 90_u8);
        switchInt(move _967) -> [0: bb1432, otherwise: bb1435];
    }

    bb1432: {
        _968 = Le(const 97_u8, copy _5);
        switchInt(move _968) -> [0: bb1434, otherwise: bb1433];
    }

    bb1433: {
        _969 = Le(copy _5, const 122_u8);
        switchInt(move _969) -> [0: bb1434, otherwise: bb1435];
    }

    bb1434: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1435: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S101;
        goto -> bb1921;
    }

    bb1436: {
        StorageLive(_971);
        StorageLive(_970);
        _970 = copy _2;
        _971 = Lt(move _970, copy _4);
        switchInt(move _971) -> [0: bb1437, otherwise: bb1438];
    }

    bb1437: {
        StorageDead(_970);
        _5 = const 0_u8;
        goto -> bb1440;
    }

    bb1438: {
        StorageDead(_970);
        StorageLive(_973);
        StorageLive(_972);
        _972 = copy _2;
        _973 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _972) -> [return: bb1439, unwind unreachable];
    }

    bb1439: {
        StorageDead(_972);
        _5 = copy (*_973);
        StorageDead(_973);
        goto -> bb1440;
    }

    bb1440: {
        StorageDead(_971);
        switchInt(copy _5) -> [45: bb1441, otherwise: bb1442];
    }

    bb1441: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S102;
        goto -> bb1921;
    }

    bb1442: {
        _974 = Le(const 48_u8, copy _5);
        switchInt(move _974) -> [0: bb1444, otherwise: bb1443];
    }

    bb1443: {
        _975 = Le(copy _5, const 57_u8);
        switchInt(move _975) -> [0: bb1444, otherwise: bb1449];
    }

    bb1444: {
        _976 = Le(const 65_u8, copy _5);
        switchInt(move _976) -> [0: bb1446, otherwise: bb1445];
    }

    bb1445: {
        _977 = Le(copy _5, const 90_u8);
        switchInt(move _977) -> [0: bb1446, otherwise: bb1449];
    }

    bb1446: {
        _978 = Le(const 97_u8, copy _5);
        switchInt(move _978) -> [0: bb1448, otherwise: bb1447];
    }

    bb1447: {
        _979 = Le(copy _5, const 122_u8);
        switchInt(move _979) -> [0: bb1448, otherwise: bb1449];
    }

    bb1448: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1449: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S103;
        goto -> bb1921;
    }

    bb1450: {
        StorageLive(_981);
        StorageLive(_980);
        _980 = copy _2;
        _981 = Lt(move _980, copy _4);
        switchInt(move _981) -> [0: bb1451, otherwise: bb1452];
    }

    bb1451: {
        StorageDead(_980);
        _5 = const 0_u8;
        goto -> bb1454;
    }

    bb1452: {
        StorageDead(_980);
        StorageLive(_983);
        StorageLive(_982);
        _982 = copy _2;
        _983 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _982) -> [return: bb1453, unwind unreachable];
    }

    bb1453: {
        StorageDead(_982);
        _5 = copy (*_983);
        StorageDead(_983);
        goto -> bb1454;
    }

    bb1454: {
        StorageDead(_981);
        switchInt(copy _5) -> [45: bb1455, 46: bb1456, 62: bb1457, otherwise: bb1458];
    }

    bb1455: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S102;
        goto -> bb1921;
    }

    bb1456: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1457: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1458: {
        _984 = Le(const 48_u8, copy _5);
        switchInt(move _984) -> [0: bb1460, otherwise: bb1459];
    }

    bb1459: {
        _985 = Le(copy _5, const 57_u8);
        switchInt(move _985) -> [0: bb1460, otherwise: bb1465];
    }

    bb1460: {
        _986 = Le(const 65_u8, copy _5);
        switchInt(move _986) -> [0: bb1462, otherwise: bb1461];
    }

    bb1461: {
        _987 = Le(copy _5, const 90_u8);
        switchInt(move _987) -> [0: bb1462, otherwise: bb1465];
    }

    bb1462: {
        _988 = Le(const 97_u8, copy _5);
        switchInt(move _988) -> [0: bb1464, otherwise: bb1463];
    }

    bb1463: {
        _989 = Le(copy _5, const 122_u8);
        switchInt(move _989) -> [0: bb1464, otherwise: bb1465];
    }

    bb1464: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1465: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S103;
        goto -> bb1921;
    }

    bb1466: {
        StorageLive(_991);
        StorageLive(_990);
        _990 = copy _2;
        _991 = Lt(move _990, copy _4);
        switchInt(move _991) -> [0: bb1467, otherwise: bb1468];
    }

    bb1467: {
        StorageDead(_990);
        _5 = const 0_u8;
        goto -> bb1470;
    }

    bb1468: {
        StorageDead(_990);
        StorageLive(_993);
        StorageLive(_992);
        _992 = copy _2;
        _993 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _992) -> [return: bb1469, unwind unreachable];
    }

    bb1469: {
        StorageDead(_992);
        _5 = copy (*_993);
        StorageDead(_993);
        goto -> bb1470;
    }

    bb1470: {
        StorageDead(_991);
        switchInt(copy _5) -> [45: bb1471, otherwise: bb1472];
    }

    bb1471: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S104;
        goto -> bb1921;
    }

    bb1472: {
        _994 = Le(const 48_u8, copy _5);
        switchInt(move _994) -> [0: bb1474, otherwise: bb1473];
    }

    bb1473: {
        _995 = Le(copy _5, const 57_u8);
        switchInt(move _995) -> [0: bb1474, otherwise: bb1479];
    }

    bb1474: {
        _996 = Le(const 65_u8, copy _5);
        switchInt(move _996) -> [0: bb1476, otherwise: bb1475];
    }

    bb1475: {
        _997 = Le(copy _5, const 90_u8);
        switchInt(move _997) -> [0: bb1476, otherwise: bb1479];
    }

    bb1476: {
        _998 = Le(const 97_u8, copy _5);
        switchInt(move _998) -> [0: bb1478, otherwise: bb1477];
    }

    bb1477: {
        _999 = Le(copy _5, const 122_u8);
        switchInt(move _999) -> [0: bb1478, otherwise: bb1479];
    }

    bb1478: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1479: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S105;
        goto -> bb1921;
    }

    bb1480: {
        StorageLive(_1001);
        StorageLive(_1000);
        _1000 = copy _2;
        _1001 = Lt(move _1000, copy _4);
        switchInt(move _1001) -> [0: bb1481, otherwise: bb1482];
    }

    bb1481: {
        StorageDead(_1000);
        _5 = const 0_u8;
        goto -> bb1484;
    }

    bb1482: {
        StorageDead(_1000);
        StorageLive(_1003);
        StorageLive(_1002);
        _1002 = copy _2;
        _1003 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1002) -> [return: bb1483, unwind unreachable];
    }

    bb1483: {
        StorageDead(_1002);
        _5 = copy (*_1003);
        StorageDead(_1003);
        goto -> bb1484;
    }

    bb1484: {
        StorageDead(_1001);
        switchInt(copy _5) -> [45: bb1485, 46: bb1486, 62: bb1487, otherwise: bb1488];
    }

    bb1485: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S104;
        goto -> bb1921;
    }

    bb1486: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1487: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1488: {
        _1004 = Le(const 48_u8, copy _5);
        switchInt(move _1004) -> [0: bb1490, otherwise: bb1489];
    }

    bb1489: {
        _1005 = Le(copy _5, const 57_u8);
        switchInt(move _1005) -> [0: bb1490, otherwise: bb1495];
    }

    bb1490: {
        _1006 = Le(const 65_u8, copy _5);
        switchInt(move _1006) -> [0: bb1492, otherwise: bb1491];
    }

    bb1491: {
        _1007 = Le(copy _5, const 90_u8);
        switchInt(move _1007) -> [0: bb1492, otherwise: bb1495];
    }

    bb1492: {
        _1008 = Le(const 97_u8, copy _5);
        switchInt(move _1008) -> [0: bb1494, otherwise: bb1493];
    }

    bb1493: {
        _1009 = Le(copy _5, const 122_u8);
        switchInt(move _1009) -> [0: bb1494, otherwise: bb1495];
    }

    bb1494: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1495: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S105;
        goto -> bb1921;
    }

    bb1496: {
        StorageLive(_1011);
        StorageLive(_1010);
        _1010 = copy _2;
        _1011 = Lt(move _1010, copy _4);
        switchInt(move _1011) -> [0: bb1497, otherwise: bb1498];
    }

    bb1497: {
        StorageDead(_1010);
        _5 = const 0_u8;
        goto -> bb1500;
    }

    bb1498: {
        StorageDead(_1010);
        StorageLive(_1013);
        StorageLive(_1012);
        _1012 = copy _2;
        _1013 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1012) -> [return: bb1499, unwind unreachable];
    }

    bb1499: {
        StorageDead(_1012);
        _5 = copy (*_1013);
        StorageDead(_1013);
        goto -> bb1500;
    }

    bb1500: {
        StorageDead(_1011);
        switchInt(copy _5) -> [45: bb1501, otherwise: bb1502];
    }

    bb1501: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S106;
        goto -> bb1921;
    }

    bb1502: {
        _1014 = Le(const 48_u8, copy _5);
        switchInt(move _1014) -> [0: bb1504, otherwise: bb1503];
    }

    bb1503: {
        _1015 = Le(copy _5, const 57_u8);
        switchInt(move _1015) -> [0: bb1504, otherwise: bb1509];
    }

    bb1504: {
        _1016 = Le(const 65_u8, copy _5);
        switchInt(move _1016) -> [0: bb1506, otherwise: bb1505];
    }

    bb1505: {
        _1017 = Le(copy _5, const 90_u8);
        switchInt(move _1017) -> [0: bb1506, otherwise: bb1509];
    }

    bb1506: {
        _1018 = Le(const 97_u8, copy _5);
        switchInt(move _1018) -> [0: bb1508, otherwise: bb1507];
    }

    bb1507: {
        _1019 = Le(copy _5, const 122_u8);
        switchInt(move _1019) -> [0: bb1508, otherwise: bb1509];
    }

    bb1508: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1509: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S107;
        goto -> bb1921;
    }

    bb1510: {
        StorageLive(_1021);
        StorageLive(_1020);
        _1020 = copy _2;
        _1021 = Lt(move _1020, copy _4);
        switchInt(move _1021) -> [0: bb1511, otherwise: bb1512];
    }

    bb1511: {
        StorageDead(_1020);
        _5 = const 0_u8;
        goto -> bb1514;
    }

    bb1512: {
        StorageDead(_1020);
        StorageLive(_1023);
        StorageLive(_1022);
        _1022 = copy _2;
        _1023 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1022) -> [return: bb1513, unwind unreachable];
    }

    bb1513: {
        StorageDead(_1022);
        _5 = copy (*_1023);
        StorageDead(_1023);
        goto -> bb1514;
    }

    bb1514: {
        StorageDead(_1021);
        switchInt(copy _5) -> [45: bb1515, 46: bb1516, 62: bb1517, otherwise: bb1518];
    }

    bb1515: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S106;
        goto -> bb1921;
    }

    bb1516: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1517: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1518: {
        _1024 = Le(const 48_u8, copy _5);
        switchInt(move _1024) -> [0: bb1520, otherwise: bb1519];
    }

    bb1519: {
        _1025 = Le(copy _5, const 57_u8);
        switchInt(move _1025) -> [0: bb1520, otherwise: bb1525];
    }

    bb1520: {
        _1026 = Le(const 65_u8, copy _5);
        switchInt(move _1026) -> [0: bb1522, otherwise: bb1521];
    }

    bb1521: {
        _1027 = Le(copy _5, const 90_u8);
        switchInt(move _1027) -> [0: bb1522, otherwise: bb1525];
    }

    bb1522: {
        _1028 = Le(const 97_u8, copy _5);
        switchInt(move _1028) -> [0: bb1524, otherwise: bb1523];
    }

    bb1523: {
        _1029 = Le(copy _5, const 122_u8);
        switchInt(move _1029) -> [0: bb1524, otherwise: bb1525];
    }

    bb1524: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1525: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S107;
        goto -> bb1921;
    }

    bb1526: {
        StorageLive(_1031);
        StorageLive(_1030);
        _1030 = copy _2;
        _1031 = Lt(move _1030, copy _4);
        switchInt(move _1031) -> [0: bb1527, otherwise: bb1528];
    }

    bb1527: {
        StorageDead(_1030);
        _5 = const 0_u8;
        goto -> bb1530;
    }

    bb1528: {
        StorageDead(_1030);
        StorageLive(_1033);
        StorageLive(_1032);
        _1032 = copy _2;
        _1033 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1032) -> [return: bb1529, unwind unreachable];
    }

    bb1529: {
        StorageDead(_1032);
        _5 = copy (*_1033);
        StorageDead(_1033);
        goto -> bb1530;
    }

    bb1530: {
        StorageDead(_1031);
        switchInt(copy _5) -> [45: bb1531, otherwise: bb1532];
    }

    bb1531: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S108;
        goto -> bb1921;
    }

    bb1532: {
        _1034 = Le(const 48_u8, copy _5);
        switchInt(move _1034) -> [0: bb1534, otherwise: bb1533];
    }

    bb1533: {
        _1035 = Le(copy _5, const 57_u8);
        switchInt(move _1035) -> [0: bb1534, otherwise: bb1539];
    }

    bb1534: {
        _1036 = Le(const 65_u8, copy _5);
        switchInt(move _1036) -> [0: bb1536, otherwise: bb1535];
    }

    bb1535: {
        _1037 = Le(copy _5, const 90_u8);
        switchInt(move _1037) -> [0: bb1536, otherwise: bb1539];
    }

    bb1536: {
        _1038 = Le(const 97_u8, copy _5);
        switchInt(move _1038) -> [0: bb1538, otherwise: bb1537];
    }

    bb1537: {
        _1039 = Le(copy _5, const 122_u8);
        switchInt(move _1039) -> [0: bb1538, otherwise: bb1539];
    }

    bb1538: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1539: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S109;
        goto -> bb1921;
    }

    bb1540: {
        StorageLive(_1041);
        StorageLive(_1040);
        _1040 = copy _2;
        _1041 = Lt(move _1040, copy _4);
        switchInt(move _1041) -> [0: bb1541, otherwise: bb1542];
    }

    bb1541: {
        StorageDead(_1040);
        _5 = const 0_u8;
        goto -> bb1544;
    }

    bb1542: {
        StorageDead(_1040);
        StorageLive(_1043);
        StorageLive(_1042);
        _1042 = copy _2;
        _1043 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1042) -> [return: bb1543, unwind unreachable];
    }

    bb1543: {
        StorageDead(_1042);
        _5 = copy (*_1043);
        StorageDead(_1043);
        goto -> bb1544;
    }

    bb1544: {
        StorageDead(_1041);
        switchInt(copy _5) -> [45: bb1545, 46: bb1546, 62: bb1547, otherwise: bb1548];
    }

    bb1545: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S108;
        goto -> bb1921;
    }

    bb1546: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1547: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1548: {
        _1044 = Le(const 48_u8, copy _5);
        switchInt(move _1044) -> [0: bb1550, otherwise: bb1549];
    }

    bb1549: {
        _1045 = Le(copy _5, const 57_u8);
        switchInt(move _1045) -> [0: bb1550, otherwise: bb1555];
    }

    bb1550: {
        _1046 = Le(const 65_u8, copy _5);
        switchInt(move _1046) -> [0: bb1552, otherwise: bb1551];
    }

    bb1551: {
        _1047 = Le(copy _5, const 90_u8);
        switchInt(move _1047) -> [0: bb1552, otherwise: bb1555];
    }

    bb1552: {
        _1048 = Le(const 97_u8, copy _5);
        switchInt(move _1048) -> [0: bb1554, otherwise: bb1553];
    }

    bb1553: {
        _1049 = Le(copy _5, const 122_u8);
        switchInt(move _1049) -> [0: bb1554, otherwise: bb1555];
    }

    bb1554: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1555: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S109;
        goto -> bb1921;
    }

    bb1556: {
        StorageLive(_1051);
        StorageLive(_1050);
        _1050 = copy _2;
        _1051 = Lt(move _1050, copy _4);
        switchInt(move _1051) -> [0: bb1557, otherwise: bb1558];
    }

    bb1557: {
        StorageDead(_1050);
        _5 = const 0_u8;
        goto -> bb1560;
    }

    bb1558: {
        StorageDead(_1050);
        StorageLive(_1053);
        StorageLive(_1052);
        _1052 = copy _2;
        _1053 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1052) -> [return: bb1559, unwind unreachable];
    }

    bb1559: {
        StorageDead(_1052);
        _5 = copy (*_1053);
        StorageDead(_1053);
        goto -> bb1560;
    }

    bb1560: {
        StorageDead(_1051);
        switchInt(copy _5) -> [45: bb1561, otherwise: bb1562];
    }

    bb1561: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S110;
        goto -> bb1921;
    }

    bb1562: {
        _1054 = Le(const 48_u8, copy _5);
        switchInt(move _1054) -> [0: bb1564, otherwise: bb1563];
    }

    bb1563: {
        _1055 = Le(copy _5, const 57_u8);
        switchInt(move _1055) -> [0: bb1564, otherwise: bb1569];
    }

    bb1564: {
        _1056 = Le(const 65_u8, copy _5);
        switchInt(move _1056) -> [0: bb1566, otherwise: bb1565];
    }

    bb1565: {
        _1057 = Le(copy _5, const 90_u8);
        switchInt(move _1057) -> [0: bb1566, otherwise: bb1569];
    }

    bb1566: {
        _1058 = Le(const 97_u8, copy _5);
        switchInt(move _1058) -> [0: bb1568, otherwise: bb1567];
    }

    bb1567: {
        _1059 = Le(copy _5, const 122_u8);
        switchInt(move _1059) -> [0: bb1568, otherwise: bb1569];
    }

    bb1568: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1569: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S111;
        goto -> bb1921;
    }

    bb1570: {
        StorageLive(_1061);
        StorageLive(_1060);
        _1060 = copy _2;
        _1061 = Lt(move _1060, copy _4);
        switchInt(move _1061) -> [0: bb1571, otherwise: bb1572];
    }

    bb1571: {
        StorageDead(_1060);
        _5 = const 0_u8;
        goto -> bb1574;
    }

    bb1572: {
        StorageDead(_1060);
        StorageLive(_1063);
        StorageLive(_1062);
        _1062 = copy _2;
        _1063 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1062) -> [return: bb1573, unwind unreachable];
    }

    bb1573: {
        StorageDead(_1062);
        _5 = copy (*_1063);
        StorageDead(_1063);
        goto -> bb1574;
    }

    bb1574: {
        StorageDead(_1061);
        switchInt(copy _5) -> [45: bb1575, 46: bb1576, 62: bb1577, otherwise: bb1578];
    }

    bb1575: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S110;
        goto -> bb1921;
    }

    bb1576: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1577: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1578: {
        _1064 = Le(const 48_u8, copy _5);
        switchInt(move _1064) -> [0: bb1580, otherwise: bb1579];
    }

    bb1579: {
        _1065 = Le(copy _5, const 57_u8);
        switchInt(move _1065) -> [0: bb1580, otherwise: bb1585];
    }

    bb1580: {
        _1066 = Le(const 65_u8, copy _5);
        switchInt(move _1066) -> [0: bb1582, otherwise: bb1581];
    }

    bb1581: {
        _1067 = Le(copy _5, const 90_u8);
        switchInt(move _1067) -> [0: bb1582, otherwise: bb1585];
    }

    bb1582: {
        _1068 = Le(const 97_u8, copy _5);
        switchInt(move _1068) -> [0: bb1584, otherwise: bb1583];
    }

    bb1583: {
        _1069 = Le(copy _5, const 122_u8);
        switchInt(move _1069) -> [0: bb1584, otherwise: bb1585];
    }

    bb1584: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1585: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S111;
        goto -> bb1921;
    }

    bb1586: {
        StorageLive(_1071);
        StorageLive(_1070);
        _1070 = copy _2;
        _1071 = Lt(move _1070, copy _4);
        switchInt(move _1071) -> [0: bb1587, otherwise: bb1588];
    }

    bb1587: {
        StorageDead(_1070);
        _5 = const 0_u8;
        goto -> bb1590;
    }

    bb1588: {
        StorageDead(_1070);
        StorageLive(_1073);
        StorageLive(_1072);
        _1072 = copy _2;
        _1073 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1072) -> [return: bb1589, unwind unreachable];
    }

    bb1589: {
        StorageDead(_1072);
        _5 = copy (*_1073);
        StorageDead(_1073);
        goto -> bb1590;
    }

    bb1590: {
        StorageDead(_1071);
        switchInt(copy _5) -> [45: bb1591, otherwise: bb1592];
    }

    bb1591: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S112;
        goto -> bb1921;
    }

    bb1592: {
        _1074 = Le(const 48_u8, copy _5);
        switchInt(move _1074) -> [0: bb1594, otherwise: bb1593];
    }

    bb1593: {
        _1075 = Le(copy _5, const 57_u8);
        switchInt(move _1075) -> [0: bb1594, otherwise: bb1599];
    }

    bb1594: {
        _1076 = Le(const 65_u8, copy _5);
        switchInt(move _1076) -> [0: bb1596, otherwise: bb1595];
    }

    bb1595: {
        _1077 = Le(copy _5, const 90_u8);
        switchInt(move _1077) -> [0: bb1596, otherwise: bb1599];
    }

    bb1596: {
        _1078 = Le(const 97_u8, copy _5);
        switchInt(move _1078) -> [0: bb1598, otherwise: bb1597];
    }

    bb1597: {
        _1079 = Le(copy _5, const 122_u8);
        switchInt(move _1079) -> [0: bb1598, otherwise: bb1599];
    }

    bb1598: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1599: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S113;
        goto -> bb1921;
    }

    bb1600: {
        StorageLive(_1081);
        StorageLive(_1080);
        _1080 = copy _2;
        _1081 = Lt(move _1080, copy _4);
        switchInt(move _1081) -> [0: bb1601, otherwise: bb1602];
    }

    bb1601: {
        StorageDead(_1080);
        _5 = const 0_u8;
        goto -> bb1604;
    }

    bb1602: {
        StorageDead(_1080);
        StorageLive(_1083);
        StorageLive(_1082);
        _1082 = copy _2;
        _1083 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1082) -> [return: bb1603, unwind unreachable];
    }

    bb1603: {
        StorageDead(_1082);
        _5 = copy (*_1083);
        StorageDead(_1083);
        goto -> bb1604;
    }

    bb1604: {
        StorageDead(_1081);
        switchInt(copy _5) -> [45: bb1605, 46: bb1606, 62: bb1607, otherwise: bb1608];
    }

    bb1605: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S112;
        goto -> bb1921;
    }

    bb1606: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1607: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1608: {
        _1084 = Le(const 48_u8, copy _5);
        switchInt(move _1084) -> [0: bb1610, otherwise: bb1609];
    }

    bb1609: {
        _1085 = Le(copy _5, const 57_u8);
        switchInt(move _1085) -> [0: bb1610, otherwise: bb1615];
    }

    bb1610: {
        _1086 = Le(const 65_u8, copy _5);
        switchInt(move _1086) -> [0: bb1612, otherwise: bb1611];
    }

    bb1611: {
        _1087 = Le(copy _5, const 90_u8);
        switchInt(move _1087) -> [0: bb1612, otherwise: bb1615];
    }

    bb1612: {
        _1088 = Le(const 97_u8, copy _5);
        switchInt(move _1088) -> [0: bb1614, otherwise: bb1613];
    }

    bb1613: {
        _1089 = Le(copy _5, const 122_u8);
        switchInt(move _1089) -> [0: bb1614, otherwise: bb1615];
    }

    bb1614: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1615: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S113;
        goto -> bb1921;
    }

    bb1616: {
        StorageLive(_1091);
        StorageLive(_1090);
        _1090 = copy _2;
        _1091 = Lt(move _1090, copy _4);
        switchInt(move _1091) -> [0: bb1617, otherwise: bb1618];
    }

    bb1617: {
        StorageDead(_1090);
        _5 = const 0_u8;
        goto -> bb1620;
    }

    bb1618: {
        StorageDead(_1090);
        StorageLive(_1093);
        StorageLive(_1092);
        _1092 = copy _2;
        _1093 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1092) -> [return: bb1619, unwind unreachable];
    }

    bb1619: {
        StorageDead(_1092);
        _5 = copy (*_1093);
        StorageDead(_1093);
        goto -> bb1620;
    }

    bb1620: {
        StorageDead(_1091);
        switchInt(copy _5) -> [45: bb1621, otherwise: bb1622];
    }

    bb1621: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S114;
        goto -> bb1921;
    }

    bb1622: {
        _1094 = Le(const 48_u8, copy _5);
        switchInt(move _1094) -> [0: bb1624, otherwise: bb1623];
    }

    bb1623: {
        _1095 = Le(copy _5, const 57_u8);
        switchInt(move _1095) -> [0: bb1624, otherwise: bb1629];
    }

    bb1624: {
        _1096 = Le(const 65_u8, copy _5);
        switchInt(move _1096) -> [0: bb1626, otherwise: bb1625];
    }

    bb1625: {
        _1097 = Le(copy _5, const 90_u8);
        switchInt(move _1097) -> [0: bb1626, otherwise: bb1629];
    }

    bb1626: {
        _1098 = Le(const 97_u8, copy _5);
        switchInt(move _1098) -> [0: bb1628, otherwise: bb1627];
    }

    bb1627: {
        _1099 = Le(copy _5, const 122_u8);
        switchInt(move _1099) -> [0: bb1628, otherwise: bb1629];
    }

    bb1628: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1629: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S115;
        goto -> bb1921;
    }

    bb1630: {
        StorageLive(_1101);
        StorageLive(_1100);
        _1100 = copy _2;
        _1101 = Lt(move _1100, copy _4);
        switchInt(move _1101) -> [0: bb1631, otherwise: bb1632];
    }

    bb1631: {
        StorageDead(_1100);
        _5 = const 0_u8;
        goto -> bb1634;
    }

    bb1632: {
        StorageDead(_1100);
        StorageLive(_1103);
        StorageLive(_1102);
        _1102 = copy _2;
        _1103 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1102) -> [return: bb1633, unwind unreachable];
    }

    bb1633: {
        StorageDead(_1102);
        _5 = copy (*_1103);
        StorageDead(_1103);
        goto -> bb1634;
    }

    bb1634: {
        StorageDead(_1101);
        switchInt(copy _5) -> [45: bb1635, 46: bb1636, 62: bb1637, otherwise: bb1638];
    }

    bb1635: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S114;
        goto -> bb1921;
    }

    bb1636: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1637: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1638: {
        _1104 = Le(const 48_u8, copy _5);
        switchInt(move _1104) -> [0: bb1640, otherwise: bb1639];
    }

    bb1639: {
        _1105 = Le(copy _5, const 57_u8);
        switchInt(move _1105) -> [0: bb1640, otherwise: bb1645];
    }

    bb1640: {
        _1106 = Le(const 65_u8, copy _5);
        switchInt(move _1106) -> [0: bb1642, otherwise: bb1641];
    }

    bb1641: {
        _1107 = Le(copy _5, const 90_u8);
        switchInt(move _1107) -> [0: bb1642, otherwise: bb1645];
    }

    bb1642: {
        _1108 = Le(const 97_u8, copy _5);
        switchInt(move _1108) -> [0: bb1644, otherwise: bb1643];
    }

    bb1643: {
        _1109 = Le(copy _5, const 122_u8);
        switchInt(move _1109) -> [0: bb1644, otherwise: bb1645];
    }

    bb1644: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1645: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S115;
        goto -> bb1921;
    }

    bb1646: {
        StorageLive(_1111);
        StorageLive(_1110);
        _1110 = copy _2;
        _1111 = Lt(move _1110, copy _4);
        switchInt(move _1111) -> [0: bb1647, otherwise: bb1648];
    }

    bb1647: {
        StorageDead(_1110);
        _5 = const 0_u8;
        goto -> bb1650;
    }

    bb1648: {
        StorageDead(_1110);
        StorageLive(_1113);
        StorageLive(_1112);
        _1112 = copy _2;
        _1113 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1112) -> [return: bb1649, unwind unreachable];
    }

    bb1649: {
        StorageDead(_1112);
        _5 = copy (*_1113);
        StorageDead(_1113);
        goto -> bb1650;
    }

    bb1650: {
        StorageDead(_1111);
        switchInt(copy _5) -> [45: bb1651, otherwise: bb1652];
    }

    bb1651: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S116;
        goto -> bb1921;
    }

    bb1652: {
        _1114 = Le(const 48_u8, copy _5);
        switchInt(move _1114) -> [0: bb1654, otherwise: bb1653];
    }

    bb1653: {
        _1115 = Le(copy _5, const 57_u8);
        switchInt(move _1115) -> [0: bb1654, otherwise: bb1659];
    }

    bb1654: {
        _1116 = Le(const 65_u8, copy _5);
        switchInt(move _1116) -> [0: bb1656, otherwise: bb1655];
    }

    bb1655: {
        _1117 = Le(copy _5, const 90_u8);
        switchInt(move _1117) -> [0: bb1656, otherwise: bb1659];
    }

    bb1656: {
        _1118 = Le(const 97_u8, copy _5);
        switchInt(move _1118) -> [0: bb1658, otherwise: bb1657];
    }

    bb1657: {
        _1119 = Le(copy _5, const 122_u8);
        switchInt(move _1119) -> [0: bb1658, otherwise: bb1659];
    }

    bb1658: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1659: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S117;
        goto -> bb1921;
    }

    bb1660: {
        StorageLive(_1121);
        StorageLive(_1120);
        _1120 = copy _2;
        _1121 = Lt(move _1120, copy _4);
        switchInt(move _1121) -> [0: bb1661, otherwise: bb1662];
    }

    bb1661: {
        StorageDead(_1120);
        _5 = const 0_u8;
        goto -> bb1664;
    }

    bb1662: {
        StorageDead(_1120);
        StorageLive(_1123);
        StorageLive(_1122);
        _1122 = copy _2;
        _1123 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1122) -> [return: bb1663, unwind unreachable];
    }

    bb1663: {
        StorageDead(_1122);
        _5 = copy (*_1123);
        StorageDead(_1123);
        goto -> bb1664;
    }

    bb1664: {
        StorageDead(_1121);
        switchInt(copy _5) -> [45: bb1665, 46: bb1666, 62: bb1667, otherwise: bb1668];
    }

    bb1665: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S116;
        goto -> bb1921;
    }

    bb1666: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1667: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1668: {
        _1124 = Le(const 48_u8, copy _5);
        switchInt(move _1124) -> [0: bb1670, otherwise: bb1669];
    }

    bb1669: {
        _1125 = Le(copy _5, const 57_u8);
        switchInt(move _1125) -> [0: bb1670, otherwise: bb1675];
    }

    bb1670: {
        _1126 = Le(const 65_u8, copy _5);
        switchInt(move _1126) -> [0: bb1672, otherwise: bb1671];
    }

    bb1671: {
        _1127 = Le(copy _5, const 90_u8);
        switchInt(move _1127) -> [0: bb1672, otherwise: bb1675];
    }

    bb1672: {
        _1128 = Le(const 97_u8, copy _5);
        switchInt(move _1128) -> [0: bb1674, otherwise: bb1673];
    }

    bb1673: {
        _1129 = Le(copy _5, const 122_u8);
        switchInt(move _1129) -> [0: bb1674, otherwise: bb1675];
    }

    bb1674: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1675: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S117;
        goto -> bb1921;
    }

    bb1676: {
        StorageLive(_1131);
        StorageLive(_1130);
        _1130 = copy _2;
        _1131 = Lt(move _1130, copy _4);
        switchInt(move _1131) -> [0: bb1677, otherwise: bb1678];
    }

    bb1677: {
        StorageDead(_1130);
        _5 = const 0_u8;
        goto -> bb1680;
    }

    bb1678: {
        StorageDead(_1130);
        StorageLive(_1133);
        StorageLive(_1132);
        _1132 = copy _2;
        _1133 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1132) -> [return: bb1679, unwind unreachable];
    }

    bb1679: {
        StorageDead(_1132);
        _5 = copy (*_1133);
        StorageDead(_1133);
        goto -> bb1680;
    }

    bb1680: {
        StorageDead(_1131);
        switchInt(copy _5) -> [45: bb1681, otherwise: bb1682];
    }

    bb1681: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S118;
        goto -> bb1921;
    }

    bb1682: {
        _1134 = Le(const 48_u8, copy _5);
        switchInt(move _1134) -> [0: bb1684, otherwise: bb1683];
    }

    bb1683: {
        _1135 = Le(copy _5, const 57_u8);
        switchInt(move _1135) -> [0: bb1684, otherwise: bb1689];
    }

    bb1684: {
        _1136 = Le(const 65_u8, copy _5);
        switchInt(move _1136) -> [0: bb1686, otherwise: bb1685];
    }

    bb1685: {
        _1137 = Le(copy _5, const 90_u8);
        switchInt(move _1137) -> [0: bb1686, otherwise: bb1689];
    }

    bb1686: {
        _1138 = Le(const 97_u8, copy _5);
        switchInt(move _1138) -> [0: bb1688, otherwise: bb1687];
    }

    bb1687: {
        _1139 = Le(copy _5, const 122_u8);
        switchInt(move _1139) -> [0: bb1688, otherwise: bb1689];
    }

    bb1688: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1689: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S119;
        goto -> bb1921;
    }

    bb1690: {
        StorageLive(_1141);
        StorageLive(_1140);
        _1140 = copy _2;
        _1141 = Lt(move _1140, copy _4);
        switchInt(move _1141) -> [0: bb1691, otherwise: bb1692];
    }

    bb1691: {
        StorageDead(_1140);
        _5 = const 0_u8;
        goto -> bb1694;
    }

    bb1692: {
        StorageDead(_1140);
        StorageLive(_1143);
        StorageLive(_1142);
        _1142 = copy _2;
        _1143 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1142) -> [return: bb1693, unwind unreachable];
    }

    bb1693: {
        StorageDead(_1142);
        _5 = copy (*_1143);
        StorageDead(_1143);
        goto -> bb1694;
    }

    bb1694: {
        StorageDead(_1141);
        switchInt(copy _5) -> [45: bb1695, 46: bb1696, 62: bb1697, otherwise: bb1698];
    }

    bb1695: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S118;
        goto -> bb1921;
    }

    bb1696: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1697: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1698: {
        _1144 = Le(const 48_u8, copy _5);
        switchInt(move _1144) -> [0: bb1700, otherwise: bb1699];
    }

    bb1699: {
        _1145 = Le(copy _5, const 57_u8);
        switchInt(move _1145) -> [0: bb1700, otherwise: bb1705];
    }

    bb1700: {
        _1146 = Le(const 65_u8, copy _5);
        switchInt(move _1146) -> [0: bb1702, otherwise: bb1701];
    }

    bb1701: {
        _1147 = Le(copy _5, const 90_u8);
        switchInt(move _1147) -> [0: bb1702, otherwise: bb1705];
    }

    bb1702: {
        _1148 = Le(const 97_u8, copy _5);
        switchInt(move _1148) -> [0: bb1704, otherwise: bb1703];
    }

    bb1703: {
        _1149 = Le(copy _5, const 122_u8);
        switchInt(move _1149) -> [0: bb1704, otherwise: bb1705];
    }

    bb1704: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1705: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S119;
        goto -> bb1921;
    }

    bb1706: {
        StorageLive(_1151);
        StorageLive(_1150);
        _1150 = copy _2;
        _1151 = Lt(move _1150, copy _4);
        switchInt(move _1151) -> [0: bb1707, otherwise: bb1708];
    }

    bb1707: {
        StorageDead(_1150);
        _5 = const 0_u8;
        goto -> bb1710;
    }

    bb1708: {
        StorageDead(_1150);
        StorageLive(_1153);
        StorageLive(_1152);
        _1152 = copy _2;
        _1153 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1152) -> [return: bb1709, unwind unreachable];
    }

    bb1709: {
        StorageDead(_1152);
        _5 = copy (*_1153);
        StorageDead(_1153);
        goto -> bb1710;
    }

    bb1710: {
        StorageDead(_1151);
        switchInt(copy _5) -> [45: bb1711, otherwise: bb1712];
    }

    bb1711: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S120;
        goto -> bb1921;
    }

    bb1712: {
        _1154 = Le(const 48_u8, copy _5);
        switchInt(move _1154) -> [0: bb1714, otherwise: bb1713];
    }

    bb1713: {
        _1155 = Le(copy _5, const 57_u8);
        switchInt(move _1155) -> [0: bb1714, otherwise: bb1719];
    }

    bb1714: {
        _1156 = Le(const 65_u8, copy _5);
        switchInt(move _1156) -> [0: bb1716, otherwise: bb1715];
    }

    bb1715: {
        _1157 = Le(copy _5, const 90_u8);
        switchInt(move _1157) -> [0: bb1716, otherwise: bb1719];
    }

    bb1716: {
        _1158 = Le(const 97_u8, copy _5);
        switchInt(move _1158) -> [0: bb1718, otherwise: bb1717];
    }

    bb1717: {
        _1159 = Le(copy _5, const 122_u8);
        switchInt(move _1159) -> [0: bb1718, otherwise: bb1719];
    }

    bb1718: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1719: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S121;
        goto -> bb1921;
    }

    bb1720: {
        StorageLive(_1161);
        StorageLive(_1160);
        _1160 = copy _2;
        _1161 = Lt(move _1160, copy _4);
        switchInt(move _1161) -> [0: bb1721, otherwise: bb1722];
    }

    bb1721: {
        StorageDead(_1160);
        _5 = const 0_u8;
        goto -> bb1724;
    }

    bb1722: {
        StorageDead(_1160);
        StorageLive(_1163);
        StorageLive(_1162);
        _1162 = copy _2;
        _1163 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1162) -> [return: bb1723, unwind unreachable];
    }

    bb1723: {
        StorageDead(_1162);
        _5 = copy (*_1163);
        StorageDead(_1163);
        goto -> bb1724;
    }

    bb1724: {
        StorageDead(_1161);
        switchInt(copy _5) -> [45: bb1725, 46: bb1726, 62: bb1727, otherwise: bb1728];
    }

    bb1725: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S120;
        goto -> bb1921;
    }

    bb1726: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1727: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1728: {
        _1164 = Le(const 48_u8, copy _5);
        switchInt(move _1164) -> [0: bb1730, otherwise: bb1729];
    }

    bb1729: {
        _1165 = Le(copy _5, const 57_u8);
        switchInt(move _1165) -> [0: bb1730, otherwise: bb1735];
    }

    bb1730: {
        _1166 = Le(const 65_u8, copy _5);
        switchInt(move _1166) -> [0: bb1732, otherwise: bb1731];
    }

    bb1731: {
        _1167 = Le(copy _5, const 90_u8);
        switchInt(move _1167) -> [0: bb1732, otherwise: bb1735];
    }

    bb1732: {
        _1168 = Le(const 97_u8, copy _5);
        switchInt(move _1168) -> [0: bb1734, otherwise: bb1733];
    }

    bb1733: {
        _1169 = Le(copy _5, const 122_u8);
        switchInt(move _1169) -> [0: bb1734, otherwise: bb1735];
    }

    bb1734: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1735: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S121;
        goto -> bb1921;
    }

    bb1736: {
        StorageLive(_1171);
        StorageLive(_1170);
        _1170 = copy _2;
        _1171 = Lt(move _1170, copy _4);
        switchInt(move _1171) -> [0: bb1737, otherwise: bb1738];
    }

    bb1737: {
        StorageDead(_1170);
        _5 = const 0_u8;
        goto -> bb1740;
    }

    bb1738: {
        StorageDead(_1170);
        StorageLive(_1173);
        StorageLive(_1172);
        _1172 = copy _2;
        _1173 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1172) -> [return: bb1739, unwind unreachable];
    }

    bb1739: {
        StorageDead(_1172);
        _5 = copy (*_1173);
        StorageDead(_1173);
        goto -> bb1740;
    }

    bb1740: {
        StorageDead(_1171);
        switchInt(copy _5) -> [45: bb1741, otherwise: bb1742];
    }

    bb1741: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S122;
        goto -> bb1921;
    }

    bb1742: {
        _1174 = Le(const 48_u8, copy _5);
        switchInt(move _1174) -> [0: bb1744, otherwise: bb1743];
    }

    bb1743: {
        _1175 = Le(copy _5, const 57_u8);
        switchInt(move _1175) -> [0: bb1744, otherwise: bb1749];
    }

    bb1744: {
        _1176 = Le(const 65_u8, copy _5);
        switchInt(move _1176) -> [0: bb1746, otherwise: bb1745];
    }

    bb1745: {
        _1177 = Le(copy _5, const 90_u8);
        switchInt(move _1177) -> [0: bb1746, otherwise: bb1749];
    }

    bb1746: {
        _1178 = Le(const 97_u8, copy _5);
        switchInt(move _1178) -> [0: bb1748, otherwise: bb1747];
    }

    bb1747: {
        _1179 = Le(copy _5, const 122_u8);
        switchInt(move _1179) -> [0: bb1748, otherwise: bb1749];
    }

    bb1748: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1749: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S123;
        goto -> bb1921;
    }

    bb1750: {
        StorageLive(_1181);
        StorageLive(_1180);
        _1180 = copy _2;
        _1181 = Lt(move _1180, copy _4);
        switchInt(move _1181) -> [0: bb1751, otherwise: bb1752];
    }

    bb1751: {
        StorageDead(_1180);
        _5 = const 0_u8;
        goto -> bb1754;
    }

    bb1752: {
        StorageDead(_1180);
        StorageLive(_1183);
        StorageLive(_1182);
        _1182 = copy _2;
        _1183 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1182) -> [return: bb1753, unwind unreachable];
    }

    bb1753: {
        StorageDead(_1182);
        _5 = copy (*_1183);
        StorageDead(_1183);
        goto -> bb1754;
    }

    bb1754: {
        StorageDead(_1181);
        switchInt(copy _5) -> [45: bb1755, 46: bb1756, 62: bb1757, otherwise: bb1758];
    }

    bb1755: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S122;
        goto -> bb1921;
    }

    bb1756: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1757: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1758: {
        _1184 = Le(const 48_u8, copy _5);
        switchInt(move _1184) -> [0: bb1760, otherwise: bb1759];
    }

    bb1759: {
        _1185 = Le(copy _5, const 57_u8);
        switchInt(move _1185) -> [0: bb1760, otherwise: bb1765];
    }

    bb1760: {
        _1186 = Le(const 65_u8, copy _5);
        switchInt(move _1186) -> [0: bb1762, otherwise: bb1761];
    }

    bb1761: {
        _1187 = Le(copy _5, const 90_u8);
        switchInt(move _1187) -> [0: bb1762, otherwise: bb1765];
    }

    bb1762: {
        _1188 = Le(const 97_u8, copy _5);
        switchInt(move _1188) -> [0: bb1764, otherwise: bb1763];
    }

    bb1763: {
        _1189 = Le(copy _5, const 122_u8);
        switchInt(move _1189) -> [0: bb1764, otherwise: bb1765];
    }

    bb1764: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1765: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S123;
        goto -> bb1921;
    }

    bb1766: {
        StorageLive(_1191);
        StorageLive(_1190);
        _1190 = copy _2;
        _1191 = Lt(move _1190, copy _4);
        switchInt(move _1191) -> [0: bb1767, otherwise: bb1768];
    }

    bb1767: {
        StorageDead(_1190);
        _5 = const 0_u8;
        goto -> bb1770;
    }

    bb1768: {
        StorageDead(_1190);
        StorageLive(_1193);
        StorageLive(_1192);
        _1192 = copy _2;
        _1193 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1192) -> [return: bb1769, unwind unreachable];
    }

    bb1769: {
        StorageDead(_1192);
        _5 = copy (*_1193);
        StorageDead(_1193);
        goto -> bb1770;
    }

    bb1770: {
        StorageDead(_1191);
        switchInt(copy _5) -> [45: bb1771, otherwise: bb1772];
    }

    bb1771: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S124;
        goto -> bb1921;
    }

    bb1772: {
        _1194 = Le(const 48_u8, copy _5);
        switchInt(move _1194) -> [0: bb1774, otherwise: bb1773];
    }

    bb1773: {
        _1195 = Le(copy _5, const 57_u8);
        switchInt(move _1195) -> [0: bb1774, otherwise: bb1779];
    }

    bb1774: {
        _1196 = Le(const 65_u8, copy _5);
        switchInt(move _1196) -> [0: bb1776, otherwise: bb1775];
    }

    bb1775: {
        _1197 = Le(copy _5, const 90_u8);
        switchInt(move _1197) -> [0: bb1776, otherwise: bb1779];
    }

    bb1776: {
        _1198 = Le(const 97_u8, copy _5);
        switchInt(move _1198) -> [0: bb1778, otherwise: bb1777];
    }

    bb1777: {
        _1199 = Le(copy _5, const 122_u8);
        switchInt(move _1199) -> [0: bb1778, otherwise: bb1779];
    }

    bb1778: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1779: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S125;
        goto -> bb1921;
    }

    bb1780: {
        StorageLive(_1201);
        StorageLive(_1200);
        _1200 = copy _2;
        _1201 = Lt(move _1200, copy _4);
        switchInt(move _1201) -> [0: bb1781, otherwise: bb1782];
    }

    bb1781: {
        StorageDead(_1200);
        _5 = const 0_u8;
        goto -> bb1784;
    }

    bb1782: {
        StorageDead(_1200);
        StorageLive(_1203);
        StorageLive(_1202);
        _1202 = copy _2;
        _1203 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1202) -> [return: bb1783, unwind unreachable];
    }

    bb1783: {
        StorageDead(_1202);
        _5 = copy (*_1203);
        StorageDead(_1203);
        goto -> bb1784;
    }

    bb1784: {
        StorageDead(_1201);
        switchInt(copy _5) -> [45: bb1785, 46: bb1786, 62: bb1787, otherwise: bb1788];
    }

    bb1785: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S124;
        goto -> bb1921;
    }

    bb1786: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1787: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1788: {
        _1204 = Le(const 48_u8, copy _5);
        switchInt(move _1204) -> [0: bb1790, otherwise: bb1789];
    }

    bb1789: {
        _1205 = Le(copy _5, const 57_u8);
        switchInt(move _1205) -> [0: bb1790, otherwise: bb1795];
    }

    bb1790: {
        _1206 = Le(const 65_u8, copy _5);
        switchInt(move _1206) -> [0: bb1792, otherwise: bb1791];
    }

    bb1791: {
        _1207 = Le(copy _5, const 90_u8);
        switchInt(move _1207) -> [0: bb1792, otherwise: bb1795];
    }

    bb1792: {
        _1208 = Le(const 97_u8, copy _5);
        switchInt(move _1208) -> [0: bb1794, otherwise: bb1793];
    }

    bb1793: {
        _1209 = Le(copy _5, const 122_u8);
        switchInt(move _1209) -> [0: bb1794, otherwise: bb1795];
    }

    bb1794: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1795: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S125;
        goto -> bb1921;
    }

    bb1796: {
        StorageLive(_1211);
        StorageLive(_1210);
        _1210 = copy _2;
        _1211 = Lt(move _1210, copy _4);
        switchInt(move _1211) -> [0: bb1797, otherwise: bb1798];
    }

    bb1797: {
        StorageDead(_1210);
        _5 = const 0_u8;
        goto -> bb1800;
    }

    bb1798: {
        StorageDead(_1210);
        StorageLive(_1213);
        StorageLive(_1212);
        _1212 = copy _2;
        _1213 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1212) -> [return: bb1799, unwind unreachable];
    }

    bb1799: {
        StorageDead(_1212);
        _5 = copy (*_1213);
        StorageDead(_1213);
        goto -> bb1800;
    }

    bb1800: {
        StorageDead(_1211);
        switchInt(copy _5) -> [45: bb1801, otherwise: bb1802];
    }

    bb1801: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S126;
        goto -> bb1921;
    }

    bb1802: {
        _1214 = Le(const 48_u8, copy _5);
        switchInt(move _1214) -> [0: bb1804, otherwise: bb1803];
    }

    bb1803: {
        _1215 = Le(copy _5, const 57_u8);
        switchInt(move _1215) -> [0: bb1804, otherwise: bb1809];
    }

    bb1804: {
        _1216 = Le(const 65_u8, copy _5);
        switchInt(move _1216) -> [0: bb1806, otherwise: bb1805];
    }

    bb1805: {
        _1217 = Le(copy _5, const 90_u8);
        switchInt(move _1217) -> [0: bb1806, otherwise: bb1809];
    }

    bb1806: {
        _1218 = Le(const 97_u8, copy _5);
        switchInt(move _1218) -> [0: bb1808, otherwise: bb1807];
    }

    bb1807: {
        _1219 = Le(copy _5, const 122_u8);
        switchInt(move _1219) -> [0: bb1808, otherwise: bb1809];
    }

    bb1808: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1809: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S127;
        goto -> bb1921;
    }

    bb1810: {
        StorageLive(_1221);
        StorageLive(_1220);
        _1220 = copy _2;
        _1221 = Lt(move _1220, copy _4);
        switchInt(move _1221) -> [0: bb1811, otherwise: bb1812];
    }

    bb1811: {
        StorageDead(_1220);
        _5 = const 0_u8;
        goto -> bb1814;
    }

    bb1812: {
        StorageDead(_1220);
        StorageLive(_1223);
        StorageLive(_1222);
        _1222 = copy _2;
        _1223 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1222) -> [return: bb1813, unwind unreachable];
    }

    bb1813: {
        StorageDead(_1222);
        _5 = copy (*_1223);
        StorageDead(_1223);
        goto -> bb1814;
    }

    bb1814: {
        StorageDead(_1221);
        switchInt(copy _5) -> [45: bb1815, 46: bb1816, 62: bb1817, otherwise: bb1818];
    }

    bb1815: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S126;
        goto -> bb1921;
    }

    bb1816: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1817: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1818: {
        _1224 = Le(const 48_u8, copy _5);
        switchInt(move _1224) -> [0: bb1820, otherwise: bb1819];
    }

    bb1819: {
        _1225 = Le(copy _5, const 57_u8);
        switchInt(move _1225) -> [0: bb1820, otherwise: bb1825];
    }

    bb1820: {
        _1226 = Le(const 65_u8, copy _5);
        switchInt(move _1226) -> [0: bb1822, otherwise: bb1821];
    }

    bb1821: {
        _1227 = Le(copy _5, const 90_u8);
        switchInt(move _1227) -> [0: bb1822, otherwise: bb1825];
    }

    bb1822: {
        _1228 = Le(const 97_u8, copy _5);
        switchInt(move _1228) -> [0: bb1824, otherwise: bb1823];
    }

    bb1823: {
        _1229 = Le(copy _5, const 122_u8);
        switchInt(move _1229) -> [0: bb1824, otherwise: bb1825];
    }

    bb1824: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1825: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S127;
        goto -> bb1921;
    }

    bb1826: {
        StorageLive(_1231);
        StorageLive(_1230);
        _1230 = copy _2;
        _1231 = Lt(move _1230, copy _4);
        switchInt(move _1231) -> [0: bb1827, otherwise: bb1828];
    }

    bb1827: {
        StorageDead(_1230);
        _5 = const 0_u8;
        goto -> bb1830;
    }

    bb1828: {
        StorageDead(_1230);
        StorageLive(_1233);
        StorageLive(_1232);
        _1232 = copy _2;
        _1233 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1232) -> [return: bb1829, unwind unreachable];
    }

    bb1829: {
        StorageDead(_1232);
        _5 = copy (*_1233);
        StorageDead(_1233);
        goto -> bb1830;
    }

    bb1830: {
        StorageDead(_1231);
        switchInt(copy _5) -> [45: bb1831, otherwise: bb1832];
    }

    bb1831: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S128;
        goto -> bb1921;
    }

    bb1832: {
        _1234 = Le(const 48_u8, copy _5);
        switchInt(move _1234) -> [0: bb1834, otherwise: bb1833];
    }

    bb1833: {
        _1235 = Le(copy _5, const 57_u8);
        switchInt(move _1235) -> [0: bb1834, otherwise: bb1839];
    }

    bb1834: {
        _1236 = Le(const 65_u8, copy _5);
        switchInt(move _1236) -> [0: bb1836, otherwise: bb1835];
    }

    bb1835: {
        _1237 = Le(copy _5, const 90_u8);
        switchInt(move _1237) -> [0: bb1836, otherwise: bb1839];
    }

    bb1836: {
        _1238 = Le(const 97_u8, copy _5);
        switchInt(move _1238) -> [0: bb1838, otherwise: bb1837];
    }

    bb1837: {
        _1239 = Le(copy _5, const 122_u8);
        switchInt(move _1239) -> [0: bb1838, otherwise: bb1839];
    }

    bb1838: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1839: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S129;
        goto -> bb1921;
    }

    bb1840: {
        StorageLive(_1241);
        StorageLive(_1240);
        _1240 = copy _2;
        _1241 = Lt(move _1240, copy _4);
        switchInt(move _1241) -> [0: bb1841, otherwise: bb1842];
    }

    bb1841: {
        StorageDead(_1240);
        _5 = const 0_u8;
        goto -> bb1844;
    }

    bb1842: {
        StorageDead(_1240);
        StorageLive(_1243);
        StorageLive(_1242);
        _1242 = copy _2;
        _1243 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1242) -> [return: bb1843, unwind unreachable];
    }

    bb1843: {
        StorageDead(_1242);
        _5 = copy (*_1243);
        StorageDead(_1243);
        goto -> bb1844;
    }

    bb1844: {
        StorageDead(_1241);
        switchInt(copy _5) -> [45: bb1845, 46: bb1846, 62: bb1847, otherwise: bb1848];
    }

    bb1845: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S128;
        goto -> bb1921;
    }

    bb1846: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1847: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1848: {
        _1244 = Le(const 48_u8, copy _5);
        switchInt(move _1244) -> [0: bb1850, otherwise: bb1849];
    }

    bb1849: {
        _1245 = Le(copy _5, const 57_u8);
        switchInt(move _1245) -> [0: bb1850, otherwise: bb1855];
    }

    bb1850: {
        _1246 = Le(const 65_u8, copy _5);
        switchInt(move _1246) -> [0: bb1852, otherwise: bb1851];
    }

    bb1851: {
        _1247 = Le(copy _5, const 90_u8);
        switchInt(move _1247) -> [0: bb1852, otherwise: bb1855];
    }

    bb1852: {
        _1248 = Le(const 97_u8, copy _5);
        switchInt(move _1248) -> [0: bb1854, otherwise: bb1853];
    }

    bb1853: {
        _1249 = Le(copy _5, const 122_u8);
        switchInt(move _1249) -> [0: bb1854, otherwise: bb1855];
    }

    bb1854: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1855: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S129;
        goto -> bb1921;
    }

    bb1856: {
        StorageLive(_1251);
        StorageLive(_1250);
        _1250 = copy _2;
        _1251 = Lt(move _1250, copy _4);
        switchInt(move _1251) -> [0: bb1857, otherwise: bb1858];
    }

    bb1857: {
        StorageDead(_1250);
        _5 = const 0_u8;
        goto -> bb1860;
    }

    bb1858: {
        StorageDead(_1250);
        StorageLive(_1253);
        StorageLive(_1252);
        _1252 = copy _2;
        _1253 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1252) -> [return: bb1859, unwind unreachable];
    }

    bb1859: {
        StorageDead(_1252);
        _5 = copy (*_1253);
        StorageDead(_1253);
        goto -> bb1860;
    }

    bb1860: {
        StorageDead(_1251);
        switchInt(copy _5) -> [45: bb1861, otherwise: bb1862];
    }

    bb1861: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S130;
        goto -> bb1921;
    }

    bb1862: {
        _1254 = Le(const 48_u8, copy _5);
        switchInt(move _1254) -> [0: bb1864, otherwise: bb1863];
    }

    bb1863: {
        _1255 = Le(copy _5, const 57_u8);
        switchInt(move _1255) -> [0: bb1864, otherwise: bb1869];
    }

    bb1864: {
        _1256 = Le(const 65_u8, copy _5);
        switchInt(move _1256) -> [0: bb1866, otherwise: bb1865];
    }

    bb1865: {
        _1257 = Le(copy _5, const 90_u8);
        switchInt(move _1257) -> [0: bb1866, otherwise: bb1869];
    }

    bb1866: {
        _1258 = Le(const 97_u8, copy _5);
        switchInt(move _1258) -> [0: bb1868, otherwise: bb1867];
    }

    bb1867: {
        _1259 = Le(copy _5, const 122_u8);
        switchInt(move _1259) -> [0: bb1868, otherwise: bb1869];
    }

    bb1868: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1869: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S131;
        goto -> bb1921;
    }

    bb1870: {
        StorageLive(_1261);
        StorageLive(_1260);
        _1260 = copy _2;
        _1261 = Lt(move _1260, copy _4);
        switchInt(move _1261) -> [0: bb1871, otherwise: bb1872];
    }

    bb1871: {
        StorageDead(_1260);
        _5 = const 0_u8;
        goto -> bb1874;
    }

    bb1872: {
        StorageDead(_1260);
        StorageLive(_1263);
        StorageLive(_1262);
        _1262 = copy _2;
        _1263 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1262) -> [return: bb1873, unwind unreachable];
    }

    bb1873: {
        StorageDead(_1262);
        _5 = copy (*_1263);
        StorageDead(_1263);
        goto -> bb1874;
    }

    bb1874: {
        StorageDead(_1261);
        switchInt(copy _5) -> [45: bb1875, 46: bb1876, 62: bb1877, otherwise: bb1878];
    }

    bb1875: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S130;
        goto -> bb1921;
    }

    bb1876: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1877: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1878: {
        _1264 = Le(const 48_u8, copy _5);
        switchInt(move _1264) -> [0: bb1880, otherwise: bb1879];
    }

    bb1879: {
        _1265 = Le(copy _5, const 57_u8);
        switchInt(move _1265) -> [0: bb1880, otherwise: bb1885];
    }

    bb1880: {
        _1266 = Le(const 65_u8, copy _5);
        switchInt(move _1266) -> [0: bb1882, otherwise: bb1881];
    }

    bb1881: {
        _1267 = Le(copy _5, const 90_u8);
        switchInt(move _1267) -> [0: bb1882, otherwise: bb1885];
    }

    bb1882: {
        _1268 = Le(const 97_u8, copy _5);
        switchInt(move _1268) -> [0: bb1884, otherwise: bb1883];
    }

    bb1883: {
        _1269 = Le(copy _5, const 122_u8);
        switchInt(move _1269) -> [0: bb1884, otherwise: bb1885];
    }

    bb1884: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1885: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S131;
        goto -> bb1921;
    }

    bb1886: {
        StorageLive(_1271);
        StorageLive(_1270);
        _1270 = copy _2;
        _1271 = Lt(move _1270, copy _4);
        switchInt(move _1271) -> [0: bb1887, otherwise: bb1888];
    }

    bb1887: {
        StorageDead(_1270);
        _5 = const 0_u8;
        goto -> bb1890;
    }

    bb1888: {
        StorageDead(_1270);
        StorageLive(_1273);
        StorageLive(_1272);
        _1272 = copy _2;
        _1273 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1272) -> [return: bb1889, unwind unreachable];
    }

    bb1889: {
        StorageDead(_1272);
        _5 = copy (*_1273);
        StorageDead(_1273);
        goto -> bb1890;
    }

    bb1890: {
        StorageDead(_1271);
        _1274 = Le(const 48_u8, copy _5);
        switchInt(move _1274) -> [0: bb1892, otherwise: bb1891];
    }

    bb1891: {
        _1275 = Le(copy _5, const 57_u8);
        switchInt(move _1275) -> [0: bb1892, otherwise: bb1897];
    }

    bb1892: {
        _1276 = Le(const 65_u8, copy _5);
        switchInt(move _1276) -> [0: bb1894, otherwise: bb1893];
    }

    bb1893: {
        _1277 = Le(copy _5, const 90_u8);
        switchInt(move _1277) -> [0: bb1894, otherwise: bb1897];
    }

    bb1894: {
        _1278 = Le(const 97_u8, copy _5);
        switchInt(move _1278) -> [0: bb1896, otherwise: bb1895];
    }

    bb1895: {
        _1279 = Le(copy _5, const 122_u8);
        switchInt(move _1279) -> [0: bb1896, otherwise: bb1897];
    }

    bb1896: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1897: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S132;
        goto -> bb1921;
    }

    bb1898: {
        StorageLive(_1281);
        StorageLive(_1280);
        _1280 = copy _2;
        _1281 = Lt(move _1280, copy _4);
        switchInt(move _1281) -> [0: bb1899, otherwise: bb1900];
    }

    bb1899: {
        StorageDead(_1280);
        _5 = const 0_u8;
        goto -> bb1902;
    }

    bb1900: {
        StorageDead(_1280);
        StorageLive(_1283);
        StorageLive(_1282);
        _1282 = copy _2;
        _1283 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1282) -> [return: bb1901, unwind unreachable];
    }

    bb1901: {
        StorageDead(_1282);
        _5 = copy (*_1283);
        StorageDead(_1283);
        goto -> bb1902;
    }

    bb1902: {
        StorageDead(_1281);
        switchInt(copy _5) -> [46: bb1903, 62: bb1904, otherwise: bb1905];
    }

    bb1903: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1904: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1905: {
        _1284 = Le(const 48_u8, copy _5);
        switchInt(move _1284) -> [0: bb1907, otherwise: bb1906];
    }

    bb1906: {
        _1285 = Le(copy _5, const 57_u8);
        switchInt(move _1285) -> [0: bb1907, otherwise: bb1912];
    }

    bb1907: {
        _1286 = Le(const 65_u8, copy _5);
        switchInt(move _1286) -> [0: bb1909, otherwise: bb1908];
    }

    bb1908: {
        _1287 = Le(copy _5, const 90_u8);
        switchInt(move _1287) -> [0: bb1909, otherwise: bb1912];
    }

    bb1909: {
        _1288 = Le(const 97_u8, copy _5);
        switchInt(move _1288) -> [0: bb1911, otherwise: bb1910];
    }

    bb1910: {
        _1289 = Le(copy _5, const 122_u8);
        switchInt(move _1289) -> [0: bb1911, otherwise: bb1912];
    }

    bb1911: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1912: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S132;
        goto -> bb1921;
    }

    bb1913: {
        StorageLive(_1291);
        StorageLive(_1290);
        _1290 = copy _2;
        _1291 = Lt(move _1290, copy _4);
        switchInt(move _1291) -> [0: bb1914, otherwise: bb1915];
    }

    bb1914: {
        StorageDead(_1290);
        _5 = const 0_u8;
        goto -> bb1917;
    }

    bb1915: {
        StorageDead(_1290);
        StorageLive(_1293);
        StorageLive(_1292);
        _1292 = copy _2;
        _1293 = core::slice::<impl [u8]>::get_unchecked::<usize>(copy _1, move _1292) -> [return: bb1916, unwind unreachable];
    }

    bb1916: {
        StorageDead(_1292);
        _5 = copy (*_1293);
        StorageDead(_1293);
        goto -> bb1917;
    }

    bb1917: {
        StorageDead(_1291);
        switchInt(copy _5) -> [46: bb1918, 62: bb1919, otherwise: bb1920];
    }

    bb1918: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S7;
        goto -> bb1921;
    }

    bb1919: {
        _2 = Add(copy _2, const 1_usize);
        _6 = const State::S11;
        goto -> bb1921;
    }

    bb1920: {
        _6 = const State::S6;
        goto -> bb1921;
    }

    bb1921: {
        goto -> bb1;
    }

    bb1922: {
        unreachable;
    }
}

ALLOC0 (size: 16, align: 8) {
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
}
